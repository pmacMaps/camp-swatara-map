function t(t,e,n,r){Object.defineProperty(t,e,{get:n,set:r,enumerable:!0,configurable:!0})}var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("dqihR",(function(n,r){t(n.exports,"unitKebabDict",(function(){return h})),t(n.exports,"getUnitConversionFactor",(function(){return u})),t(n.exports,"uvComponentToVector",(function(){return d})),t(n.exports,"convertToLocalDirections",(function(){return g})),t(n.exports,"convertVectorFieldData",(function(){return m})),t(n.exports,"convertVectorFieldUnit",(function(){return w})),t(n.exports,"snapImageToSymbolTile",(function(){return x})),t(n.exports,"createVFMeshScalar",(function(){return S})),t(n.exports,"createVFMesh",(function(){return V})),t(n.exports,"sampleVectorField",(function(){return D}));var o=e("4jlRt"),i=e("1CpCt"),a=e("1wOrp"),s=e("2wUG0");const l=new Map;l.set("meter-per-second",1),l.set("kilometer-per-hour",.277778),l.set("knots",.514444),l.set("feet-per-second",.3048),l.set("mile-per-hour",.44704);const c=180/Math.PI,h=new(0,o.JSONMap)({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function u(t,e){return l.get(t)/l.get(e)||1}function f(t){return(450-t)%360}function d(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let i=Math.atan2(r,n)*c;return i=(360+i)%360,"geographic"===e&&(i=f(i)),[o,i]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=f(n)),n%=360;const r=t[0];return[r*Math.cos(n/c),r*Math.sin(n/c)]}function g(t,e,n,r="geographic"){if(!(0,s.isValidPixelBlock)(t)||(0,i.isNone)(n))return t;const o="vector-magdir"===e?t.clone():(0,i.unwrap)(m(t,e)),a=o.pixels[1];for(let t=0;t<a.length;t++)a[t]="geographic"===r?(a[t]+n[t]+270)%360:(a[t]+360-n[t])%360;return"vector-magdir"===e?o:m(o,"vector-magdir")}function m(t,e,n="geographic",r=1){if(!(0,s.isValidPixelBlock)(t))return t;const{pixels:o,width:i,height:l}=t,c=i*l,h=o[0],u=o[1],f=t.pixelType.startsWith("f")?t.pixelType:"f32",g=a.default.createEmptyBand(f,c),m=a.default.createEmptyBand(f,c);let w=0;for(let t=0;t<l;t++)for(let t=0;t<i;t++)"vector-uv"===e?([g[w],m[w]]=d([h[w],u[w]],n),g[w]*=r):([g[w],m[w]]=p([h[w],u[w]],n),g[w]*=r,m[w]*=r),w++;const x=new(0,a.default)({pixelType:f,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[g,m]});return x.updateStatistics(),x}function w(t,e,n=1){if(1===n||!(0,s.isValidPixelBlock)(t))return t;const r=t.clone(),{pixels:o,width:i,height:a}=r,l=o[0],c=o[1];let h=0;for(let t=0;t<a;t++)for(let t=0;t<i;t++)"vector-uv"===e?(l[h]*=n,c[h]*=n):l[h]*=n,h++;return r.updateStatistics(),r}function x(t,e,n,r,o){if(!(0,i.isSome)(o)||!o.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const a=o.xmin,s=o.ymax,l=(t.xmax-t.xmin)/e*r,c=(t.ymax-t.ymin)/n*r,h=(l+c)/2;return t.xmin=a+Math.floor((t.xmin-a)/l)*l,t.xmax=a+Math.ceil((t.xmax-a)/l)*l,t.ymin=s+Math.floor((t.ymin-s)/c)*c,t.ymax=s+Math.ceil((t.ymax-s)/c)*c,{extent:t,width:Math.round(t.width/l),height:Math.round(t.height/c),resolution:h}}const M=function(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,i=13*o,a=-7*o,s=-2*o,l=-16*o,c=21.75,[h,u]=k(0,e+i,n,c),[f,d]=k(t-5.5,e+a,n,c),[p,g]=k(t+5.5,e+a,n,c),[m,w]=k(t-1.5,e+s,n,c),[x,M]=k(t+1.5,e+s,n,c),[y,v]=k(t-1.5,e+l,n,c),[b,P]=k(t+1.5,e+l,n,c);return[h,u,f,d,m,w,x,M,p,g,y,v,b,P]}(0,0,0);function y(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=n?-1:1,o=5*r,i=20*r,a=25*r,s=45,l=2*r;let[c,h]=[5,0-i],[u,f]=[c+2,h],[d,p]=[u-0,f+l],[g,m]=[-5,0-a],[w,x]=[g+0,m-l],M=Math.ceil(t/5),y=Math.floor(M/10);M-=8*y;const v=[],b=[];for(let t=0;t<M/2;t++,y--){y<=0&&M%2==1&&t===(M-1)/2&&(g=0,w=g+0,m=(m+h)/2,x=m-l);const[n,r]=k(g,m,e,s);if(y>0){const[t,o]=k(u,m,e,s),[i,a]=k(c,h,e,s);v.push(t),v.push(o),v.push(n),v.push(r),v.push(i),v.push(a)}else{const[t,o]=k(u,f,e,s),[i,a]=k(d,p,e,s),[l,c]=k(w,x,e,s);b.push(n),b.push(r),b.push(l),b.push(c),b.push(i),b.push(a),b.push(t),b.push(o)}m+=o,h+=o,f+=o,p+=o,x+=o}const[P,A]=k(5,0+i,e,s),[F,I]=k(7,0+i,e,s),[S,V]=k(5,0-a,e,s),[D,T]=k(7,0-a,e,s);return{pennants:v,barbs:b,shaft:[P,A,F,I,S,V,D,T]}}function k(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+i-n)%(2*Math.PI)]}const v=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],P=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function A(t,e,n,r){const o=u(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*o)break}else if(t<=e[i]*o)break;return Math.min(i-1,e.length-2)}function F(t,e,n,r,o){let i=0;switch(e){case"beaufort_kn":i=A(t,v,"knots",n);break;case"beaufort_km":i=A(t,v,"kilometer-per-hour",n);break;case"beaufort_ft":i=A(t,v,"feet-per-second",n);break;case"beaufort_m":i=A(t,v,"meter-per-second",n);break;case"classified_arrow":i=A(t,o,r,n);break;case"ocean_current_m":i=A(t,b,"meter-per-second",n);break;case"ocean_current_kn":i=A(t,P,"knots",n)}return i}const I=[];function S(t,e){let n=0,r=0;const{width:o,height:i,mask:a}=t,s=t.pixels[0],l=[],c=[],f=u(h.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?5:Number.MAX_VALUE;for(let t=0;t<i;t++)for(let e=0;e<o;e++){const h=s[t*o+e]*f;if((!a||a[t*o+e])&&h<d){for(let r=0;r<4;r++)l[n++]=(e+.5)/o,l[n++]=(t+.5)/i,l[n++]=r<2?-.5:.5,l[n++]=r%2==0?-.5:.5,l[n++]=0,l[n++]=h;const a=4*(n/24-1);c[r++]=a,c[r++]=a+1,c[r++]=a+2,c[r++]=a+1,c[r++]=a+2,c[r++]=a+3}}return{vertexData:new Float32Array(l),indexData:new Uint32Array(c)}}function V(t,e){return"simple_scalar"===e.style?S(t,e):"wind_speed"===e.style?function(t,e){if(0===I.length)for(let t=0;t<30;t++)I.push(y(5*t,0));const n=u(h.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:i}=t,a=t.pixels[0],s=t.pixels[1],l=[],c=[];let f=0,d=0;for(let t=0;t<o;t++)for(let e=0;e<r;e++){const h=t*r+e,u=a[h]*n;if((!i||i[t*r+e])&&u>=5){const n=(s[h]+360)%360/180*Math.PI,{pennants:i,barbs:a,shaft:p}=I[Math.min(Math.floor(u/5),29)];if(i.length+a.length===0)continue;let g=l.length/6;const m=(e+.5)/r,w=(t+.5)/o;for(let t=0;t<i.length;t+=2)l[f++]=m,l[f++]=w,l[f++]=i[t],l[f++]=i[t+1]+n,l[f++]=0,l[f++]=u;for(let t=0;t<a.length;t+=2)l[f++]=m,l[f++]=w,l[f++]=a[t],l[f++]=a[t+1]+n,l[f++]=0,l[f++]=u;for(let t=0;t<p.length;t+=2)l[f++]=m,l[f++]=w,l[f++]=p[t],l[f++]=p[t+1]+n,l[f++]=0,l[f++]=u;for(let t=0;t<i.length/6;t++)c[d++]=g,c[d++]=g+1,c[d++]=g+2,g+=3;for(let t=0;t<a.length/8;t++)c[d++]=g,c[d++]=g+1,c[d++]=g+2,c[d++]=g+1,c[d++]=g+2,c[d++]=g+3,g+=4;c[d++]=g+0,c[d++]=g+1,c[d++]=g+2,c[d++]=g+1,c[d++]=g+3,c[d++]=g+2,g+=4}}return{vertexData:new Float32Array(l),indexData:new Uint32Array(c)}}(t,e):function(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:i}=e,a=h.fromJSON(r),s=h.fromJSON(o);let l=0,c=0;const{width:u,height:f,mask:d}=t,p=t.pixels[0],g=t.pixels[1],m=d?d.filter((t=>t>0)).length:u*f,w=new Float32Array(42*m),x=new Uint32Array(15*m);for(let t=0;t<f;t++)for(let e=0;e<u;e++){const r=t*u+e;if(!d||d[t*u+e]){const o=(g[r]+360)%360/180*Math.PI,h=F(p[r],n,a,s,i);for(let n=0;n<M.length;n+=2)w[l++]=(e+.5)/u,w[l++]=(t+.5)/f,w[l++]=M[n],w[l++]=M[n+1]+o,w[l++]=h,w[l++]=p[r];const d=7*(l/42-1);x[c++]=d,x[c++]=d+1,x[c++]=d+2,x[c++]=d+0,x[c++]=d+4,x[c++]=d+3,x[c++]=d+0,x[c++]=d+2,x[c++]=d+3,x[c++]=d+2,x[c++]=d+5,x[c++]=d+3,x[c++]=d+5,x[c++]=d+6,x[c++]=d+3}}return{vertexData:w,indexData:x}}(t,e)}function D(t,e,n,r=[0,0],o=.5){const{width:i,height:s,mask:l}=t,[c,h]=t.pixels,[u,f]=r,g=Math.round((i-u)/n),m=Math.round((s-f)/n),w=g*m,x=new Float32Array(w),M=new Float32Array(w),y=new Uint8Array(w),k="vector-uv"===e;for(let t=0;t<m;t++)for(let e=0;e<g;e++){let r=0;const a=t*g+e,m=Math.max(0,t*n+f),w=Math.max(0,e*n+u),v=Math.min(s,m+n),b=Math.min(i,w+n);for(let t=m;t<v;t++)for(let e=w;e<b;e++){const n=t*i+e;if(!l||l[n]){r++;const t=k?[c[n],h[n]]:[c[n],(360+h[n])%360],[e,o]=k?t:p(t);x[a]+=e,M[a]+=o}}if(r>=(v-m)*(b-w)*(1-o)){y[a]=1;const[t,e]=d([x[a]/r,M[a]/r]);x[a]=t,M[a]=e}else y[a]=0,x[a]=0,M[a]=0}const v=new(0,a.default)({width:g,height:m,pixels:[x,M],mask:y});return v.updateStatistics(),v}})),e.register("fDLIP",(function(n,r){t(n.exports,"createStreamlinesMesh",(function(){return f})),t(n.exports,"loadImagery",(function(){return g})),e("ixrNB");var o=e("6TszD"),i=e("8TN87"),a=e("1CpCt"),s=e("lHg4e"),l=e("lQo64"),c=e("fau59"),h=e("2WnyR");const u=o.default.getLogger("esri.views.2d.engine.flow.dataUtils");async function f(t,e,n){const r=performance.now(),o=function(t,e){const n=function(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let a=0;for(let t=-o;t<=o;t++){const e=Math.exp(-t*t/(r*r));i[t+o]=e,a+=e}for(let t=-o;t<=o;t++)i[t+o]/=a;const s=new Float32Array(t.length);for(let r=0;r<n;r++)for(let n=0;n<e;n++){let a=0,l=0;for(let s=-o;s<=o;s++){if(n+s<0||n+s>=e)continue;const c=i[s+o];a+=c*t[2*(r*e+(n+s))+0],l+=c*t[2*(r*e+(n+s))+1]}s[2*(r*e+n)+0]=a,s[2*(r*e+n)+1]=l}const l=new Float32Array(t.length);for(let t=0;t<e;t++)for(let r=0;r<n;r++){let a=0,c=0;for(let l=-o;l<=o;l++){if(r+l<0||r+l>=n)continue;const h=i[l+o];a+=h*s[2*((r+l)*e+t)+0],c+=h*s[2*((r+l)*e+t)+1]}l[2*(r*e+t)+0]=a,l[2*(r*e+t)+1]=c}return l}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const a=t-o,s=r-i,l=o,c=i,h=o<e.width-1?o+1:o,u=i<e.height-1?i+1:i,f=n[2*(c*e.width+l)],d=n[2*(c*e.width+h)],p=n[2*(u*e.width+l)],g=n[2*(u*e.width+h)],m=n[2*(c*e.width+l)+1],w=n[2*(c*e.width+h)+1];return[(f*(1-s)+p*s)*(1-a)+(d*(1-s)+g*s)*a,(m*(1-s)+n[2*(u*e.width+l)+1]*s)*(1-a)+(w*(1-s)+n[2*(u*e.width+h)+1]*s)*a]}:(t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}(t,e),i=performance.now(),a=function(t,e,n,r){const o=[],i=new(0,l.default),a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(r*a),h=new Int32Array(s*c);for(let t=0;t<h.length;t++)h[t]=-1;const u=[];for(let e=0;e<r;e+=t.lineSpacing)for(let r=0;r<n;r+=t.lineSpacing)u.push({x:r,y:e,sort:i.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:n,y:r}of u)if(i.getFloat()<t.density){const i=d(t,e,n,r,o.length,h,s,c,a);if(i.length<2)continue;o.push(i)}return o}(t,o,e.width,e.height),c=performance.now(),h=function(t,e){const n=new(0,l.default),r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),i=new Array(t.length);let a=0,s=0;for(const r of t){const t=a;for(const t of r)o[4*a+0]=t.x,o[4*a+1]=t.y,o[4*a+2]=t.t,o[4*a+3]=t.speed,a++;i[s++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:i}}(a,!0),f=performance.now(),p=function(t,e=10){const{lineVertices:n,lineDescriptors:r}=t;let o=0,i=0;for(const t of r)o+=2*t.numberOfVertices,i+=6*(t.numberOfVertices-1);const a=new Float32Array(9*o),s=new Uint32Array(i);let l=0,c=0;function h(){s[c++]=l-2,s[c++]=l,s[c++]=l-1,s[c++]=l,s[c++]=l+1,s[c++]=l-1}function u(t,e,n,r,o,i,s,c){const h=9*l;let u=0;a[h+u++]=t,a[h+u++]=e,a[h+u++]=1,a[h+u++]=n,a[h+u++]=i,a[h+u++]=s,a[h+u++]=r/2,a[h+u++]=o/2,a[h+u++]=c,l++,a[h+u++]=t,a[h+u++]=e,a[h+u++]=-1,a[h+u++]=n,a[h+u++]=i,a[h+u++]=s,a[h+u++]=-r/2,a[h+u++]=-o/2,a[h+u++]=c,l++}for(const t of r){const{totalTime:r,timeSeed:o}=t;let i=null,a=null,s=null,l=null,c=null,f=null;for(let d=0;d<t.numberOfVertices;d++){const p=n[4*(t.startVertex+d)+0],g=n[4*(t.startVertex+d)+1],m=n[4*(t.startVertex+d)+2],w=n[4*(t.startVertex+d)+3];let x=null,M=null,y=null,k=null;if(d>0){x=p-i,M=g-a;const t=Math.sqrt(x*x+M*M);if(x/=t,M/=t,d>1){let t=x+c,n=M+f;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*x+n*M),e);t*=o,n*=o,y=-n,k=t}else y=-M,k=x;null!==y&&null!==k&&(u(i,a,s,y,k,r,o,w),h())}i=p,a=g,s=m,c=x,f=M,l=w}u(i,a,s,-f,c,r,o,l)}return{vertexData:a,indexData:s}}(h),g=performance.now();if(t.profile){const t={"_createFlowFieldFromData()":Math.round(i-r),"_getStreamlines()":Math.round(c-i),"createAnimatedLinesData()":Math.round(f-c),"createLinesMesh()":Math.round(g-f),"Total elapsed time":Math.round(g-r)};u.info("createStreamlinesMesh profile",t)}return await Promise.resolve(),(0,s.throwIfAborted)(n),p}function d(t,e,n,r,o,i,a,s,l){const c=[];let h=n,u=r,f=0,[d,p]=e(h,u);d*=t.velocityScale,p*=t.velocityScale;const g=Math.sqrt(d*d+p*p);let m,w;c.push({x:h,y:u,t:f,speed:g});for(let n=0;n<t.verticesPerLine;n++){let[n,r]=e(h,u);n*=t.velocityScale,r*=t.velocityScale;const d=Math.sqrt(n*n+r*r);if(d<t.minSpeedThreshold)return c;const p=n/d,g=r/d;if(h+=p*t.segmentLength,u+=g*t.segmentLength,f+=t.segmentLength/d,Math.acos(p*m+g*w)>t.maxTurnAngle)return c;if(t.mergeLines){const t=Math.round(h*l),e=Math.round(u*l);if(t<0||t>a-1||e<0||e>s-1)return c;const n=i[e*a+t];if(-1!==n&&n!==o)return c;i[e*a+t]=o}c.push({x:h,y:u,t:f,speed:d}),m=p,w=g}return c}function p(t,e){const n=e.pixels,{width:r,height:o}=e,a=new Float32Array(r*o*2);if("vector-uv"===t)for(let t=0;t<r*o;t++)a[2*t+0]=n[0][t],a[2*t+1]=-n[1][t];else if("vector-magdir"===t)for(let t=0;t<r*o;t++){const e=n[0][t],r=(0,i.deg2rad)(n[1][t]),o=Math.cos(r-Math.PI/2),s=Math.sin(r-Math.PI/2);a[2*t+0]=o*e,a[2*t+1]=s*e}return{data:a,width:r,height:o}}async function g(t,e,n,r,o,i){const a=(0,c.getInfo)(e.spatialReference);if(!a)return m(t,e,n,r,o,i);const[s,l]=a.valid,u=l-s,f=Math.ceil(e.width/u),d=e.width/f,p=Math.round(n/f);let g=e.xmin;const w=[];for(let n=0;n<f;n++){const n=new(0,h.default)({xmin:g,xmax:g+d,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});w.push(m(t,n,p,r,o,i)),g+=d}const x=await Promise.all(w),M={data:new Float32Array(n*r*2),width:n,height:r};let y=0;for(const t of x){for(let e=0;e<t.height;e++)for(let r=0;r<t.width;r++)y+r>=n||(M.data[2*(e*n+y+r)+0]=t.data[2*(e*t.width+r)+0],M.data[2*(e*n+y+r)+1]=t.data[2*(e*t.width+r)+1]);y+=t.width}return M}async function m(t,e,n,r,o,i){const s={requestProjectedLocalDirections:!0,signal:i};if((0,a.isSome)(o)&&(s.timeExtent=o),"imagery"===t.type){await t.load({signal:i});const o=t.rasterInfo.dataType,l=await t.fetchImage(e,n,r,s);return!l||(0,a.isNone)(l.pixelData)||(0,a.isNone)(l.pixelData.pixelBlock)?{data:new Float32Array(n*r*2),width:n,height:r}:p(o,l.pixelData.pixelBlock)}await t.load({signal:i});const l=t.rasterInfo.dataType,c=await t.fetchPixels(e,n,r,s);return!c||(0,a.isNone)(c.pixelBlock)?{data:new Float32Array(n*r*2),width:n,height:r}:p(l,c.pixelBlock)}}));
//# sourceMappingURL=ImageryLayer.d5da9ccf.js.map
