!function(){function e(e,r,t,n){Object.defineProperty(e,r,{get:t,set:n,enumerable:!0,configurable:!0})}var r=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;r.register("bfGBv",(function(t,n){e(t.exports,"extendedSpatialReferenceInfo",(function(){return a})),e(t.exports,"clip",(function(){return c})),e(t.exports,"cut",(function(){return f})),e(t.exports,"contains",(function(){return d})),e(t.exports,"crosses",(function(){return s})),e(t.exports,"distance",(function(){return p})),e(t.exports,"equals",(function(){return l})),e(t.exports,"intersects",(function(){return h})),e(t.exports,"touches",(function(){return x})),e(t.exports,"within",(function(){return g})),e(t.exports,"disjoint",(function(){return y})),e(t.exports,"overlaps",(function(){return A})),e(t.exports,"relate",(function(){return v})),e(t.exports,"isSimple",(function(){return G})),e(t.exports,"simplify",(function(){return m})),e(t.exports,"convexHull",(function(){return w})),e(t.exports,"difference",(function(){return R})),e(t.exports,"symmetricDifference",(function(){return E})),e(t.exports,"intersect",(function(){return M})),e(t.exports,"union",(function(){return V})),e(t.exports,"offset",(function(){return b})),e(t.exports,"buffer",(function(){return P})),e(t.exports,"geodesicBuffer",(function(){return Z})),e(t.exports,"nearestCoordinate",(function(){return I})),e(t.exports,"nearestVertex",(function(){return T})),e(t.exports,"nearestVertices",(function(){return S})),e(t.exports,"rotate",(function(){return z})),e(t.exports,"flipHorizontal",(function(){return _})),e(t.exports,"flipVertical",(function(){return H})),e(t.exports,"generalize",(function(){return J})),e(t.exports,"densify",(function(){return N})),e(t.exports,"geodesicDensify",(function(){return O})),e(t.exports,"planarArea",(function(){return Y})),e(t.exports,"planarLength",(function(){return D})),e(t.exports,"geodesicArea",(function(){return L})),e(t.exports,"geodesicLength",(function(){return j}));var o=r("bToqq"),i=r("eiYTg");function u(e){return Array.isArray(e)?e[0].spatialReference:e&&e.spatialReference}function a(e){return o.G.extendedSpatialReferenceInfo(e)}function c(e,r){return o.G.clip(i.hydratedAdapter,u(e),e,r)}function f(e,r){return o.G.cut(i.hydratedAdapter,u(e),e,r)}function d(e,r){return o.G.contains(i.hydratedAdapter,u(e),e,r)}function s(e,r){return o.G.crosses(i.hydratedAdapter,u(e),e,r)}function p(e,r,t){return o.G.distance(i.hydratedAdapter,u(e),e,r,t)}function l(e,r){return o.G.equals(i.hydratedAdapter,u(e),e,r)}function h(e,r){return o.G.intersects(i.hydratedAdapter,u(e),e,r)}function x(e,r){return o.G.touches(i.hydratedAdapter,u(e),e,r)}function g(e,r){return o.G.within(i.hydratedAdapter,u(e),e,r)}function y(e,r){return o.G.disjoint(i.hydratedAdapter,u(e),e,r)}function A(e,r){return o.G.overlaps(i.hydratedAdapter,u(e),e,r)}function v(e,r,t){return o.G.relate(i.hydratedAdapter,u(e),e,r,t)}function G(e){return o.G.isSimple(i.hydratedAdapter,u(e),e)}function m(e){return o.G.simplify(i.hydratedAdapter,u(e),e)}function w(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return o.G.convexHull(i.hydratedAdapter,u(e),e,r)}function R(e,r){return o.G.difference(i.hydratedAdapter,u(e),e,r)}function E(e,r){return o.G.symmetricDifference(i.hydratedAdapter,u(e),e,r)}function M(e,r){return o.G.intersect(i.hydratedAdapter,u(e),e,r)}function V(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return o.G.union(i.hydratedAdapter,u(e),e,r)}function b(e,r,t,n,a,c){return o.G.offset(i.hydratedAdapter,u(e),e,r,t,n,a,c)}function P(e,r,t){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return o.G.buffer(i.hydratedAdapter,u(e),e,r,t,n)}function Z(e,r,t,n,a,c){return o.G.geodesicBuffer(i.hydratedAdapter,u(e),e,r,t,n,a,c)}function I(e,r){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return o.G.nearestCoordinate(i.hydratedAdapter,u(e),e,r,t)}function T(e,r){return o.G.nearestVertex(i.hydratedAdapter,u(e),e,r)}function S(e,r,t,n){return o.G.nearestVertices(i.hydratedAdapter,u(e),e,r,t,n)}function q(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent.center:null}function z(e,r,t){var n;if(null==e)throw new Error("Illegal Argument Exception");var i=e.spatialReference;if(null==(t=null!=(n=t)?n:q(e)))throw new Error("Illegal Argument Exception");var u=e.constructor.fromJSON(o.G.rotate(e,r,t));return u.spatialReference=i,u}function _(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");var n=e.spatialReference;if(null==(r=null!=(t=r)?t:q(e)))throw new Error("Illegal Argument Exception");var i=e.constructor.fromJSON(o.G.flipHorizontal(e,r));return i.spatialReference=n,i}function H(e,r){var t;if(null==e)throw new Error("Illegal Argument Exception");var n=e.spatialReference;if(null==(r=null!=(t=r)?t:q(e)))throw new Error("Illegal Argument Exception");var i=e.constructor.fromJSON(o.G.flipVertical(e,r));return i.spatialReference=n,i}function J(e,r,t,n){return o.G.generalize(i.hydratedAdapter,u(e),e,r,t,n)}function N(e,r,t){return o.G.densify(i.hydratedAdapter,u(e),e,r,t)}function O(e,r,t){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return o.G.geodesicDensify(i.hydratedAdapter,u(e),e,r,t,n)}function Y(e,r){return o.G.planarArea(i.hydratedAdapter,u(e),e,r)}function D(e,r){return o.G.planarLength(i.hydratedAdapter,u(e),e,r)}function L(e,r,t){return o.G.geodesicArea(i.hydratedAdapter,u(e),e,r,t)}function j(e,r,t){return o.G.geodesicLength(i.hydratedAdapter,u(e),e,r,t)}})),r.register("eiYTg",(function(t,n){e(t.exports,"hydratedAdapter",(function(){return f}));var o=r("gINRd"),i=r("eaHvJ"),u=r("d1Fqh"),a=r("fTq43"),c=r("95Tg0"),f={convertToGEGeometry:function(e,r){if(null==r)return null;var t="cache"in r?r.cache._geVersion:void 0;return null==t&&(t=e.convertJSONToGeometry(r),"cache"in r&&(r.cache._geVersion=t)),t},exportPoint:function(e,r,t){var n=e.hasZ(r),o=e.hasM(r),i=new(0,u.default)({x:e.getPointX(r),y:e.getPointY(r),spatialReference:t});return n&&(i.z=e.getPointZ(r)),o&&(i.m=e.getPointM(r)),i.cache._geVersion=r,i},exportPolygon:function(e,r,t){var n=new(0,a.default)({rings:e.exportPaths(r),hasZ:e.hasZ(r),hasM:e.hasM(r),spatialReference:t});return n.cache._geVersion=r,n},exportPolyline:function(e,r,t){var n=new(0,c.default)({paths:e.exportPaths(r),hasZ:e.hasZ(r),hasM:e.hasM(r),spatialReference:t});return n.cache._geVersion=r,n},exportMultipoint:function(e,r,t){var n=new(0,i.default)({hasZ:e.hasZ(r),hasM:e.hasM(r),points:e.exportPoints(r),spatialReference:t});return n.cache._geVersion=r,n},exportExtent:function(e,r,t){var n=e.hasZ(r),i=e.hasM(r),u=new(0,o.default)({xmin:e.getXMin(r),ymin:e.getYMin(r),xmax:e.getXMax(r),ymax:e.getYMax(r),spatialReference:t});if(n){var a=e.getZExtent(r);u.zmin=a.vmin,u.zmax=a.vmax}if(i){var c=e.getMExtent(r);u.mmin=c.vmin,u.mmax=c.vmax}return u.cache._geVersion=r,u}}}))}();
//# sourceMappingURL=geometryEngine.ae9c2a60.js.map
