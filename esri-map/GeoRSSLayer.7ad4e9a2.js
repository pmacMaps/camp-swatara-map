!function(){var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("eyFte",(function(t,r){var o,i,l,s,n;o=t.exports,Object.defineProperty(o,"__esModule",{value:!0,configurable:!0}),i=t.exports,l="default",s=function(){return I},Object.defineProperty(i,l,{get:s,set:n,enumerable:!0,configurable:!0});var a=e("7eJjO"),p=e("cu9iz"),y=e("9pNSx");e("cM5QQ");var u=e("8NioF"),d=e("10vEZ"),f=e("kYueh"),c=e("iho5X");e("iJAIC"),e("lNwWH"),e("2VlWd");var h=e("eB8sj"),v=e("fcwIv"),g=e("gINRd"),S=e("eY5Yp"),m=e("4LDxK"),b=e("gIXJ2"),_=e("5N5S1"),w=e("9bAYR"),C=e("13Qxf"),x=e("3GzOb"),R=e("gRgX5"),G=e("j9ZJv"),P=e("e6bLq"),j=e("gb4f1"),L=e("ioNzP"),F=e("SVQ32");const O=["atom","xml"],E={base:G.default,key:"type",typeMap:{"simple-line":P.default},errorContext:"symbol"},M={base:G.default,key:"type",typeMap:{"picture-marker":j.default,"simple-marker":L.default},errorContext:"symbol"},k={base:G.default,key:"type",typeMap:{"simple-fill":F.default},errorContext:"symbol"};let N=class extends((0,b.BlendLayer)((0,C.RefreshableLayer)((0,_.OperationalLayer)((0,w.PortalLayer)((0,x.ScaleRangeLayer)((0,u.MultiOriginJSONMixin)(m.default))))))){normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{var t;const r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&(null===(t=r.outline)||void 0===t?void 0:t.style.includes("esriSFS"))&&(r.outline.style="esriSLSSolid")})),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,f.getFilename)(this.url,O)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(d.throwIfAbortError).then((()=>this._fetchService(t))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var t;const r=this.spatialReference,{data:o}=await(0,y.default)(p.default.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:(0,S.isWGS84)(r)?void 0:null!==(t=r.wkid)&&void 0!==t?t:JSON.stringify(r)},signal:e});return o}_hasGeometry(e){var t,r;return null!==(r=null===(t=this.featureCollections)||void 0===t?void 0:t.some((t=>{var r,o;return(null===(r=t.featureSet)||void 0===r?void 0:r.geometryType)===e&&(null===(o=t.featureSet.features)||void 0===o?void 0:o.length)>0})))&&void 0!==r&&r}constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}};(0,a._)([(0,c.property)()],N.prototype,"description",void 0),(0,a._)([(0,c.property)()],N.prototype,"featureCollections",void 0),(0,a._)([(0,h.reader)("service","featureCollections",["featureCollection.layers"])],N.prototype,"readFeatureCollections",null),(0,a._)([(0,c.property)({type:g.default,json:{name:"lookAtExtent"}})],N.prototype,"fullExtent",void 0),(0,a._)([(0,c.property)(R.id)],N.prototype,"id",void 0),(0,a._)([(0,c.property)(R.legendEnabled)],N.prototype,"legendEnabled",void 0),(0,a._)([(0,c.property)({types:E,json:{write:!0}})],N.prototype,"lineSymbol",void 0),(0,a._)([(0,c.property)({type:["show","hide"]})],N.prototype,"listMode",void 0),(0,a._)([(0,c.property)({types:M,json:{write:!0}})],N.prototype,"pointSymbol",void 0),(0,a._)([(0,c.property)({types:k,json:{write:!0}})],N.prototype,"polygonSymbol",void 0),(0,a._)([(0,c.property)({type:["GeoRSS"]})],N.prototype,"operationalLayerType",void 0),(0,a._)([(0,c.property)(R.url)],N.prototype,"url",void 0),(0,a._)([(0,c.property)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],N.prototype,"title",null),(0,a._)([(0,c.property)({readOnly:!0,json:{read:!1},value:"geo-rss"})],N.prototype,"type",void 0),N=(0,a._)([(0,v.subclass)("esri.layers.GeoRSSLayer")],N);const I=N}))}();
//# sourceMappingURL=GeoRSSLayer.7ad4e9a2.js.map
