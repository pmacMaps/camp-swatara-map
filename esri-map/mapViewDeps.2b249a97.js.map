{"mappings":"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","sources":["node_modules/@arcgis/core/views/2d/engine/brushes.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js","node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","node_modules/@arcgis/core/chunks/vec4f32.js","node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js","node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js","node_modules/@arcgis/core/views/2d/engine/webgl/techniques/Technique.js","node_modules/@arcgis/core/views/2d/engine/webgl/techniques/dotDensity/TechniqueDotDensity.js","node_modules/@arcgis/core/views/2d/engine/webgl/techniques/heatmap/TechniqueHeatmap.js","node_modules/@arcgis/core/views/2d/engine/webgl/techniques/pieChart/TechniquePieChart.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js","node_modules/@arcgis/core/views/2d/engine/webgl/effects/Effect.js","node_modules/@arcgis/core/views/webgl/heatmapTextureUtils.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js","node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js","node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","node_modules/@arcgis/core/views/webgl/capabilities/isWebGL2Context.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js","node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js","node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushBitmap.js\";import s from\"./webgl/brushes/BrushClip.js\";import e from\"./webgl/brushes/BrushOverlay.js\";import o from\"./webgl/brushes/WGLBrushDotDensity.js\";import m from\"./webgl/brushes/WGLBrushHeatmap.js\";import l from\"./webgl/brushes/WGLBrushInfo.js\";import t from\"./webgl/brushes/WGLBrushPieChart.js\";import b from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as h}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as i}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as u}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as p}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as L}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import f from\"./webgl/brushes/WGLGeometryBrushFill.js\";import B from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import g from\"./webgl/brushes/WGLGeometryBrushLine.js\";import G from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import j from\"./webgl/brushes/WGLGeometryBrushText.js\";const w={marker:G,line:g,fill:f,text:j,label:B,clip:s,stencil:b,bitmap:r,overlay:e,tileInfo:l,vtlBackground:h,vtlFill:u,vtlLine:p,vtlCircle:i,vtlSymbol:L,dotDensity:o,heatmap:m,pieChart:t};export{w as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TEXTURE_BINDING_BITMAP as e}from\"../definitions.js\";import t from\"../VertexStream.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as s,BlendFactor as n,CompareFunction as r}from\"../../../../webgl/enums.js\";const a={nearest:{defines:[],samplingMode:s.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:s.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:s.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:s.LINEAR_MIPMAP_LINEAR,mips:!0}},o=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?a.bilinear:a.nearest}return a[i.samplingMode]};class d extends i{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0)}draw(i,s){const{context:a,renderingOptions:d,painter:l,requestRender:m,allowDelayedRender:c}=i;if(!s.source||!s.isReady)return;const p=o(i,s,d),u=l.materialManager.getProgram(this._desc,p.defines);if(c&&null!=m&&!u.compiled)return void m();i.timeline.begin(this.name),\"additive\"===s.blendFunction?a.setBlendFunctionSeparate(n.ONE,n.ONE,n.ONE,n.ONE):a.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),a.setStencilFunction(r.EQUAL,s.stencilRef,255),this._quad||(this._quad=new t(a,[0,0,1,0,0,1,1,1]));const{coordScale:f,computedOpacity:_,transforms:E}=s;s.setSamplingProfile(p),s.bind(i.context,e),a.useProgram(u),u.setUniformMatrix3fv(\"u_dvsMat3\",E.dvs),u.setUniform1i(\"u_texture\",e),u.setUniform2fv(\"u_coordScale\",f),u.setUniform1f(\"u_opacity\",_),this._quad.draw(),i.timeline.end(this.name)}}export{d as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{BufferObject as t}from\"../../../webgl/BufferObject.js\";import{Usage as e,DataType as r,PrimitiveType as s}from\"../../../webgl/enums.js\";import{VertexArrayObject as i}from\"../../../webgl/VertexArrayObject.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";class n{constructor(s,n){this._rctx=s,this._vertexBuffer=t.createVertex(s,e.STATIC_DRAW,new Uint16Array(n)),this._vao=new i(s,new Map([[\"a_position\",0]]),{geometry:[new o(\"a_position\",2,r.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(s.TRIANGLE_STRIP,0,this._count)}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../chunks/vec4f32.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as o,CompareFunction as a,PrimitiveType as i,DataType as n}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";const l=()=>r(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class p extends t{constructor(){super(...arguments),this._color=e(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:e}){e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setFaceCullingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(a.ALWAYS,0,255)}draw(e,r){const{context:t,state:o,requestRender:a,allowDelayedRender:p}=e,c=l(),d=r.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=m(t,s)),!p||null==a||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(d),t.drawElements(i.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),t.bindVAO()):a())}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const a=new Float32Array(4);return a[0]=n,a[1]=t,a[2]=r,a[3]=e,a}function e(n,t){return new Float32Array(n,t,4)}function a(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function s(){return r(0,1,0,0)}function c(){return r(0,0,1,0)}function i(){return r(0,0,0,1)}const f=a(),l=o(),_=u(),y=s(),w=c(),N=i(),O=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:y,UNIT_Z:w,ZEROS:f,clone:t,create:n,createView:e,fromValues:r,ones:o,unitW:i,unitX:u,unitY:s,unitZ:c,zeros:a},Symbol.toStringTag,{value:\"Module\"}));export{l as O,_ as U,f as Z,n as a,e as b,t as c,s as d,c as e,r as f,i as g,y as h,w as i,N as j,o,u,O as v,a as z};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}const t=new e(o);function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_perspective;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nfloat w = 1.0 + dot(a_uv, u_perspective);\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(w * pos.xy, 0.0, w);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"common.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"getSurfaceValues.glsl\":\"#include <raster/common/mirror.glsl>\\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\\nvec2 onePixel = 1.0 / srcImageSize;\\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\\nvalues[0] = va.r;\\nvalues[1] = vb.r;\\nvalues[2] = vc.r;\\nvalues[3] = vd.r;\\nvalues[4] = ve.r;\\nvalues[5] = vf.r;\\nvalues[6] = vg.r;\\nvalues[7] = vh.r;\\nvalues[8] = vi.r;\\nvalues[9] = alpha;\\n}\",\"inverse.glsl\":\"float invertValue(float value) {\\nfloat s = sign(value);\\nreturn (s * s) / (value + abs(s) - 1.0);\\n}\",\"mirror.glsl\":\"vec2 mirror(vec2 pos) {\\nvec2 pos1 = abs(pos);\\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\n#include <raster/common/getSurfaceValues.glsl>\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nfloat pv[10];\\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},rfx:{aspect:{\"aspect.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nconst float pi = 3.14159265359;\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\\nalpha *= sign(abs(dzx) + abs(dzy));\\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\\nfloat aspect = aspect_rad * 180.0 / pi;\\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\\n}\"},bandarithmetic:{\"bandarithmetic.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nuniform float u_adjustments[3];\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index;\\n#ifdef NDXI\\nindex = (nir - red) * invertValue(nir + red);\\n#elif defined(SR)\\nindex = nir * invertValue(red);\\n#elif defined(CI)\\nindex = nir * invertValue(red) - 1.0;\\n#elif defined(SAVI)\\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\\n#elif defined(TSAVI)\\nfloat s = u_adjustments[0];\\nfloat a = u_adjustments[1];\\nfloat x = u_adjustments[2];\\nfloat y = -a * s + x * (1.0 + s * s);\\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\\n#elif defined(MAVI)\\nindex = 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\\n#elif defined(GEMI)\\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\\n#elif defined(PVI)\\nfloat a = u_adjustments[0];\\nfloat b = u_adjustments[1];\\nfloat y = sqrt(1.0 + a * a);\\nindex = (nir - a * red - b) * invertValue(y);\\n#elif defined(VARI)\\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\\n#elif defined(MTVI2)\\nfloat green = pv2.b;\\nfloat v = pow(sqrt((2.0 * nir + 1.0), 2.0) - 6.0 * nir - 5.0 * sqrt(red) - 0.5);\\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * v;\\n#elif defined(RTVICORE)\\nfloat green = pv2.b;\\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\\n#elif defined(EVI)\\nfloat blue = pv2.b;\\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\\nindex =  (2.5 * (nir - red)) * invertValue(denom);\\n#elif defined(WNDWI)\\nfloat g = pv2.r;\\nfloat n = pv2.g;\\nfloat s = pv2.s;\\nfloat a = u_adjustments[0];\\nfloat denom = g + a * n + (1.0 - a) * s;\\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\\n#elif defined(BAI)\\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\\n#else\\ngl_FragColor = pv;\\nreturn;\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},compositeband:{\"compositeband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\nuniform sampler2D u_image2;\\nvarying vec2 v_texcoord;\\nvoid main() {\\nvec4 p0 = texture2D(u_image, v_texcoord);\\nvec4 p1 = texture2D(u_image1, v_texcoord);\\nvec4 p2 = texture2D(u_image2, v_texcoord);\\ngl_FragColor = vec4(p0.r, p1.r, p2.r, p0.a * p1.a * p2.a);\\n}\"},convolution:{\"convolution.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\nuniform float u_kernel[25];\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec3 rgb = vec3(0.0, 0.0, 0.0);\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat alpha = 1.0;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\\nalpha *= pv.a;\\n}\\n}\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},curvature:{\"curvature.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform float u_zlFactor;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\\nfloat curvature = 0.0;\\n#ifdef STANDARD\\ncurvature = -u_zlFactor * (d + e);\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n#else\\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\\nfloat g = (-pv[3] + pv[5]) / 2.0;\\nfloat h = (pv[1] - pv[7]) / 2.0;\\nfloat g2 = g * g;\\nfloat h2 = h * h;\\n#ifdef PROFILE\\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\\n#else\\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\\n#endif\\n#endif\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n}\"},extractband:{\"extractband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\ngl_FragColor = vec4(pv2, pv.a);\\n}\"},local:{\"local.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef TWO_IMAGES\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\n#elif defined(CONDITIONAL)\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\n#endif\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef PLUS\\nresult = a + b;\\n#elif defined(MINUS)\\nresult = a - b;\\n#elif defined(TIMES)\\nresult = a * b;\\n#elif defined(DIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOATDIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOORDIVIDE)\\nresult = floor(a * invertValue(b));\\nalpha *= float(abs(sign(b)));\\n#elif defined(SQUARE)\\nresult = a * a;\\n#elif defined(SQRT)\\nresult = sqrt(a);\\n#elif defined(POWER)\\nresult = pow(a, b);\\n#elif defined(LN)\\nresult = a <= 0.0 ? 0.0: log(a);\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_1_0)\\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_2)\\nresult = a <= 0.0 ? 0.0: log2(a);\\nalpha *= float(a > 0.0);\\n#elif defined(EXP)\\nresult = exp(a);\\n#elif defined(EXP_1_0)\\nresult = pow(10.0, a);\\n#elif defined(EXP_2)\\nresult = pow(2.0, a);\\n#elif defined(ROUNDDOWN)\\nresult = floor(a);\\n#elif defined(ROUNDUP)\\nresult = ceil(a);\\n#elif defined(INT)\\nresult = float(sign(a)) * floor(abs(a));\\n#elif defined(MOD)\\nresult = mod(a, b);\\n#elif defined(NEGATE)\\nresult = -a;\\n#elif defined(ABS)\\nresult = abs(a);\\n#elif defined(ACOS)\\nresult = abs(a) > 1.0 ? 0.0: acos(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ACOSH)\\nresult = acosh(a);\\n#elif defined(POLYFILLACOSH)\\nresult = log(a + sqrt(a * a - 1.0));\\n#elif defined(ASIN)\\nresult = abs(a) > 1.0 ? 0.0: asin(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ASINH)\\nresult = asinh(a);\\n#elif defined(POLYFILLASINH)\\nresult = log(a + sqrt(a * a + 1.0));\\n#elif defined(ATAN)\\nresult = atan(a);\\n#elif defined(ATANH)\\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\\nalpha *= step(abs(a), 1.0);\\n#elif defined(POLYFILLATANH)\\nresult = a == 1.0 ? 0.0 : 0.5 * log((1.0 + a)/(1.0 -a));\\n#elif defined(ATAN_2)\\nresult = atan(a, b);\\n#elif defined(COS)\\nresult = cos(a);\\n#elif defined(COSH)\\nresult = cosh(a);\\n#elif defined(POLYFILLCOSH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp + 1.0 / halfexp;\\n#elif defined(SIN)\\nresult = sin(a);\\n#elif defined(SINH)\\nresult = sinh(a);\\n#elif defined(POLYFILLSINH)\\nfloat halfexp = exp(a) / 2.0;\\nresult = halfexp - 1.0 / halfexp;\\n#elif defined(TAN)\\nresult = tan(a);\\n#elif defined(TANH)\\nresult = tanh(a);\\n#elif defined(POLYFILLTANH)\\nfloat expx = exp(a);\\nresult = (expx - 1.0 / expx) / (expx + 1.0 / expx);\\n#elif defined(BITWISEAND)\\nresult = a & b;\\n#elif defined(BITWISEOR)\\nresult = a | b;\\n#elif defined(BITWISELEFTSHIFT)\\nresult = a << b;\\n#elif defined(BITWISERIGHTSHIFT)\\nresult = a >> b;\\n#elif defined(BITWISENOT)\\nresult = ~a;\\n#elif defined(BITWISEXOR)\\nresult = a ^ b;\\n#elif defined(BOOLEANAND)\\nresult = float((a != 0.0) && (b != 0.0));\\n#elif defined(BOOLEANNOT)\\nresult = float(a == 0.0);\\n#elif defined(BOOLEANOR)\\nresult = float((a != 0.0) || (b != 0.0));\\n#elif defined(BOOLEANXOR)\\nresult = float((a != 0.0) ^^ (b != 0.0));\\n#elif defined(GREATERTHAN)\\nresult = float(a > b);\\n#elif defined(GREATERTHANEQUAL)\\nresult = float(a >= b);\\n#elif defined(LESSTHAN)\\nresult = float(a < b);\\n#elif defined(LESSTHANEQUAL)\\nresult = float(a <= b);\\n#elif defined(EQUALTO)\\nresult = float(a == b);\\n#elif defined(NOTEQUAL)\\nresult = float(a != b);\\n#elif defined(ISNULL)\\nresult = float(alpha == 0.0);\\nalpha = 1.0;\\n#elif defined(SETNULL)\\nfloat maskValue = float(a == 0.0);\\nresult = maskValue * b;\\nalpha *= maskValue;\\n#elif defined(CONDITIONAL)\\nfloat weight = float(abs(sign(a)));\\nresult = weight * b + (1.0 - weight) * c;\\n#endif\\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\\nresult = isInvalid ? 0.0 : result;\\nalpha *= float(!isInvalid);\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},mask:{\"mask.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_INCLUDED_RANGES 6\\n#define LEN_NODATA_VALUES 6\\nuniform highp float u_includedRanges[6];\\nuniform highp float u_noDataValues[6];\\nfloat maskFactor(float bandValue, float fromValue, float to) {\\nfloat factor = 1.0;\\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\\nfactor *= float(u_noDataValues[i] != bandValue);\\n}\\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\\nreturn factor;\\n}\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\\n#ifdef MULTI_BAND\\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\\nfloat maskFactor = redFactor * greenFactor * blueFactor;\\ngl_FragColor = pv * maskFactor;\\n#else\\ngl_FragColor = pv * redFactor;\\n#endif\\n}\"},ndvi:{\"ndvi.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index = (nir - red) * invertValue(nir + red);\\n#ifdef SCALED\\nindex = floor((index + 1.0) * 100.0 + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},remap:{\"remap.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_REMAP_RANGES 18\\n#define LEN_NODATA_RANGES 12\\nuniform highp float u_rangeMaps[18];\\nuniform highp float u_noDataRanges[12];\\nuniform highp float u_unmatchMask;\\nuniform vec2 u_clampRange;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat factor = 1.0;\\nfloat bandValue = pv.r;\\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\\nfactor *= inside;\\n}\\nfloat mapValue = 0.0;\\nfloat includeMask = 0.0;\\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\\n}\\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\\n}\"},slope:{\"slope.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform float u_zFactor;\\nuniform vec2 u_srcImageSize;\\nuniform float u_pixelSizePower;\\nuniform float u_pixelSizeFactor;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\\n#ifdef PERCENT_RISE\\nfloat percentRise = rise2run * 100.0;\\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\\n#else\\nfloat degree = atan(rise2run) * 57.2957795;\\ngl_FragColor = vec4(degree, degree, degree, alpha);\\n#endif\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying highp vec2 v_texcoord;\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\\nval = clamp(val, minCutOff, maxCutOff);\\nfloat stretchedVal;\\n#ifdef USE_GAMMA\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\\n#else\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n#endif\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\\n#ifdef MULTI_BAND\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\\n#else\\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\\n#endif\\n}\"},vs:{\"vs.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TEXTURE_BINDING_BITMAP as e}from\"../definitions.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import r from\"./WGLBrush.js\";import{BlendFactor as s,CompareFunction as n,PrimitiveType as o,DataType as a}from\"../../../../webgl/enums.js\";const i=()=>t(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:a.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:a.UNSIGNED_SHORT}]});class u extends r{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(n.GREATER,255,255)}draw(t,r){const{context:s,painter:n,requestRender:a,allowDelayedRender:u}=t;if(!r.isReady)return;const{computedOpacity:c,dvsMat3:l,isWrapAround:d,perspectiveTransform:m,texture:p}=r;t.timeline.begin(this.name);const f=n.materialManager.getProgram(this._desc);if(u&&null!=a&&!f.compiled)return void a();const _=i(),v=r.getVAO(s,_.bufferLayouts,_.attributes);if(!v)return;s.bindVAO(v),s.useProgram(f),s.bindTexture(p,e),f.setUniformMatrix3fv(\"u_dvsMat3\",l),f.setUniform1i(\"u_texture\",e),f.setUniform1f(\"u_opacity\",c),f.setUniform2fv(\"u_perspective\",m);const y=d?10:4;s.drawArrays(o.TRIANGLE_STRIP,0,y),s.bindVAO(),t.timeline.end(this.name)}}export{u as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as e}from\"../../../../../core/maybe.js\";import t from\"../../../../../core/RandomLCG.js\";import{TEXTURE_BINDING_RENDERER_0 as o,TEXTURE_BINDING_RENDERER_1 as r,TILE_SIZE as s}from\"../definitions.js\";import{WGLGeometryType as i,WGLSymbologyType as n}from\"../enums.js\";import d from\"./WGLGeometryBrushFill.js\";import{assertRendererSchema as a}from\"../techniques/utils.js\";import{BufferObject as l}from\"../../../../webgl/BufferObject.js\";import{DataType as u,PrimitiveType as _,TextureSamplingMode as m,TextureWrapMode as c,RenderbufferFormat as f,Usage as h,PixelType as p}from\"../../../../webgl/enums.js\";import{FramebufferObject as T}from\"../../../../webgl/FramebufferObject.js\";import{Renderbuffer as x}from\"../../../../webgl/Renderbuffer.js\";import{RenderbufferDescriptor as w}from\"../../../../webgl/RenderbufferDescriptor.js\";import{Texture as D}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as y}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as b}from\"../../../../webgl/VertexArrayObject.js\";class g extends d{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([o,r]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=e(this._dotFBO),this._dotVAO=e(this._dotVAO)}getGeometryType(){return i.FILL}supportsSymbology(e){return e===n.DOT_DENSITY}_drawFills(e,t,o,r,s,i){const{passOptions:n}=e;if(null!=n&&\"hittest\"===n.type)super._drawFills(e,t,o,r,s,i);else{const r=this._drawDotLocations(e,t,o,s,i);this._drawDotDensity(e,t,r)}}_drawDotDensity(e,t,o){const{context:r,painter:s,rendererInfo:i,requestRender:n,allowDelayedRender:d}=e,l=s.materialManager.getProgram(this._dotDesc);if(d&&null!=n&&!l.compiled)return void n();const{rendererSchema:m}=i;a(m,\"dot-density\");const c=this._createDotDensityMesh(r,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:u.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});r.setStencilTestEnabled(!0),r.useProgram(l),l.setUniform1f(\"u_tileZoomFactor\",1),l.setUniform1i(\"u_texture\",this._dotSamplers[0]),l.setUniform1f(\"u_dotSize\",Math.max(m.dotSize,1)),l.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(l,e,t),r.bindTexture(o,this._dotSamplers[0]),r.bindVAO(c),r.drawArrays(_.POINTS,0,262144)}_drawDotLocations(e,t,o,r,i){const{context:n,rendererInfo:d,requiredLevel:l}=e,m=n.getViewport(),{rendererSchema:c}=d;a(c,\"dot-density\");const{dotScale:f,colors:h,activeDots:p,backgroundColor:T,dotValue:x}=c;n.setViewport(0,0,512,512);const w=n.getBoundFramebufferObject(),D=this._createFBO(n);n.bindFramebuffer(D),n.setClearColor(0,0,0,0),n.clear(n.gl.COLOR_BUFFER_BIT|n.gl.STENCIL_BUFFER_BIT),n.setStencilTestEnabled(!1);const y=1/2**(l-t.key.level),b=s,g=b*window.devicePixelRatio*b*window.devicePixelRatio,O=1/y*(1/y),S=f?e.state.scale/f:1;return o.setUniform1f(\"u_tileZoomFactor\",y),o.setUniform1f(\"u_tileDotsOverArea\",g/(s*window.devicePixelRatio*s*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",h),o.setUniform4fv(\"u_isActive\",p),o.setUniform4fv(\"u_dotBackgroundColor\",T),o.setUniform1f(\"u_dotValue\",Math.max(1,x*S*O)),this._bindDotDensityTextures(n,o,d,b),n.drawElements(_.TRIANGLES,r,u.UNSIGNED_INT,i),n.setViewport(m.x,m.y,m.width,m.height),n.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(null==this._dotFBO){const t=512,o=512,r=new y(t,o);r.samplingMode=m.NEAREST,r.wrapMode=c.CLAMP_TO_EDGE;const s=new x(e,new w(f.DEPTH_STENCIL,t,o));this._dotFBO=new T(e,r,s)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;a(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n])}_createDotDensityMesh(e,t,o){if(null==this._dotVAO){const r=2,s=new Int16Array(262144*r);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[r*(t+512*e)]=t,s[r*(t+512*e)+1]=e;const i=l.createVertex(e,h.STATIC_DRAW,s);this._dotVAO=new b(e,t,o,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,o,r){if(this._dotTextureSize===o&&this._seed===r||(this._disposeTextures(),this._dotTextureSize=o,this._seed=r),null===this._dotTextures){const s=new t(r);this._dotTextures=[this._allocDotDensityTexture(e,o,s),this._allocDotDensityTexture(e,o,s)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let i=0;i<r.length;i++)r[i]=o.getFloat();const s=new y;return s.dataType=p.FLOAT,s.samplingMode=m.NEAREST,s.width=t,s.height=t,new D(e,s,r)}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{MAX_REPRESENTABLE_INT as e,TILE_SIZE as t}from\"../definitions.js\";import{WGLGeometryType as o,WGLSymbologyType as r}from\"../enums.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{FillMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{PrimitiveType as l,DataType as m}from\"../../../../webgl/enums.js\";function u(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:m.SHORT},{location:1,name:\"a_id\",count:3,type:m.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:m.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:m.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:m.SHORT},{location:6,name:\"a_aux3\",count:4,type:m.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:m.UNSIGNED_SHORT}]};switch(e.symbologyType){case r.SIMPLE:case r.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:\"materials/fill\",vertexLayout:t}}class c extends i{dispose(){}getGeometryType(){return o.FILL}supportsSymbology(e){return e!==r.DOT_DENSITY}drawGeometry(o,r,i,m){const{context:c,painter:f,rendererInfo:p,requiredLevel:y,passOptions:_,requestRender:d,allowDelayedRender:E}=o,g=n.load(i.materialKey),N=s(g.data),S=null!=_&&\"hittest\"===_.type,T=f.materialManager,{shader:I,vertexLayout:U,hittestAttributes:x}=N.programSpec??u(g);let h=l.TRIANGLES,L=a(g.data,U);S&&(L=this._getTriangleDesc(i.materialKey,L,x),h=l.POINTS);const{attributes:O,bufferLayouts:G}=L,D=T.getMaterialProgram(o,g,I,O,m);if(E&&null!=d&&!D.compiled)return void d();c.useProgram(D),this._setSharedUniforms(D,o,r);const{row:b,col:R}=r.key,M=R*t,w=b*t;if(D.setUniform2f(\"u_tileOffset\",M%e,w%e),D.setUniform2f(\"u_maxIntNumOfCrossing\",Math.floor(M/e),Math.floor(w/e)),g.textureBinding){f.textureManager.bindTextures(c,D,g);const e=1/2**(y-r.key.level);D.setUniform1f(\"u_zoomFactor\",e)}const j=1/o.pixelRatio;D.setUniform1f(\"u_blur\",j),D.setUniform1f(\"u_antialiasing\",j),this._setSizeVVUniforms(g,D,p,r),this._setColorAndOpacityVVUniforms(g,D,p);const B=i.target.getVAO(c,G,O,S);let A=i.indexCount,F=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(A/=3,F/=3),c.bindVAO(B),this._drawFills(o,r,D,h,A,F)}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,m.UNSIGNED_INT,i)}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{MIN_MAX_ZOOM_PRECISION_FACTOR as t,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as e,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as i,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as s,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as o,TEXTURE_BINDING_ATTRIBUTE_DATA_4 as a,TEXTURE_BINDING_ATTRIBUTE_DATA_5 as r}from\"../definitions.js\";import n from\"./WGLBrush.js\";import{MaterialKeyBase as u}from\"../materialKey/MaterialKey.js\";import{BlendFactor as m,CompareFunction as l}from\"../../../../webgl/enums.js\";class v extends n{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e){e&&e.includes(\"hittest\")?t.setBlendFunctionSeparate(m.ONE,m.ONE,m.ONE,m.ONE):t.setBlendFunctionSeparate(m.ONE,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0)}draw(t,e,i){const s=this.getGeometryType();e.commit(t);const o=e.getGeometry(s);null!=o&&(t.timeline.begin(this.name),t.attributeView.bindTextures(t.context),t.context.setStencilFunction(l.EQUAL,e.stencilRef,255),o.forEachCommand((s=>{const o=u.load(s.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(t,e,s,i)})))}_setSharedUniforms(n,u,m){const{displayLevel:l,pixelRatio:v,state:f,passOptions:p}=u;null!=p&&\"hittest\"===p.type&&(n.setUniform2fv(\"u_hittestPos\",p.position),n.setUniform1f(\"u_hittestDist\",p.distance)),n.setUniform1f(\"u_pixelRatio\",v),n.setUniformMatrix3fv(\"u_tileMat3\",m.transforms.tileMat3),n.setUniformMatrix3fv(\"u_viewMat3\",f.viewMat3),n.setUniformMatrix3fv(\"u_dvsMat3\",m.transforms.dvs),n.setUniformMatrix3fv(\"u_displayViewMat3\",f.displayViewMat3),n.setUniform1f(\"u_currentZoom\",Math.round(l*t)),n.setUniform1i(\"u_attributeTextureSize\",u.attributeView.size),n.setUniform1i(\"u_attributeData0\",e),n.setUniform1i(\"u_attributeData1\",i),n.setUniform1i(\"u_attributeData2\",s),n.setUniform1i(\"u_attributeData3\",o),n.setUniform1i(\"u_attributeData4\",a),n.setUniform1i(\"u_attributeData5\",r)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);null!=t&&(e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes))}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),u=s.map((t=>({...t}))),m=Math.max(...e.attributes.values()),l={geometry:u};let v=0;for(const e of o){const t=s[e];l.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),l.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",m+ ++v),n.set(t.name+\"2\",m+ ++v)}r={bufferLayouts:l,attributes:n,strides:t},this._computeDesc.set(a,r)}return r}}export{v as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import{WGLGeometryType as r,WGLSymbologyType as t}from\"../enums.js\";import{MaterialKeyBase as o}from\"../materialKey/MaterialKey.js\";import{Technique as i}from\"./Technique.js\";import{DotDensityTechnique as n}from\"./dotDensity/TechniqueDotDensity.js\";import{HeatmapTechnique as a}from\"./heatmap/TechniqueHeatmap.js\";import{PieChartTechnique as m}from\"./pieChart/TechniquePieChart.js\";function s(r,t){if(r.type!==t)throw new e(\"material-view-model:unexpected-renderer-schema\",`expected to find renderer schema of type \"${t}\" but found type \"${r.type}\"`)}function c(e){switch(e?.type){case\"dot-density\":return n;case\"heatmap\":return a;case\"pie-chart\":return m;default:return i}}function p(e){const{geometryType:s,symbologyType:c}=o.load(e);switch(s){case r.FILL:if(c===t.DOT_DENSITY)return n;break;case r.MARKER:switch(c){case t.HEATMAP:return a;case t.PIE_CHART:return m}}return i}export{s as assertRendererSchema,p as getTechniqueFromMaterialKey,c as getTechniqueFromRenderer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{static getStorageSpec(t){return null}static createOrUpdateRendererSchema(t,e){return null!=t&&\"default\"===t.type?t:{type:\"default\"}}static getVariation(t){return{}}static getVariationHash(t){return 0}}t.type=\"default\",t.programSpec=null;export{t as Technique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{writeColor as e}from\"../../color.js\";import{DOT_DENSITY_MAX_FIELDS as t}from\"../../definitions.js\";import{Technique as o}from\"../Technique.js\";import{DataType as r}from\"../../../../../webgl/enums.js\";class a extends o{static getStorageSpec({attributes:e}){return{visualVariables:!1,attributes:e??null}}static _createRendererSchema(){return{type:\"dot-density\",colors:new Float32Array(32),dotValue:-1,dotSize:-1,dotScale:-1,dotBlending:!1,backgroundColor:new Float32Array(4),activeDots:new Float32Array(8),seed:-1}}static createOrUpdateRendererSchema(o,r){const{attributes:a,dotValue:n,referenceScale:i,dotSize:l,dotBlendingEnabled:d,seed:s,backgroundColor:c}=r,u=null!=o&&\"dot-density\"===o.type?o:this._createRendererSchema();u.dotValue=n,u.dotSize=l,u.dotScale=i,u.dotBlending=d,u.seed=s;const{colors:m,activeDots:g,backgroundColor:p}=u;for(let y=0;y<t;y++){const t=y>=a.length?null:a[y].color;e(m,t,4*y)}for(let e=0;e<8;e++)g[e]=e<r.attributes.length?1:0;return e(p,c),u}static getVariation(e){return{ddDotBlending:e.dotBlending}}static getVariationHash(e){return e.dotBlending?1:0}}a.type=\"dot-density\",a.programSpec={shader:\"materials/fill\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:3,type:r.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:r.UNSIGNED_BYTE},{location:3,name:\"a_inverseArea\",count:1,type:r.FLOAT}]}};export{a as DotDensityTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{pt2px as e}from\"../../../../../../core/screenUtils.js\";import{generateGradient as t}from\"../../../../../../renderers/support/heatmapUtils.js\";import{Technique as a}from\"../Technique.js\";import{DataType as r}from\"../../../../../webgl/enums.js\";class i extends a{static getStorageSpec({field:e,valueExpression:t}){return{visualVariables:!1,attributes:e||t?[{field:e,valueExpression:t}]:null}}static _createRendererSchema(){return{type:\"heatmap\",radius:-1,referenceScale:-1,isFieldActive:0,minDensity:-1,densityRange:-1,kernel:null,gradient:null,gradientHash:\"invalid\"}}static createOrUpdateRendererSchema(a,r){const{radius:i,minDensity:n,maxDensity:s,referenceScale:o,field:c,valueExpression:l,colorStops:m}=r,p=s-n,d=c||l?1:0,u=m.map((({color:e,ratio:t})=>`${t}:${e.toString()}`)).join();let h,y=!0;return null!=a&&\"heatmap\"===a.type?(h=a,y=u!==a.gradientHash):h=this._createRendererSchema(),h.radius=e(i),h.minDensity=n,h.densityRange=p,h.referenceScale=o,h.isFieldActive=d,y&&(h.gradient=t(m),h.gradientHash=u),h}}i.type=\"heatmap\",i.programSpec={shader:\"materials/icon/heatmapAccumulate\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:4,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE}]}};export{i as HeatmapTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../../Color.js\";import{pt2px as t}from\"../../../../../../core/screenUtils.js\";import{writeColor as o}from\"../../color.js\";import{CHART_MAX_FIELDS as r}from\"../../definitions.js\";import{Technique as a}from\"../Technique.js\";import{DataType as n}from\"../../../../../webgl/enums.js\";class i extends a{static getStorageSpec({attributes:e}){return{visualVariables:!0,attributes:e??null}}static _createRendererSchema(){return{type:\"pie-chart\",colors:new Float32Array(4*r),defaultColor:new Float32Array(4),othersColor:new Float32Array(4),outlineColor:new Float32Array(4),holePercentage:0,sectorThreshold:0,outlineWidth:1,numberOfFields:10}}static createOrUpdateRendererSchema(a,n){const{attributes:i,defaultColor:l,holePercentage:s,othersCategory:c,outline:u}=n,m=null!=a&&\"pie-chart\"===a.type?a:this._createRendererSchema();for(let t=0;t<r;t++){const r=t>=i.length?new e([0,0,0,0]):i[t].color;o(m.colors,r,4*t)}return o(m.defaultColor,l),o(m.othersColor,c?.color),o(m.outlineColor,u?.color),m.outlineWidth=t(u?.width||0),m.holePercentage=s,m.sectorThreshold=c?.threshold||0,m.numberOfFields=i.length,m}static getVariation(e){return{numberOfFields:e.numberOfFields}}static getVariationHash(e){return e.numberOfFields}}i.type=\"pie-chart\",i.programSpec={shader:\"materials/pie\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:n.SHORT},{location:2,name:\"a_texCoords\",count:2,type:n.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:n.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:n.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:n.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:n.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};export{i as PieChartTechnique};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{disposeMaybe as t}from\"../../../../../core/maybe.js\";import{WGLSymbologyType as r}from\"../enums.js\";import i from\"../VertexStream.js\";import s from\"./WGLGeometryBrushMarker.js\";import{Effect as a}from\"../effects/Effect.js\";import{assertRendererSchema as u}from\"../techniques/utils.js\";import{ContextType as n}from\"../../../../webgl/contextUtils.js\";import{CompareFunction as o,DataType as l,BlendFactor as f,ClearBufferBit as c,TextureWrapMode as h,RenderbufferFormat as m,TextureSamplingMode as p,PixelType as d}from\"../../../../webgl/enums.js\";import{FramebufferObject as _}from\"../../../../webgl/FramebufferObject.js\";import{loadHeatmapTextureConfiguration as b}from\"../../../../webgl/heatmapTextureUtils.js\";import{Renderbuffer as w}from\"../../../../webgl/Renderbuffer.js\";import{RenderbufferDescriptor as F}from\"../../../../webgl/RenderbufferDescriptor.js\";import{Texture as g}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as S}from\"../../../../webgl/TextureDescriptor.js\";const T=e.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\");function v(e){return\"heatmap\"===e.type}function B(e,t){const{referenceScale:r,radius:i}=e;return i*(0!==r?r/t.scale:1)}class E extends s{constructor(){super(...arguments),this.brushEffect=new G}supportsSymbology(e){return e===r.HEATMAP}dispose(){super.dispose(),this.brushEffect.dispose(),this.brushEffect=null}prepareState(){}drawGeometry(e,t,r,i){const{defines:s}=this.brushEffect.loadQualityProfile(e.context);super.drawGeometry(e,t,r,i?[...i,...s]:s)}_drawMarkers(e,t,r,i,s,a,n){const{context:f,rendererInfo:c,state:h}=e,{rendererSchema:m}=c;u(m,\"heatmap\");const{isFieldActive:p}=m;r.setUniform1f(\"u_radius\",B(m,h)),n||(r.setUniform1f(\"u_isFieldActive\",p),f.setStencilFunction(o.GEQUAL,t.stencilRef,255)),f.drawElements(i,s,l.UNSIGNED_INT,a)}}const O={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])},x=.25,y=1/(2*x);function P(e){return e<y?1:x}class G extends a{constructor(){super(...arguments),this.name=this.constructor.name}createOptions({passOptions:e}){return e}dispose(){this._prevFBO=null,null!=this._accumulateFramebuffer&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=t(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=t(this._accumulateFramebuffer),this._resolveGradientTexture=t(this._resolveGradientTexture),this._tileQuad=t(this._tileQuad)}bind(e){const{context:t,rendererInfo:r,passOptions:i,state:s}=e,{rendererSchema:a}=r;!(null!=i&&\"hittest\"===i.type)&&v(a)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),u(a,\"heatmap\"),this._loadResources(e),this._updateResources(t,a,s),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(f.ONE,f.ONE),t.setClearColor(0,0,0,0),t.clear(c.COLOR_BUFFER_BIT))}unbind(){this._prevFBO=null,this._prevViewport=null}draw(e){const{context:t,painter:r,rendererInfo:i,passOptions:s}=e,{rendererSchema:a}=i;if(null!=s&&\"hittest\"===s.type||!v(a))return;const{defines:u}=this.loadQualityProfile(t),n=r.materialManager.getProgram(O,u);t.useProgram(n),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(f.ONE,f.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);const{radius:o,minDensity:l,densityRange:c}=a;t.bindTexture(this._accumulateFramebuffer.colorTexture,8),t.bindTexture(this._resolveGradientTexture,9),n.setUniform1i(\"u_texture\",8),n.setUniform1i(\"u_gradient\",9),n.setUniform2f(\"u_densityMinAndInvRange\",l,1/c),n.setUniform1f(\"u_densityNormalization\",3/(o*o*Math.PI)),this._tileQuad.draw()}_loadResources({context:e,painter:t}){const{dataType:r,samplingMode:s,pixelFormat:a,internalFormat:u,requiresSharedStencilBuffer:n}=this.loadQualityProfile(e),{width:o,height:l}=this._prevViewport,f=o*x,c=l*x;let p=new S(f,c);p.pixelFormat=a,p.internalFormat=u,p.dataType=r,p.samplingMode=s,p.wrapMode=h.CLAMP_TO_EDGE,n||(this._accumulateOutputStencilBuffer??=new w(e,new F(m.DEPTH_STENCIL,f,c))),this._accumulateFramebuffer??=new _(e,p,n?t.getSharedStencilBuffer():this._accumulateOutputStencilBuffer),p=new S,p.wrapMode=h.CLAMP_TO_EDGE,this._resolveGradientTexture??=new g(e,p),this._tileQuad??=new i(e,[0,0,1,0,0,1,1,1])}_updateResources(e,t,r){const{gradientHash:i,gradient:s}=t;this._prevGradientHash!==i&&(this._resolveGradientTexture.resize(s.length/4,1),this._resolveGradientTexture.setData(s),this._prevGradientHash=i);const{requiresSharedStencilBuffer:a}=this.loadQualityProfile(e),u=a?1:P(B(t,r)),{width:n,height:o}=this._prevViewport,l=n*u,f=o*u,{width:h,height:m}=this._accumulateFramebuffer;if(h!==l||m!==f){const e=this._accumulateFramebuffer.depthStencilAttachment;if(a&&null!=e){const{width:t,height:r}=e.descriptor;t===l&&r===f||(T.errorOnce(\"Attempted to resize shared stencil buffer! Detaching instead.\"),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(l,f)}a||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,c.STENCIL_BUFFER_BIT,p.NEAREST)}loadQualityProfile(e){if(null==this._qualityProfile){const t=b(e,T),r=e.type===n.WEBGL1;this._qualityProfile={...t,requiresSharedStencilBuffer:r,defines:t.dataType!==d.FLOAT?[\"heatmapPrecisionHalfFloat\"]:[]}}return this._qualityProfile}}export{E as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as t,WGLSymbologyType as e}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{MarkerMaterialKey as r}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as n}from\"../techniques/utils.js\";import{DataType as i,PrimitiveType as s}from\"../../../../webgl/enums.js\";const l={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:i.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:i.SHORT},{location:2,name:\"a_texCoords\",count:2,type:i.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:i.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:i.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:i.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:i.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:i.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class m extends a{dispose(){}getGeometryType(){return t.MARKER}supportsSymbology(t){return t!==e.HEATMAP&&t!==e.PIE_CHART}drawGeometry(t,e,a,i){const{context:m,painter:u,rendererInfo:d,state:c,passOptions:p,requestRender:y,allowDelayedRender:_}=t,E=r.load(a.materialKey),f=n(E.data),S=null!=p&&\"hittest\"===p.type,{shader:N,vertexLayout:T,hittestAttributes:g}=f.programSpec??l;let x=s.TRIANGLES,R=o(E.data,T);S&&(R=this._getTriangleDesc(a.materialKey,R,g),x=s.POINTS);const{attributes:h,bufferLayouts:U}=R,A=u.materialManager.getMaterialProgram(t,E,N,h,i);if(_&&null!=y&&!A.compiled)return void y();m.useProgram(A),E.textureBinding&&u.textureManager.bindTextures(m,A,E,!0),this._setSharedUniforms(A,t,e);const O=E.vvRotation?c.displayViewMat3:c.displayMat3;A.setUniformMatrix3fv(\"u_displayMat3\",O),this._setSizeVVUniforms(E,A,d,e),this._setColorAndOpacityVVUniforms(E,A,d),this._setRotationVVUniforms(E,A,d);const G=a.target.getVAO(m,U,h,S);let I=a.indexCount,M=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;S&&(I/=3,M/=3),m.bindVAO(G),this._drawMarkers(t,e,A,x,I,M,S),m.bindVAO(null)}_drawMarkers(t,e,o,a,r,n,s){t.context.drawElements(a,r,i.UNSIGNED_INT,n)}}export{m as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name}createOptions(t,r){return null}}export{t as Effect};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import{unwrapOrThrow as t}from\"../../core/maybe.js\";import{PixelType as r,TextureSamplingMode as a,PixelFormat as o,SizedPixelFormat as l}from\"./enums.js\";function n(n,i){const{textureFloat:f,colorBufferFloat:s}=n.capabilities,u=f?.textureFloat,m=f?.textureFloatLinear,_=f?.textureHalfFloat,p=f?.textureHalfFloatLinear,d=f?.HALF_FLOAT,x=s?.textureFloat,b=s?.textureHalfFloat,c=s?.floatBlend,h=t(n.driverTest).floatBufferBlend.result;if(!u&&!_)throw new e(\"heatmap:missing-texture-float\",\"HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.\");if(!x&&!b)throw new e(\"heatmap:missing-color-buffer-float\",\"HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.\");if(!(c&&h||b))throw new e(\"heatmap:missing-float-blend\",\"HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float.\"+(h?\"\":\" This device claims support for EXT_float_blend, but does not actually support it.\"));const E=u&&x&&c&&h,F=_&&b,R=m,L=p,T=!!s?.R32F,w=!!s?.R16F;if(E&&(R||!L))return R||i.warnOnce(\"Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced.\"),{dataType:r.FLOAT,samplingMode:R?a.LINEAR:a.NEAREST,pixelFormat:T?o.RED:o.RGBA,internalFormat:T?l.R32F:o.RGBA};if(F)return L||i.warnOnce(\"Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced.\"),{dataType:d,samplingMode:L?a.LINEAR:a.NEAREST,pixelFormat:w?o.RED:o.RGBA,internalFormat:w?l.R16F:o.RGBA};throw new e(\"heatmap:missing-hardware-support\",\"HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.\")}export{n as loadHeatmapTextureConfiguration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as t}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as e}from\"../DefaultVertexAttributeLayouts.js\";import r from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as o}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as n,PrimitiveType as a,Usage as l,TextureWrapMode as u,TextureSamplingMode as m}from\"../../../../webgl/enums.js\";import{createProgram as f}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as _}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as c}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as g}from\"../../../../webgl/VertexArrayObject.js\";import d from\"../../../../webgl/capabilities/isWebGL2Context.js\";const h=300,b=32;class p extends r{constructor(){super(...arguments),this._color=t(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(t,e){const{context:r,requestRender:i,allowDelayedRender:s}=t;if(!e.isReady)return;if(this._loadWGLResources(r),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();r.bindVAO(this._outlineVertexArrayObject),r.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",e.rangeX,e.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),r.drawArrays(a.LINE_STRIP,0,4);const o=this._getTexture(r,e);o?(r.bindVAO(this._tileInfoVertexArrayObject),r.useProgram(this._tileInfoProgram),r.bindTexture(o,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",e.rangeX/e.width,e.rangeY/e.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",o.descriptor.width,o.descriptor.height),r.drawArrays(a.TRIANGLE_STRIP,0,4),r.bindVAO()):r.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const r=f(t,i),n=f(t,s),a=new Int8Array([0,0,1,0,1,1,0,1]),u=o.createVertex(t,l.STATIC_DRAW,a),m=new g(t,i.attributes,e,{geometry:u}),_=new Int8Array([0,0,1,0,0,1,1,1]),c=o.createVertex(t,l.STATIC_DRAW,_),d=new g(t,s.attributes,e,{geometry:c});this._outlineProgram=r,this._tileInfoProgram=n,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=d}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"tileCanvas2d\"),this._canvas.setAttribute(\"width\",`${h}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const s=this._canvas,o=s.getContext(\"2d\");o.font=\"24px sans-serif\",o.textAlign=\"left\",o.textBaseline=\"top\",o.clearRect(0,0,h,b),r>1e5?(o.fillStyle=\"red\",o.fillRect(0,0,h,b),o.fillStyle=\"black\"):(o.clearRect(0,0,h,b),o.fillStyle=\"blue\"),o.fillText(i,0,0);const n=new c;return n.wrapMode=u.CLAMP_TO_EDGE,n.samplingMode=m.NEAREST,n.isImmutable=d(t.gl),e.texture=new _(t,n,s),e.texture}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r={geometry:[new o(\"a_pos\",2,e.BYTE,0,2)]},t={geometry:[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]},m={geometry:[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]};export{r as Pos2b,m as Pos2us,t as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nfunction n(n){return window.WebGL2RenderingContext&&n instanceof window.WebGL2RenderingContext}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLSymbologyType as o}from\"../enums.js\";import r from\"./WGLGeometryBrushMarker.js\";import{assertRendererSchema as e}from\"../techniques/utils.js\";import{DataType as t}from\"../../../../webgl/enums.js\";class s extends r{supportsSymbology(r){return r===o.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;e(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,t.UNSIGNED_INT,f)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as i}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as o,Face as a,CompareFunction as l,PrimitiveType as n,Usage as d}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as _}from\"../../../../webgl/VertexArrayObject.js\";class c extends t{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:s,allowDelayedRender:i}=e;this._initialized||this._initialize(t),!i||null==s||this._solidProgram.compiled?(t.setStencilFunctionSeparate(a.FRONT_AND_BACK,l.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(n.TRIANGLE_STRIP,0,4),t.bindVAO()):s()}_initialize(e){if(this._initialized)return!0;const t=m(e,s);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=i.createVertex(e,d.STATIC_DRAW,o),l=new _(e,s.attributes,r,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{c as e}from\"../../../../../chunks/mat3f32.js\";import{f as r}from\"../../../../../chunks/vec4f32.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as o,VTL_HIGH_RES_CUTOFF as i}from\"../definitions.js\";import{WGLDrawPhase as s}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import n from\"./WGLBrush.js\";import{BufferObject as c}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as l,CompareFunction as m,PrimitiveType as f,Usage as u}from\"../../../../webgl/enums.js\";import{VertexArrayObject as p}from\"../../../../webgl/VertexArrayObject.js\";class _ extends n{constructor(){super(...arguments),this._color=r(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:n,painter:c,styleLayerUID:u,requestRender:p,allowDelayedRender:_}=e;this._loadWGLResources(e);const d=e.displayLevel,h=e.styleLayer,g=h.backgroundMaterial,v=c.vectorTilesMaterialManager,y=h.getPaintValue(\"background-color\",d),b=h.getPaintValue(\"background-opacity\",d),x=h.getPaintValue(\"background-pattern\",d),M=void 0!==x,j=y[3]*b,U=1|window.devicePixelRatio,w=e.spriteMosaic;let L,A;const P=U>i?2:1,I=e.drawPhase===s.HITTEST,R=this._programOptions;R.id=I,R.pattern=M;const k=v.getMaterialProgram(n,g,R);if(!_||null==p||k.compiled){if(n.bindVAO(this._vao),n.useProgram(k),M){const t=w.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;L=r[0]-e[0],A=r[1]-e[1];const s=w.getPageSize(i);null!=s&&(w.bind(n,l.LINEAR,i,o),k.setUniform4f(\"u_tlbr\",e[0],e[1],r[0],r[1]),k.setUniform2fv(\"u_mosaicSize\",s),k.setUniform1i(\"u_texture\",o))}k.setUniform1f(\"u_opacity\",b)}else this._color[0]=j*y[0],this._color[1]=j*y[1],this._color[2]=j*y[2],this._color[3]=j,k.setUniform4fv(\"u_color\",this._color);if(k.setUniform1f(\"u_depth\",h.z||0),I){const t=a(u+1);k.setUniform4fv(\"u_id\",t)}for(const e of r){if(k.setUniform1f(\"u_coord_range\",e.rangeX),k.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),M){const r=Math.max(2**(Math.round(d)-e.key.level),1),o=P*e.width*r,i=o/t(L),s=o/t(A);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}n.setStencilFunction(m.EQUAL,0,255),n.drawArrays(f.TRIANGLE_STRIP,0,4)}}else p()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=c.createVertex(e,u.STATIC_DRAW,i),a=new p(e,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=a}}export{_ as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{WGLDrawPhase as t}from\"../enums.js\";import{u32to4Xu8 as r}from\"../number.js\";import i from\"./WGLBrush.js\";import{CompareFunction as n,PrimitiveType as a,DataType as s}from\"../../../../webgl/enums.js\";class o extends i{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(i,o){const{context:l,displayLevel:c,requiredLevel:u,state:d,drawPhase:f,painter:m,spriteMosaic:p,styleLayerUID:y,requestRender:v,allowDelayedRender:g}=i;if(!o.some((e=>e.layerData.get(y)?.circleIndexCount??!1)))return;const E=i.styleLayer,M=E.circleMaterial,T=m.vectorTilesMaterialManager,I=1.2,U=E.getPaintValue(\"circle-translate\",c),_=E.getPaintValue(\"circle-translate-anchor\",c),x=f===t.HITTEST,R=this._programOptions;R.id=x;const h=T.getMaterialProgram(l,M,R);if(g&&null!=v&&!h.compiled)return void v();l.useProgram(h),h.setUniformMatrix3fv(\"u_displayMat3\",_===e.VIEWPORT?d.displayMat3:d.displayViewMat3),h.setUniform2fv(\"u_circleTranslation\",U),h.setUniform1f(\"u_depth\",E.z),h.setUniform1f(\"u_antialiasingWidth\",I);let D=-1;if(x){const e=r(y+1);h.setUniform4fv(\"u_id\",e)}for(const e of o){if(!e.layerData.has(y))continue;e.key.level!==D&&(D=e.key.level,M.setDataUniforms(h,c,E,D,p));const t=e.layerData.get(y);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const r=t.vao;null!=r&&(l.bindVAO(r),h.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u!==e.key.level?l.setStencilFunction(n.EQUAL,e.stencilRef,255):l.setStencilFunction(n.GREATER,255,255),l.drawElements(a.TRIANGLES,t.circleIndexCount,s.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}export{o as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as t}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as e,VTL_HIGH_RES_CUTOFF as i}from\"../definitions.js\";import{WGLDrawPhase as n}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import r from\"./WGLBrush.js\";import{TextureSamplingMode as l,CompareFunction as o,PrimitiveType as s,DataType as f}from\"../../../../webgl/enums.js\";const u=1/65536;class d extends r{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:r,renderPass:l,spriteMosaic:o,styleLayerUID:s}=t;let f=!1;for(const n of e)if(n.layerData.has(s)){const t=n.layerData.get(s);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,d=u.getPaintProperty(\"fill-pattern\"),c=void 0!==d,m=c&&d.isDataDriven;let p;if(c&&!m){const t=d.getValue(i);p=o.getMosaicItemPosition(t,!0)}const y=!c&&u.getPaintValue(\"fill-antialias\",i);let g=!0,_=1;if(!c){const t=u.getPaintProperty(\"fill-color\"),e=u.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=u.getPaintValue(\"fill-color\",i);_=u.getPaintValue(\"fill-opacity\",i)*t[3],_>=1&&(g=!1)}}if(g&&\"opaque\"===l)return;let E;r===n.HITTEST&&(E=a(s+1));const v=u.getPaintValue(\"fill-translate\",i),M=u.getPaintValue(\"fill-translate-anchor\",i);(g||\"translucent\"!==l)&&this._drawFill(t,s,u,e,v,M,c,p,m,E);const P=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&\"opaque\"!==l&&!P&&this._drawOutline(t,s,u,e,v,M,E)}_drawFill(a,r,d,c,m,p,y,g,_,E){if(y&&!_&&null==g)return;const{context:v,displayLevel:M,state:P,drawPhase:I,painter:T,pixelRatio:U,spriteMosaic:x,requestRender:D,allowDelayedRender:h}=a,S=d.fillMaterial,R=T.vectorTilesMaterialManager,w=U>i?2:1,N=I===n.HITTEST,L=this._fillProgramOptions;L.id=N,L.pattern=y;const A=R.getMaterialProgram(v,S,L);if(h&&null!=D&&!A.compiled)return void D();if(v.useProgram(A),null!=g){const{page:t}=g,i=x.getPageSize(t);null!=i&&(x.bind(v,l.LINEAR,t,e),A.setUniform2fv(\"u_mosaicSize\",i),A.setUniform1i(\"u_texture\",e))}A.setUniformMatrix3fv(\"u_displayMat3\",p===t.VIEWPORT?P.displayMat3:P.displayViewMat3),A.setUniform2fv(\"u_fillTranslation\",m),A.setUniform1f(\"u_depth\",d.z+u),N&&A.setUniform4fv(\"u_id\",E);let V=-1;for(const t of c){if(!t.layerData.has(r))continue;t.key.level!==V&&(V=t.key.level,S.setDataUniforms(A,M,d,V,x));const i=t.layerData.get(r);if(!i.fillIndexCount)continue;i.prepareForRendering(v);const n=i.fillVAO;if(null!=n){if(v.bindVAO(n),A.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),v.setStencilFunction(o.EQUAL,t.stencilRef,255),y){const e=Math.max(2**(Math.round(M)-t.key.level),1),i=t.rangeX/(w*t.width*e);A.setUniform1f(\"u_patternFactor\",i)}if(_){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=x.getPageSize(i);null!=t&&(x.bind(v,l.LINEAR,i,e),A.setUniform2fv(\"u_mosaicSize\",t),A.setUniform1i(\"u_texture\",e),v.drawElements(s.TRIANGLES,n[1],f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else v.drawElements(s.TRIANGLES,i.fillIndexCount,f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,a,r,l,d,c){const{context:m,displayLevel:p,state:y,drawPhase:g,painter:_,pixelRatio:E,spriteMosaic:v,requestRender:M,allowDelayedRender:P}=e,I=a.outlineMaterial,T=_.vectorTilesMaterialManager,U=.75/E,x=g===n.HITTEST,D=this._outlineProgramOptions;D.id=x;const h=T.getMaterialProgram(m,I,D);if(P&&null!=M&&!h.compiled)return void M();m.useProgram(h),h.setUniformMatrix3fv(\"u_displayMat3\",d===t.VIEWPORT?y.displayMat3:y.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",l),h.setUniform1f(\"u_depth\",a.z+u),h.setUniform1f(\"u_outline_width\",U),x&&h.setUniform4fv(\"u_id\",c);let S=-1;for(const t of r){if(!t.layerData.has(i))continue;t.key.level!==S&&(S=t.key.level,I.setDataUniforms(h,p,a,S,v));const e=t.layerData.get(i);if(e.prepareForRendering(m),!e.outlineIndexCount)continue;const n=e.outlineVAO;null!=n&&(m.bindVAO(n),h.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),m.setStencilFunction(o.EQUAL,t.stencilRef,255),m.drawElements(s.TRIANGLES,e.outlineIndexCount,f.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}export{d as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as t}from\"../definitions.js\";import{WGLDrawPhase as i}from\"../enums.js\";import{u32to4Xu8 as n}from\"../number.js\";import a from\"./WGLBrush.js\";import{TextureSamplingMode as r,CompareFunction as o,PrimitiveType as s,DataType as l}from\"../../../../webgl/enums.js\";class f extends a{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(a,f){const{context:u,displayLevel:m,state:d,drawPhase:c,painter:p,pixelRatio:g,spriteMosaic:y,styleLayerUID:E,requestRender:v,allowDelayedRender:M}=a;if(!f.some((e=>e.layerData.get(E)?.lineIndexCount??!1)))return;const _=a.styleLayer,U=_.lineMaterial,I=p.vectorTilesMaterialManager,P=_.getPaintValue(\"line-translate\",m),T=_.getPaintValue(\"line-translate-anchor\",m),x=_.getPaintProperty(\"line-pattern\"),D=void 0!==x,S=D&&x.isDataDriven;let L,N;if(D&&!S){const e=x.getValue(m);L=y.getMosaicItemPosition(e)}let R=!1;if(!D){const e=_.getPaintProperty(\"line-dasharray\");if(N=void 0!==e,R=N&&e.isDataDriven,N&&!R){const t=e.getValue(m),i=_.getDashKey(t,_.getLayoutValue(\"line-cap\",m));L=y.getMosaicItemPosition(i)}}const V=1/g,h=c===i.HITTEST,w=this._programOptions;w.id=h,w.pattern=D,w.sdf=N;const A=I.getMaterialProgram(u,U,w);if(M&&null!=v&&!A.compiled)return void v();if(u.useProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),A.setUniformMatrix3fv(\"u_displayMat3\",T===e.VIEWPORT?d.displayMat3:d.displayViewMat3),A.setUniform2fv(\"u_lineTranslation\",P),A.setUniform1f(\"u_depth\",_.z),A.setUniform1f(\"u_antialiasing\",V),h){const e=n(E+1);A.setUniform4fv(\"u_id\",e)}if(L&&null!=L){const{page:e}=L,i=y.getPageSize(e);null!=i&&(y.bind(u,r.LINEAR,e,t),A.setUniform2fv(\"u_mosaicSize\",i),A.setUniform1i(\"u_texture\",t))}let j=-1;for(const e of f){if(!e.layerData.has(E))continue;e.key.level!==j&&(j=e.key.level,U.setDataUniforms(A,m,_,j,y));const i=2**(m-j)/g;A.setUniform1f(\"u_zoomFactor\",i);const n=e.layerData.get(E);if(!n.lineIndexCount)continue;n.prepareForRendering(u);const a=n.vao;if(null!=a){if(u.bindVAO(a),A.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u.setStencilFunction(o.EQUAL,e.stencilRef,255),S||R){const e=n.patternMap;if(!e)continue;for(const[i,n]of e){const e=y.getPageSize(i);null!=e&&(y.bind(u,r.LINEAR,i,t),A.setUniform2fv(\"u_mosaicSize\",e),A.setUniform1i(\"u_texture\",t),u.drawElements(s.TRIANGLES,n[1],l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else u.drawElements(s.TRIANGLES,n.lineIndexCount,l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.lineIndexStart);e.triangleCount+=n.lineIndexCount/3}}}}export{f as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{c as e,f as t}from\"../../../../../chunks/vec2f32.js\";import{FADE_DURATION as i}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as a,SymbolPlacement as r,TranslateAnchor as n}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as s,VTL_TEXTURE_BINDING_UNIT_GLYPHS as o}from\"../definitions.js\";import{WGLDrawPhase as l}from\"../enums.js\";import{degToByte as f}from\"../GeometryUtils.js\";import{u32to4Xu8 as u}from\"../number.js\";import p from\"./WGLBrush.js\";import{TextureSamplingMode as c,CompareFunction as m,PrimitiveType as d,DataType as g}from\"../../../../webgl/enums.js\";const y=1/65536;class _ extends p{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const{drawPhase:i,styleLayerUID:a}=e,r=e.styleLayer;let n;i===l.HITTEST&&(n=u(a+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}_drawIcons(e,t,o,u){const{context:p,displayLevel:c,drawPhase:m,painter:d,spriteMosaic:g,state:y,styleLayerUID:_,requestRender:h,allowDelayedRender:M}=e,P=t.iconMaterial,T=d.vectorTilesMaterialManager;let U,E=!1;for(const i of o)if(i.layerData.has(_)&&(U=i.layerData.get(_),U.iconPerPageElementsMap.size>0)){E=!0;break}if(!E)return;const v=t.getPaintValue(\"icon-translate\",c),x=t.getPaintValue(\"icon-translate-anchor\",c);let D=t.getLayoutValue(\"icon-rotation-alignment\",c);D===a.AUTO&&(D=t.getLayoutValue(\"symbol-placement\",c)===r.POINT?a.VIEWPORT:a.MAP);const I=D===a.MAP,R=t.getLayoutValue(\"icon-keep-upright\",c)&&I,S=U.isIconSDF,V=m===l.HITTEST,w=this._iconProgramOptions;w.id=V,w.sdf=S;const A=T.getMaterialProgram(p,P,w);if(M&&null!=h&&!A.compiled)return void h();p.useProgram(A),A.setUniformMatrix3fv(\"u_displayViewMat3\",D===a.MAP?y.displayViewMat3:y.displayMat3),A.setUniformMatrix3fv(\"u_displayMat3\",x===n.VIEWPORT?y.displayMat3:y.displayViewMat3),A.setUniform2fv(\"u_iconTranslation\",v),A.setUniform1f(\"u_depth\",t.z),A.setUniform1f(\"u_mapRotation\",f(y.rotation)),A.setUniform1f(\"u_keepUpright\",R?1:0),A.setUniform1f(\"u_level\",10*c),A.setUniform1i(\"u_texture\",s),A.setUniform1f(\"u_fadeDuration\",i/1e3),V&&A.setUniform4fv(\"u_id\",u);let L=-1;for(const i of o){if(!i.layerData.has(_))continue;if(i.key.level!==L&&(L=i.key.level,P.setDataUniforms(A,c,t,L,g)),U=i.layerData.get(_),0===U.iconPerPageElementsMap.size)continue;U.prepareForRendering(p),U.updateOpacityInfo();const a=U.iconVAO;if(null!=a){p.bindVAO(a),A.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),A.setUniform1f(\"u_time\",(performance.now()-U.lastOpacityUpdate)/1e3);for(const[t,a]of U.iconPerPageElementsMap)this._renderIconRange(e,A,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,c.LINEAR,a,s),n.setStencilTestEnabled(!0),n.setStencilFunction(m.GREATER,255,255),n.setStencilWriteMask(0),n.drawElements(d.TRIANGLES,i[1],g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,u,p){const{context:c,displayLevel:d,drawPhase:g,glyphMosaic:_,painter:h,pixelRatio:M,spriteMosaic:P,state:T,styleLayerUID:U,requestRender:E,allowDelayedRender:v}=e,x=s.textMaterial,D=h.vectorTilesMaterialManager;let I,R=!1;for(const t of u)if(t.layerData.has(U)&&(I=t.layerData.get(U),I.glyphPerPageElementsMap.size>0)){R=!0;break}if(!R)return;const S=s.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&0===S.getValue(d))return;const V=s.getPaintProperty(\"text-color\"),w=!V||V.isDataDriven||V.getValue(d)[3]>0,A=s.getPaintProperty(\"text-halo-width\"),L=s.getPaintProperty(\"text-halo-color\"),O=(!A||A.isDataDriven||A.getValue(d)>0)&&(!L||L.isDataDriven||L.getValue(d)[3]>0);if(!w&&!O)return;const N=24/8;let z=s.getLayoutValue(\"text-rotation-alignment\",d);z===a.AUTO&&(z=s.getLayoutValue(\"symbol-placement\",d)===r.POINT?a.VIEWPORT:a.MAP);const k=z===a.MAP,b=s.getLayoutValue(\"text-keep-upright\",d)&&k,G=g===l.HITTEST,j=.8*N/M;this._glyphTextureSize||(this._glyphTextureSize=t(_.width/4,_.height/4));const W=s.getPaintValue(\"text-translate\",d),F=s.getPaintValue(\"text-translate-anchor\",d),B=this._sdfProgramOptions;B.id=G;const H=D.getMaterialProgram(c,x,B);if(v&&null!=E&&!H.compiled)return void E();c.useProgram(H),H.setUniformMatrix3fv(\"u_displayViewMat3\",z===a.MAP?T.displayViewMat3:T.displayMat3),H.setUniformMatrix3fv(\"u_displayMat3\",F===n.VIEWPORT?T.displayMat3:T.displayViewMat3),H.setUniform2fv(\"u_textTranslation\",W),H.setUniform1f(\"u_depth\",s.z+y),H.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),H.setUniform1f(\"u_mapRotation\",f(T.rotation)),H.setUniform1f(\"u_keepUpright\",b?1:0),H.setUniform1f(\"u_level\",10*d),H.setUniform1i(\"u_texture\",o),H.setUniform1f(\"u_antialiasingWidth\",j),H.setUniform1f(\"u_fadeDuration\",i/1e3),G&&H.setUniform4fv(\"u_id\",p);let C=-1;for(const t of u){if(!t.layerData.has(U))continue;if(t.key.level!==C&&(C=t.key.level,x.setDataUniforms(H,d,s,C,P)),I=t.layerData.get(U),0===I.glyphPerPageElementsMap.size)continue;I.prepareForRendering(c),I.updateOpacityInfo();const e=I.textVAO;if(null==e)continue;c.bindVAO(e),H.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.dvs),c.setStencilTestEnabled(!0),c.setStencilFunction(m.GREATER,255,255),c.setStencilWriteMask(0);const i=(performance.now()-I.lastOpacityUpdate)/1e3;H.setUniform1f(\"u_time\",i),I.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(c,e,i,_,H,O,w,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,c.LINEAR,i,o),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(d.TRIANGLES,t[1],g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f(\"u_halo\",0),e.drawElements(d.TRIANGLES,t[1],g.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}export{_ as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LabelMaterialKey as o}from\"../materialKey/MaterialKey.js\";import{CompareFunction as n,PrimitiveType as r,DataType as s}from\"../../../../webgl/enums.js\";const i=e=>t(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:s.SHORT},{location:1,name:\"a_id\",count:4,type:s.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:s.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:s.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:s.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:s.SHORT},{location:8,name:\"a_texCoords\",count:2,type:s.UNSIGNED_SHORT}]});class l extends a{dispose(){}getGeometryType(){return e.LABEL}supportsSymbology(e){return!0}drawGeometry(e,t,a,l){const{context:m,painter:u,state:d,rendererInfo:f,requestRender:c,allowDelayedRender:_}=e,p=o.load(a.materialKey),E=p.mapAligned?1:0;if(!E&&Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)return;const{bufferLayouts:y,attributes:N}=i(p),U=u.materialManager.getMaterialProgram(e,p,\"materials/label\",N,l);if(_&&null!=c&&!U.compiled)return void c();e.context.setStencilFunction(n.EQUAL,0,255),m.useProgram(U),this._setSharedUniforms(U,e,t),u.textureManager.bindTextures(m,U,p);const S=1===E?d.displayViewMat3:d.displayMat3;this._setSizeVVUniforms(p,U,f,t),U.setUniform1f(\"u_mapRotation\",Math.floor(d.rotation/360*254)),U.setUniform1f(\"u_mapAligned\",E),U.setUniformMatrix3fv(\"u_displayMat3\",S),U.setUniform1f(\"u_opacity\",1),U.setUniform2fv(\"u_screenSize\",e.state.size);const T=a.target.getVAO(m,y,N),g=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",1),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),U.setUniform1f(\"u_isHaloPass\",1),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(r.TRIANGLES,a.indexCount,s.UNSIGNED_INT,g),m.setStencilTestEnabled(!0),m.setBlendingEnabled(!0)}}export{l as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";import{LineMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as n,DataType as r}from\"../../../../webgl/enums.js\";const i=e=>t(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:r.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:r.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:r.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:r.BYTE},{location:7,name:\"a_aux\",count:2,type:r.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT}]});class s extends o{dispose(){}getGeometryType(){return e.LINE}supportsSymbology(e){return!0}drawGeometry(e,t,o,s){const{context:l,painter:m,rendererInfo:c,displayLevel:u,passOptions:d,requestRender:p,allowDelayedRender:y}=e,_=a.load(o.materialKey),f=null!=d&&\"hittest\"===d.type;let E=i(_),N=n.TRIANGLES;f&&(E=this._getTriangleDesc(o.materialKey,E),N=n.POINTS);const{attributes:g,bufferLayouts:S}=E,T=m.materialManager.getMaterialProgram(e,_,\"materials/line\",g,s);if(y&&null!=p&&!T.compiled)return void p();const U=1/e.pixelRatio,G=0;l.useProgram(T),this._setSharedUniforms(T,e,t),_.textureBinding&&m.textureManager.bindTextures(l,T,_);const I=2**(u-t.key.level);T.setUniform1f(\"u_zoomFactor\",I),T.setUniform1f(\"u_blur\",G+U),T.setUniform1f(\"u_antialiasing\",U),this._setSizeVVUniforms(_,T,c,t),this._setColorAndOpacityVVUniforms(_,T,c),l.setFaceCullingEnabled(!1);const D=o.target.getVAO(l,S,g,f);let R=o.indexCount,x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;f&&(R/=3,x/=3),l.bindVAO(D),l.drawElements(N,R,r.UNSIGNED_INT,x)}}export{s as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import o from\"./WGLGeometryBrush.js\";import{TextMaterialKey as a}from\"../materialKey/MaterialKey.js\";import{PrimitiveType as n,DataType as r}from\"../../../../webgl/enums.js\";const s=t=>e(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:r.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:r.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:8,name:\"a_texCoords\",count:2,type:r.UNSIGNED_SHORT}]});class i extends o{dispose(){}getGeometryType(){return t.TEXT}supportsSymbology(t){return!0}drawGeometry(t,e,o,i){const{context:m,painter:l,rendererInfo:u,state:d,passOptions:f,requestRender:_,allowDelayedRender:p}=t,c=a.load(o.materialKey),y=null!=f&&\"hittest\"===f.type,{bufferLayouts:E,attributes:N}=s(c),U=l.materialManager.getMaterialProgram(t,c,\"materials/text\",N,i);if(p&&null!=_&&!U.compiled)return void _();m.useProgram(U);let S=n.TRIANGLES;y&&(S=n.POINTS),this._setSharedUniforms(U,t,e),l.textureManager.bindTextures(m,U,c),U.setUniformMatrix3fv(\"u_displayMat3\",d.displayMat3),U.setUniformMatrix3fv(\"u_displayViewMat3\",d.displayViewMat3),this._setSizeVVUniforms(c,U,u,e),this._setColorAndOpacityVVUniforms(c,U,u),this._setRotationVVUniforms(c,U,u);const T=o.target.getVAO(m,E,N),x=o.indexFrom*Uint32Array.BYTES_PER_ELEMENT;m.bindVAO(T),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",1),m.drawElements(S,o.indexCount,r.UNSIGNED_INT,x),U.setUniform1f(\"u_isHaloPass\",1),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(n.TRIANGLES,o.indexCount,r.UNSIGNED_INT,x),U.setUniform1f(\"u_isHaloPass\",0),U.setUniform1f(\"u_isBackgroundPass\",0),m.drawElements(S,o.indexCount,r.UNSIGNED_INT,x)}}export{i as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{c as e}from\"../../../../chunks/mat3f32.js\";import{brushes as r}from\"../brushes.js\";import{Container as s}from\"../Container.js\";import t from\"./ClippingInfo.js\";import{WGLDrawPhase as n}from\"./enums.js\";class i extends s{constructor(){super(...arguments),this.name=this.constructor.name}set clips(e){this._clips=e,this.children.forEach((r=>r.clips=e)),this._updateClippingInfo()}beforeRender(e){super.beforeRender(e),this.updateTransforms(e.state)}_createTransforms(){return{dvs:e()}}doRender(e){const r=this.createRenderParams(e),{painter:s,globalOpacity:t,profiler:i,drawPhase:a}=r,o=a===n.LABEL||a===n.HIGHLIGHT?1:t*this.computedOpacity;i.recordContainerStart(this.name),s.beforeRenderLayer(r,this._clippingInfos?255:0,o),this.renderChildren(r),s.compositeLayer(r,o),i.recordContainerEnd()}renderChildren(e){null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(e.painter));for(const s of this._renderPasses)try{s.render(e)}catch(r){}}createRenderParams(e){return e.requireFBO=this.requiresDedicatedFBO,e}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[r.clip],target:()=>this._clippingInfos,drawPhase:n.MAP|n.LABEL|n.LABEL_ALPHA|n.DEBUG|n.HIGHLIGHT})]}updateTransforms(e){for(const r of this.children)r.setTransform(e)}onAttach(){super.onAttach(),this._updateClippingInfo()}onDetach(){super.onDetach(),this._updateClippingInfo()}_updateClippingInfo(){null!=this._clippingInfos&&(this._clippingInfos.forEach((e=>e.destroy())),this._clippingInfos=null);const e=this.stage;if(!e)return;const r=this._clips;null!=r&&r.length&&(this._clippingInfos=r.items.map((r=>t.fromClipArea(e,r)))),this.requestRender()}}export{i as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import e from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{c as s}from\"../../../../chunks/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import o from\"./Mesh2D.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";const a=t=>parseFloat(t)/100;class c extends i{constructor(t,e){super(),this._clip=e,this._cache={},this.stage=t,this._handle=r((()=>e.version),(()=>this._invalidate())),this.ready()}static fromClipArea(t,e){return new c(t,e)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(t,e,r,s){const[i,o]=e.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===o||(this._lastWidth=i,this._lastHeight=o,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(e,this._clip),o=i.getIndexBuffer(t),a=i.getVertexBuffers(t);this._cache.mesh=i,this._cache.vao=new h(t,r,s,a,o)}return this._cache.vao}_createTransforms(){return{dvs:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(t,e){const[r,s]=t.size,i=\"string\"==typeof e.left?a(e.left)*r:e.left,o=\"string\"==typeof e.right?a(e.right)*r:e.right,h=\"string\"==typeof e.top?a(e.top)*s:e.top,c=\"string\"==typeof e.bottom?a(e.bottom)*s:e.bottom,n=i,l=h;return{x:n,y:l,width:Math.max(r-o-n,0),height:Math.max(s-c-l,0)}}_createMesh(r,s){switch(s.type){case\"rect\":return o.fromRect(this._createScreenRect(r,s));case\"path\":return o.fromPath(s);case\"geometry\":return o.fromGeometry(r,s);default:return e.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new t(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),o.fromRect({x:0,y:0,width:1,height:1})}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{e as r}from\"../../../../chunks/earcut.js\";import{s as n}from\"../../../../chunks/vec2.js\";import{a as s}from\"../../../../chunks/vec2f64.js\";import{convertFromNestedArray as o,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as a}from\"./number.js\";import{BufferObject as f}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as h,Usage as m,DataType as u}from\"../../../webgl/enums.js\";const y=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return u.UNSIGNED_BYTE;case 2:return u.UNSIGNED_SHORT;case 4:return u.UNSIGNED_INT;default:throw new e(\"Cannot get DataType of array\")}},l=(e,t,r,n)=>{let s=0;for(let o=1;o<r;o++){const r=e[2*(t+o-1)],n=e[2*(t+o-1)+1];s+=(e[2*(t+o)]-r)*(e[2*(t+o)+1]+n)}return n?s>0:s<0},x=({coords:e,lengths:t},n)=>{const s=[];for(let o=0,i=0;o<t.length;i+=t[o],o+=1){const c=i,a=[];for(;o<t.length-1&&l(e,i+t[o],t[o+1],n);o+=1,i+=t[o])a.push(i+t[o]-c);const f=e.slice(2*c,2*(i+t[o])),h=r(f,a,2);for(const e of h)s.push(e+c)}return s};class g{constructor(e,t,r,n=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=n}static fromRect({x:e,y:t,width:r,height:n}){const s=e,o=t,i=s+r,c=o+n;return g.fromScreenExtent({xmin:s,ymin:o,xmax:i,ymax:c})}static fromPath(e){const t=o(new c,e.path,!1,!1),r=t.coords,n=new Uint32Array(x(t,!0)),s=new Uint32Array(r.length/2);for(let o=0;o<s.length;o++)s[o]=a(Math.floor(r[2*o]),Math.floor(r[2*o+1]));return new g({geometry:s},n,h.TRIANGLES)}static fromGeometry(r,n){const s=n.geometry?.type;switch(s){case\"polygon\":return g.fromPolygon(r,n.geometry);case\"extent\":return g.fromMapExtent(r,n.geometry);default:return t.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${s}`,n)),g.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=i(new c,t,!1,!1),o=r.coords,f=new Uint32Array(x(r,!1)),m=new Uint32Array(o.length/2),u=s(),y=s();for(let s=0;s<m.length;s++)n(u,o[2*s],o[2*s+1]),e.toScreen(y,u),m[s]=a(Math.floor(y[0]),Math.floor(y[1]));return new g({geometry:m},f,h.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:n}){const s={geometry:new Uint32Array([a(e,r),a(t,r),a(e,n),a(e,n),a(t,r),a(t,n)])},o=new Uint32Array([0,1,2,3,4,5]);return new g(s,o,h.TRIANGLES)}static fromMapExtent(e,t){const[r,n]=e.toScreen([0,0],[t.xmin,t.ymin]),[s,o]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([a(r,n),a(s,n),a(r,o),a(r,o),a(s,n),a(s,o)])},c=new Uint32Array([0,1,2,3,4,5]);return new g(i,c,h.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)null!=this._cache.vertexBuffers[e]&&this._cache.vertexBuffers[e].dispose()}get elementType(){return y(this.indices)}getIndexBuffer(e,t=m.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=f.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=m.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,n)=>({...r,[n]:f.createVertex(e,t,this.vertices[n])})),{})),this._cache.vertexBuffers}}export{g as default};\n"],"names":["$lW9ux","parcelRequire","$3a330ad307cc7e75$export$7d68cd8857639377","marker","$2rCUj","default","line","$ffM10","fill","$f6RQI","text","$b1gIk","label","$hEqYM","clip","$fygbE","stencil","$bVXM2","bitmap","overlay","$vmzLD","tileInfo","$c48sV","vtlBackground","$3o8Fm","WGLBrushVTLBackground","vtlFill","$01Udp","WGLBrushVTLFill","vtlLine","$k3EOw","WGLBrushVTLLine","vtlCircle","$fRnN2","WGLBrushVTLCircle","vtlSymbol","$5tmA1","WGLBrushVTLSymbol","dotDensity","$2b9Px","heatmap","$f1kqf","pieChart","$bggKL","$aPQ4T","$ff866097453217af$var$a","nearest","defines","samplingMode","$l3QXd","TextureSamplingMode","NEAREST","mips","bilinear","LINEAR","bicubic","trilinear","LINEAR_MIPMAP_LINEAR","$ff866097453217af$export$2e2bcd8739ae039","$kUF3z","dispose","this","_quad","prepareState","context","e","setBlendingEnabled","setColorMask","setStencilWriteMask","setStencilTestEnabled","draw","i","s","a","renderingOptions","d","painter","l","requestRender","m","allowDelayedRender","c","source","isReady","p","t","state","i1","resolution","pixelRatio","n","Math","round","r","rotation","isSourceScaled","$ff866097453217af$var$o","u","materialManager","getProgram","_desc","compiled","timeline","begin","name","blendFunction","setBlendFunctionSeparate","BlendFactor","ONE","ONE_MINUS_SRC_ALPHA","setStencilFunction","CompareFunction","EQUAL","stencilRef","$jIYmG","coordScale","f","computedOpacity","_","transforms","E","setSamplingProfile","bind","TEXTURE_BINDING_BITMAP","useProgram","setUniformMatrix3fv","dvs","setUniform1i","setUniform2fv","setUniform1f","end","constructor","super","arguments","vsPath","fsPath","attributes","Map","$g0mVO","$e5c0f393dae41be2$export$2e2bcd8739ae039","_rctx","bindVAO","_vao","unbind","drawArrays","PrimitiveType","TRIANGLE_STRIP","_count","_vertexBuffer","BufferObject","createVertex","Usage","STATIC_DRAW","Uint16Array","$4radX","VertexArrayObject","geometry","$hSAA2","VertexElementDescriptor","DataType","SHORT","length","$f398e29b0e11ea01$export$2e2bcd8739ae039","drawMany","visible","brushEffect","$bnsvn","$b5269662f551456c$export$2e2bcd8739ae039","_program","setFaceCullingEnabled","setStencilOp","StencilOperation","KEEP","REPLACE","ALWAYS","o","$cPgEa","createProgramDescriptor","location","count","type","getVAO","bufferLayouts","indexBuffer","$9YlKP","createProgram","$6b7jA","background","setUniform4fv","_color","displayMat3","drawElements","TRIANGLES","size","UNSIGNED_INT","$8487f435e908090f$export$407448d2b89b1813","Float32Array","$8487f435e908090f$export$2d1720544b23b823","$8487f435e908090f$export$df995fae86a55f06","$8487f435e908090f$export$ae1af26003f05816","$8487f435e908090f$export$3b14a55fb2447963","$8487f435e908090f$export$4368d992c4eafac0","$8487f435e908090f$export$f1e1789686576879","$8487f435e908090f$export$39b482c5e57630a8","$8487f435e908090f$export$dc98b0b04f4c7758","$8487f435e908090f$export$c4ce752e73470fba","$8487f435e908090f$export$3a6d5c9ae78a2c08","$8487f435e908090f$export$dda1d9f60106f0e9","$8487f435e908090f$export$23f2a1d2818174ef","$8487f435e908090f$export$35e795649ee09318","Object","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","$hvFId","$47f971bf45ea17aa$export$8ce1fd94bee2f412","shaders","vertexShader","resolveIncludes","fragmentShader","$4DA8s","$cbf5b0131c9e6e11$var$t","ShaderCompiler","split","forEach","$cbf5b0131c9e6e11$export$f32426b6c7a835bb","$3606d5a91734e669$export$2e2bcd8739ae039","bitBlit","blend","debug","dot","filtering","fx","integrate","heatmapResolve","highlight","magnifier","materials","hittest","icon","heatmapAccumulate","pie","shared","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","compositeband","convolution","curvature","extractband","local","mask","ndvi","remap","slope","stretch","vs","scalar","util","$05e46877999c2100$export$2e2bcd8739ae039","GREATER","dvsMat3","isWrapAround","perspectiveTransform","texture","FLOAT","tex","UNSIGNED_SHORT","v","bindTexture","y","$1CpCt","$19643beb87fbff45$export$2e2bcd8739ae039","_disposeTextures","_dotFBO","disposeMaybe","_dotVAO","getGeometryType","$eyQUy","WGLGeometryType","FILL","supportsSymbology","WGLSymbologyType","DOT_DENSITY","_drawFills","passOptions","r1","_drawDotLocations","_drawDotDensity","rendererInfo","_dotDesc","rendererSchema","$8rLKR","assertRendererSchema","_createDotDensityMesh","divisor","normalized","offset","stride","_dotSamplers","max","dotSize","window","devicePixelRatio","_setSharedUniforms","POINTS","requiredLevel","getViewport","dotScale","colors","h","activeDots","backgroundColor","T","dotValue","x","setViewport","w","getBoundFramebufferObject","D","_createFBO","bindFramebuffer","setClearColor","clear","gl","COLOR_BUFFER_BIT","STENCIL_BUFFER_BIT","key","level","b","TILE_SIZE","g","O","S","scale","setUniformMatrix4fv","_bindDotDensityTextures","width","height","colorTexture","$lVV61","TextureDescriptor","wrapMode","TextureWrapMode","CLAMP_TO_EDGE","$bEXVh","Renderbuffer","$iUbLg","RenderbufferDescriptor","RenderbufferFormat","DEPTH_STENCIL","$gn7r1","FramebufferObject","_dotTextures","_createDotDensityTextures","seed","setUniform1iv","Int16Array","e1","t1","_dotTextureSize","_seed","$lQo64","_allocDotDensityTexture","getFloat","dataType","PixelType","$2HKUi","Texture","Int32Array","TEXTURE_BINDING_RENDERER_0","TEXTURE_BINDING_RENDERER_1","$b0012fe208eb2f86$export$2e2bcd8739ae039","$i2jNz","drawGeometry","$eDdav","FillMaterialKey","load","materialKey","N","getTechniqueFromMaterialKey","data","shader","I","vertexLayout","U","hittestAttributes","programSpec","UNSIGNED_BYTE","symbologyType","SIMPLE","OUTLINE_FILL_SIMPLE","splice","$b0012fe208eb2f86$var$u","L","_getTriangleDesc","G","getMaterialProgram","row","col","R","M","setUniform2f","MAX_REPRESENTABLE_INT","floor","textureBinding","textureManager","bindTextures","j","_setSizeVVUniforms","_setColorAndOpacityVVUniforms","B","target","A","indexCount","F","indexFrom","Uint32Array","BYTES_PER_ELEMENT","$d217c5735a810841$export$2e2bcd8739ae039","includes","commit","getGeometry","attributeView","forEachCommand","MaterialKeyBase","displayLevel","position","distance","tileMat3","viewMat3","displayViewMat3","MIN_MAX_ZOOM_PRECISION_FACTOR","TEXTURE_BINDING_ATTRIBUTE_DATA_0","TEXTURE_BINDING_ATTRIBUTE_DATA_1","TEXTURE_BINDING_ATTRIBUTE_DATA_2","TEXTURE_BINDING_ATTRIBUTE_DATA_3","TEXTURE_BINDING_ATTRIBUTE_DATA_4","TEXTURE_BINDING_ATTRIBUTE_DATA_5","vvSizeMinMaxValue","vvSizeScaleStops","vvSizeScaleStopsValue","vvSizeFieldStops","getSizeVVFieldStops","setUniform1fv","values","sizes","vvSizeUnitValue","vvSizeUnitValueToPixelsRatio","vvColor","vvColorValues","vvColors","vvOpacity","vvOpacityValues","vvOpacities","_setRotationVVUniforms","vvRotation","vvMaterialParameters","vvRotationType","map","findIndex","join","_computeDesc","get","strides","t2","push","set","$bPmsI","$6265e37540ea5458$export$7c64888ea3407110","$6265e37540ea5458$export$fac32b2b4a46bab2","$9J9Zt","DotDensityTechnique","$2jiKd","HeatmapTechnique","$4VbjJ","PieChartTechnique","$2aHiX","Technique","$6265e37540ea5458$export$8ebe8e698e82e520","geometryType","MARKER","HEATMAP","PIE_CHART","$194e1b589af77578$export$db2068a1a050eaf2","static","$9IkRH","$715010e98641afa4$export$509a4524785b2cbb","visualVariables","dotBlending","referenceScale","dotBlendingEnabled","_createRendererSchema","DOT_DENSITY_MAX_FIELDS","color","writeColor","ddDotBlending","$jCR4P","$1aebe5611c381079$export$fee4cac91845e50f","field","valueExpression","radius","isFieldActive","minDensity","densityRange","kernel","gradient","gradientHash","maxDensity","colorStops","ratio","toString","pt2px","$4xw97","generateGradient","$hJt7u","$395543b05ed3c10a$export$69a10abc44db0690","CHART_MAX_FIELDS","defaultColor","othersColor","outlineColor","holePercentage","sectorThreshold","outlineWidth","numberOfFields","othersCategory","outline","threshold","$6TszD","$aef6ca74440e154d$var$T","getLogger","$aef6ca74440e154d$var$v","$aef6ca74440e154d$var$B","$aef6ca74440e154d$export$2e2bcd8739ae039","loadQualityProfile","_drawMarkers","GEQUAL","$aef6ca74440e154d$var$G","$aef6ca74440e154d$var$O","$aef6ca74440e154d$var$x","$9GBOl","Effect","createOptions","_prevFBO","_accumulateFramebuffer","detachDepthStencilBuffer","_accumulateOutputStencilBuffer","_resolveGradientTexture","_tileQuad","_prevViewport","_loadResources","_updateResources","setBlendFunction","ClearBufferBit","PI","pixelFormat","internalFormat","requiresSharedStencilBuffer","getSharedStencilBuffer","_prevGradientHash","resize","setData","$aef6ca74440e154d$var$P","depthStencilAttachment","descriptor","errorOnce","blitFramebuffer","_qualityProfile","$6W848","loadHeatmapTextureConfiguration","$eIYCa","ContextType","WEBGL1","$1c7c48923e71a857$var$l","$1c7c48923e71a857$export$2e2bcd8739ae039","MarkerMaterialKey","$70d55dc1070968d9$export$a32b0b1c1ac59d04","$50ce6a8285e0f944$export$2395adc746c58553","textureFloat","colorBufferFloat","capabilities","textureFloatLinear","textureHalfFloat","textureHalfFloatLinear","HALF_FLOAT","floatBlend","unwrapOrThrow","driverTest","floatBufferBlend","result","R32F","R16F","warnOnce","PixelFormat","RED","RGBA","SizedPixelFormat","$024454560b2b878a$var$h","$024454560b2b878a$export$2e2bcd8739ae039","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_canvas","_loadWGLResources","rangeX","rangeY","LINE_STRIP","_getTexture","$1pevJ","Int8Array","$5zT8C","Pos2b","triangleCountReportedInDebug","triangleCount","document","createElement","setAttribute","id","getContext","font","textAlign","textBaseline","clearRect","fillStyle","fillRect","fillText","isImmutable","$5Bkmy","$40fafde2e0f4d018$export$2cb0a866d4d124ad","BYTE","$40fafde2e0f4d018$export$d5a5b3651bb12884","$40fafde2e0f4d018$export$2ee4665ddbe3f88f","$106361cbfd6f7e39$export$9d302d05d0dcab09","$41403410ed3cb005$export$2e2bcd8739ae039","WebGL2RenderingContext","$832e2f2f21845f14$export$2e2bcd8739ae039","$8b03626e46b8ecbf$export$2e2bcd8739ae039","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialized","_initialize","setStencilFunctionSeparate","Face","FRONT_AND_BACK","$8TN87","$277a55e3d3f2914b$export$b2727726c5730c49","styleLayerUID","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","spriteMosaic","P","VTL_HIGH_RES_CUTOFF","drawPhase","WGLDrawPhase","HITTEST","_programOptions","pattern","k","getMosaicItemPosition","tl","br","page","s1","getPageSize","VTL_TEXTURE_BINDING_UNIT_SPRITES","setUniform4f","z","$3mbeV","u32to4Xu8","e2","r2","o1","i2","nextPowerOfTwo","s2","_patternMatrix","getAttributeLocations","getLayoutInfo","$jsolS","$1xUaV","$b8be42734e268cf4$export$69eb501125b3eee4","some","layerData","circleIndexCount","circleMaterial","TranslateAnchor","VIEWPORT","has","setDataUniforms","prepareForRendering","vao","circleIndexStart","$005bb34fc3d3760c$var$u","$005bb34fc3d3760c$export$dbc1f41c634a8013","renderPass","n1","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","t3","t4","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","fillMaterial","_fillProgramOptions","V","fillVAO","i3","patternMap","i4","n2","fillIndexStart","outlineMaterial","_outlineProgramOptions","outlineVAO","outlineIndexStart","$e9a3bf3a7bc2a900$export$21119c1447aa1838","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","sdf","e3","e4","e5","a1","e6","e7","lineIndexStart","$gLni9","$3fc12d185e5c3fd9$export$bfa8bfb2053d1c57","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","RotationAlignment","AUTO","SymbolPlacement","POINT","MAP","isIconSDF","_iconProgramOptions","$c4cvq","degToByte","$iqtPh","FADE_DURATION","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","a2","_renderIconRange","_spritesTextureSize","getWidth","getHeight","glyphMosaic","textMaterial","glyphPerPageElementsMap","_glyphTextureSize","W","_sdfProgramOptions","H","VTL_TEXTURE_BINDING_UNIT_GLYPHS","C","textVAO","_renderGlyphRange","$cd9b19a098f2f30b$export$2e2bcd8739ae039","LABEL","LabelMaterialKey","mapAligned","abs","$cd9b19a098f2f30b$var$i","$b1ad808fc13d4499$export$2e2bcd8739ae039","LINE","LineMaterialKey","$b1ad808fc13d4499$var$i","$805cc0bfbc9b4365$export$2e2bcd8739ae039","TEXT","TextMaterialKey","$805cc0bfbc9b4365$var$s","$a817159313e70c0b$export$2e2bcd8739ae039","$jrPhy","Container","clips","_clips","children","_updateClippingInfo","beforeRender","updateTransforms","_createTransforms","doRender","createRenderParams","globalOpacity","profiler","HIGHLIGHT","recordContainerStart","beforeRenderLayer","_clippingInfos","renderChildren","compositeLayer","recordContainerEnd","_renderPasses","prepareRenderPasses","render","requireFBO","requiresDedicatedFBO","registerRenderPass","brushes","$4ZNdX","LABEL_ALPHA","DEBUG","setTransform","onAttach","onDetach","destroy","stage","items","$jqn4d","fromClipArea","$e24256a561e6073e$var$a","parseFloat","$e24256a561e6073e$export$2e2bcd8739ae039","$5aS5k","DisplayObject","_destroyGL","_cache","mesh","_handle","remove","_clip","_lastWidth","_lastHeight","_createMesh","getIndexBuffer","getVertexBuffers","_invalidate","_createScreenRect","left","right","top","bottom","$7SJnW","fromRect","fromPath","fromGeometry","error","$cc23H","watch","version","ready","$5bd0c815cbcd75d5$var$l","$5bd0c815cbcd75d5$var$x","coords","lengths","slice","$3Icya","$5bd0c815cbcd75d5$export$2e2bcd8739ae039","fromScreenExtent","xmin","ymin","xmax","ymax","$8RZNq","convertFromNestedArray","$i24Gp","path","i1616to32","fromPolygon","fromMapExtent","convertFromPolygon","$lOOi9","$17nYB","toScreen","vertexBuffers","elementType","$5bd0c815cbcd75d5$var$y","indices","createIndex","keys","vertices","reduce","primitiveType","isMapSpace"],"version":3,"file":"mapViewDeps.2b249a97.js.map"}