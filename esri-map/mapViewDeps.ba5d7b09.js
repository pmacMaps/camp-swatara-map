function e(e,t,i,r){Object.defineProperty(e,t,{get:i,set:r,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("gZGet",(function(i,r){e(i.exports,"default",(function(){return q}));var s=t("j6uz9"),n=t("27btt"),o=t("iLz4U"),a=t("8Y9g8"),l=t("5HTPH"),d=t("1CpCt"),h=t("lHg4e"),c=t("hTI69");t("aX9sh"),t("gHCNy");var u=t("qA6zg"),f=t("jaaCV"),p=t("19dbe"),m=t("gPay9"),y=t("86d4E"),g=t("5zXcg"),x=t("fau59"),_=t("haPYR"),v=t("1kN4D"),b=t("eCeXt"),D=t("aPQ4T"),B=t("8poAO"),C=t("6Xzce"),T=t("6sktq"),w=t("hAqwK"),F=t("1dnlL"),I=t("6zm2Z"),S=t("9VqGW"),L=t("4W3Zs"),M=t("bxcX3"),R=t("2Tj4r"),A=t("faWte"),z=t("f4cqe"),G=t("mayqQ"),P=t("d1j0h"),O=t("5smAu"),E=t("8r0sl"),V=t("3c9O1");const U=(0,l.default)("esri-2d-graphic-debug");function j(e,t,i){if(i.has(e))return i.get(e);const r={tile:t,addedOrModified:[],removed:[]};return i.set(e,r),r}let k=class extends((0,O.GraphicsView)((0,a.HandleOwnerMixin)(n.default))){destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,i){if(e){const r=(0,L.createMatcherSchema)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,S.createMatcher)(r,t,null,i)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._attributeStore=new(0,M.default)({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,E.getWebGL1Capabilities)()),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=new(0,I.WGLTemplateStore)(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new(0,z.default)(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new(0,F.WGLMeshFactory)(null,this.uid,e),this._templateStore=e,this.handles.add([this.watch("renderer",(t=>{this._createMatcher(t,e,this.container.stage.resourceManager);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",(e=>this._onTileUpdate(e))),this.container.on("attach",(()=>{U&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const t=this.container.stage.resourceManager;this._createMatcher(this.renderer,e,t),this._graphicStore.setResourceManager(t),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e){if(!this.view||!this.view.position)return null;const{resolution:t,rotation:i}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,i)}update(e){(0,h.throwIfAborted)(this._controller.signal);const t=e.state,{resolution:i}=t;if(this._graphicStore.updateLevel(i),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i,newValue:r}=e;switch(i){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,r),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,p.width)(t)||0===(0,p.height)(t))return[];const i=(0,G.intersectingInternationalDateline)(t,this.view.spatialReference);return(0,d.isSome)(i)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,h.throwIfAborted)(this._controller.signal);const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified),r=await this._processGraphics(t,i);return(0,h.throwIfAborted)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:r,remove:e.removed,end:!0,clear:!1,sort:!1}),r}_patchTile(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),r=this._tilesToUpdate;let s;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],a=this._getIntersectingTiles(t);for(const e of a)s=e.id,j(s,e,r).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=i.length;for(let t=0;t<e.length;t++){const i=e[t];o[a+t]=i,this._graphicsSet.add(i),n.push(this._addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t)s=i.id,j(s,i,r).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)s=e.id,j(s,e,r).addedOrModified.push(l)}this._graphicStore.updateZ();const d=[];for(const[e,t]of r)d.push(this._updateTile(t));await Promise.all(d)}catch(e){(0,h.isAbortError)(e)}for(const e of t)try{const t=await this._getSymbolForGraphic(e,{});if(t){const e=t.hash();this._hashToExpandedSymbol.delete(e)}}catch(e){(0,h.isAbortError)(e)}r.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,d.isNone)(e.geometry)?null:{geometryType:(0,y.getJsonType)(e.geometry),spatialReference:f.default.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,h.throwIfAborted)(this._controller.signal),(0,d.isSome)(e.symbol)?Promise.resolve(e.symbol):(0,d.isSome)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,i){let r=this._hashToCIM.get(t);if(r)return Promise.resolve(r);const s=(0,v.symbolToCIM)(e);if((0,d.isSome)(s)){if("CIMSymbolReference"===s.type)return r=s,this._hashToCIM.set(t,r),Promise.resolve(r);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=s.fetchCIMSymbol(i).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,h.throwIfAbortError)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,i,r){const s=this._hashToExpandedSymbol.get(i);if(s)return Promise.resolve(s);let n=this._hashToExpandedSymbolPromise.get(i);if(n)return n;const o=this.container.stage,a=this._getArcadeInfo(t),l=(0,L.createSymbolSchemaOptions)(null),d=(0,V.createSymbolSchema)(e,l);return n=(0,P.expandSymbol)(d,a,o.resourceManager,r),this._hashToExpandedSymbolPromise.set(i,n),n.then((e=>(this._hashToExpandedSymbol.set(i,e),this._hashToExpandedSymbolPromise.delete(i),e))),n}async _getSymbolResources(e,t){return(0,h.throwIfAborted)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((i=>{const r=i.hash();return this._getCIMSymbol(i,r,t).then((i=>(0,d.isNone)(i)?null:this._expandCIMSymbol(i,e,r,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const i=new Array(t.length);for(let e=0;e<t.length;e++){const r=t[e],s=[],[n]=(0,o.bidiText)(r.text);for(let e=0;e<n.length;e++)s.push(n.charCodeAt(e));i[e]={symbol:r,id:e,glyphIds:s}}const s=new Map;return this.container.getMaterialItems(i).then((i=>{for(let e=0;e<t.length;e++){const r=t[e];s.set(r.cim,{text:r.text,mosaicItem:i[e].mosaicItem})}return{symbol:e,textInfo:s,hash:r}}))}return{symbol:e,hash:r}}))))})).catch((e=>((0,h.throwIfAbortError)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,h.throwIfAborted)(this._controller.signal),(0,d.isNone)(e.geometry)||"mesh"===e.geometry.type)return null;let i=e.geometry;if((0,y.isPolygon)(i)){const e=i.rings;i.rings=e}else if((0,y.isPolyline)(i)){const e=i.paths;i.paths=e}else if((0,y.isExtent)(i)){const r=await this._getSymbolForGraphic(e,t);(0,h.throwIfAborted)(this._controller.signal),i=(0,G.isMarkerSymbol)(r.type)||(0,G.isTextSymbol)(r.type)?i.center:(0,G.polygonFromExtent)(i)}await(0,_.checkProjectionSupport)(i.spatialReference,this.view.spatialReference);const r=(0,g.normalizeCentralMeridianSync)(i),s=(0,_.project)(r,i.spatialReference,this.view.spatialReference);return(0,m.closeRingsAndFixWinding)(s),s}_onTileUpdate(e){const t=(0,x.getInfo)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,h.throwIfAborted)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};try{await this._addOrUpdateGraphic(e,i),(0,h.throwIfAborted)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,h.isAbortError)(t))throw t}}_updateGraphic(e,t){(0,h.throwIfAborted)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),r=this._getSymbolResources(e,t);return Promise.all([i,r]).then((([t,i])=>{(0,h.throwIfAborted)(this._controller.signal),this._graphicStore.addOrModify(e,i,t)}))}_addOrUpdateGraphic(e,t){(0,h.throwIfAborted)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),r=this._getSymbolResources(e,t);return Promise.all([i,r]).then((([t,i])=>{(0,h.throwIfAborted)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,i,t)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,p.create)(),e),i=new(0,B.GraphicTile)(e,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addNewTile(e,t){const i=this._addTile(e.key),r=this._graphicStore.queryTileData(this._templateStore,e);if(0===r.length)return;if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of r)e.geometry&&((0,y.isPoint)(e.geometry)||(0,y.isMultipoint)(e.geometry))&&this._wrapPoints(e,i)}const s=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,r),remove:[],end:!0,sort:!1};i.patch(t),this._tileUpdateSet.delete(s),this.notifyChange("updating")}catch(e){if(this._tileUpdateSet.delete(s),this.notifyChange("updating"),!(0,h.isAbortError)(e))throw e}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),r=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,r|(t?D.FILTER_FLAG_0:0))}_getGraphicsData(e,t,i){const r=this.view,s=(0,x.getInfo)(r.spatialReference),n=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of n)t.geometry&&((0,y.isPoint)(t.geometry)||(0,y.isMultipoint)(t.geometry))&&this._wrapPoints(t,e)}return n}_wrapPoints(e,t){const i=e.geometry;(0,y.isMultipoint)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,r=[];let s=0,n=0;for(const[e,o]of i){if(r.push([e+s,o]),s=0,t===G.TILE_SIZE){const i=5*G.PIXEL_BUFFER;e+n<i?(r.push([t,0]),s=-t):e+n>G.TILE_SIZE-i&&(r.push([-t,0]),s=t)}else e+n<-G.PIXEL_BUFFER?(r.push([t,0]),s=-t):e+n>G.TILE_SIZE+G.PIXEL_BUFFER&&(r.push([-t,0]),s=t);n+=e}e.points=r}_wrapPoint(e,t){const i=e.geometry;if(t===G.TILE_SIZE){const r=5*G.PIXEL_BUFFER;i.x<r?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>G.TILE_SIZE-r&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-G.PIXEL_BUFFER?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>G.TILE_SIZE+G.PIXEL_BUFFER&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}_processGraphics(e,t,i){if(!t||!t.length||!this._meshFactory)return null;const r=A.GraphicsReader.from(t),s=this._meshFactory;return this._matcher.then((t=>s.analyzeGraphics(r,this.container.stage.resourceManager,t,null,null,i).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,r))))))}_processAnalyzedGraphics(e,t){const i=this._meshFactory,r=t.getSize(),s=t.getCursor(),n={features:r,records:r,metrics:0},o=new(0,w.MeshData)(e.key.id,n,{fill:"default"},!1,!1),a=[];for(;s.next();){const t=s.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const r=new(0,T.default)(t.displayId);r.insertAfter=t.insertAfter,a.push(r),i.writeGraphic(o,s,e.level,this.container.stage.resourceManager)}const l=e.tileInfoView.tileInfo.isWrappable,d=o.serialize(l);if(1!==d.length)return new(0,C.TileData);const h=d[0].message;return C.TileData.fromVertexData(h,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,y.isPolyline)(t)?b.errorPolylineSymbol2D:(0,y.isPolygon)(t)||(0,y.isExtent)(t)?b.errorPolygonSymbol2D:b.errorPointSymbol2D}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}constructor(e){super(e),this._storage=new(0,R.ComputedAttributeStorage),this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}};(0,s._)([(0,c.property)({constructOnly:!0})],k.prototype,"requestUpdateCallback",void 0),(0,s._)([(0,c.property)()],k.prototype,"container",void 0),(0,s._)([(0,c.property)({constructOnly:!0})],k.prototype,"graphics",void 0),(0,s._)([(0,c.property)()],k.prototype,"updating",null),(0,s._)([(0,c.property)()],k.prototype,"view",void 0),(0,s._)([(0,c.property)()],k.prototype,"updateRequested",void 0),k=(0,s._)([(0,u.subclass)("esri.views.2d.layers.support.GraphicsView2D")],k);const q=k})),t.register("5zXcg",(function(i,r){e(i.exports,"normalizeCentralMeridianSync",(function(){return h}));var s=t("19dbe"),n=t("772GK"),o=t("fspd0"),a=t("86d4E"),l=t("jCqxN"),d=t("fau59");function h(e){if(!e)return null;let t=null;const i=e.spatialReference,r=(0,d.getInfo)(i);if(!r)return"toJSON"in e?e.toJSON():e;const s=(0,d.isWebMercator)(i)?102100:4326,h=l.cutParams[s].maxX,p=l.cutParams[s].minX,g=l.cutParams[s].plus180Line,x=l.cutParams[s].minus180Line;let _;const v="toJSON"in e?e.toJSON():e;if((0,a.isPoint)(v))_=c(v,h,p);else if((0,a.isMultipoint)(v))v.points=v.points.map((e=>c(e,h,p))),_=v;else if((0,a.isExtent)(v))_=function(e,t){if(!t)return e;const i=function(e,t){const i=[],{ymin:r,ymax:s}=e,n=e.xmax-e.xmin,o=e.xmin,a=e.xmax;let l;const[d,h]=t.valid;l=u(e.xmin,t);const c=l.x,p=l.frameId;l=u(e.xmax,t);const m=l.x,y=l.frameId,g=c===m&&n>0;if(n>2*h){const e={xmin:o<a?c:m,ymin:r,xmax:h,ymax:s},t={xmin:d,ymin:r,xmax:o<a?m:c,ymax:s},n={xmin:0,ymin:r,xmax:h,ymax:s},l={xmin:d,ymin:r,xmax:0,ymax:s},u=[],g=[];f(e,n)&&u.push(p),f(e,l)&&g.push(p),f(t,n)&&u.push(y),f(t,l)&&g.push(y);for(let e=p+1;e<y;e++)u.push(e),g.push(e);i.push({extent:e,frameIds:[p]},{extent:t,frameIds:[y]},{extent:n,frameIds:u},{extent:l,frameIds:g})}else c>m||g?i.push({extent:{xmin:c,ymin:r,xmax:h,ymax:s},frameIds:[p]},{extent:{xmin:d,ymin:r,xmax:m,ymax:s},frameIds:[y]}):i.push({extent:{xmin:c,ymin:r,xmax:m,ymax:s},frameIds:[p]});return i}(e,t).map((e=>e.extent));return i.length<2?i[0]||e:i.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:i.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}(v,r);else if((0,a.isPolygon)(v)||(0,a.isPolyline)(v)){const e=y;(0,n.getBoundsXY)(e,v);const i={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},r=(0,l.offsetMagnitude)(i.xmin,p)*(2*h),s=0===r?v:function(e,t){const i=(0,l.getGeometryParts)(e);for(const e of i)for(const i of e)i[0]+=t;return e}(v,r);i.xmin+=r,i.xmax+=r,(0,o.extentIntersectsPolyline)(i,g)&&i.xmax!==h||(0,o.extentIntersectsPolyline)(i,x)&&i.xmin!==p?t=s:_=s}else _=v;return null!==t?(new m).cut(t,h):_}function c(e,t,i){if(Array.isArray(e)){const r=e[0];if(r>t){const i=(0,l.offsetMagnitude)(r,t);e[0]=r+i*(-2*t)}else if(r<i){const t=(0,l.offsetMagnitude)(r,i);e[0]=r+t*(-2*i)}}else{const r=e.x;if(r>t){const i=(0,l.offsetMagnitude)(r,t);e.x+=i*(-2*t)}else if(r<i){const t=(0,l.offsetMagnitude)(r,i);e.x+=t*(-2*i)}}return e}function u(e,t){const[i,r]=t.valid,s=2*r;let n,o=0;return e>r?(n=Math.ceil(Math.abs(e-r)/s),e-=n*s,o=n):e<i&&(n=Math.ceil(Math.abs(e-i)/s),e+=n*s,o=-n),{x:e,frameId:o}}function f(e,t){const{xmin:i,ymin:r,xmax:s,ymax:n}=t;return p(e,i,r)&&p(e,i,n)&&p(e,s,n)&&p(e,s,r)}function p(e,t,i){return t>=e.xmin&&t<=e.xmax&&i>=e.ymin&&i<=e.ymax}class m{cut(e,t){let i;if(e.rings)this.closed=!0,i=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,i=e.paths,this.minPts=2}const r=i.length,s=-2*t;for(let e=0;e<r;e++){const t=i[e];if(t&&t.length>=this.minPts){const e=[];for(const i of t)e.push([i[0]+s,i[1]]);i.push(e)}}return this.closed?e.rings=i:e.paths=i,e}}const y=(0,s.create)()})),t.register("8poAO",(function(i,r){e(i.exports,"GraphicTile",(function(){return l}));var s=t("9BVF9"),n=t("bfOJh"),o=t("85L9a"),a=t("8n4SS");class l extends a.WGLTile{destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,i=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new(0,s.default),this._dispRecStore=n.default.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||i.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new(0,o.default)(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=n.default.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const i=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],r=(e.remove||[]).slice();for(const e of i)null!=e.insertAfter&&r.push(e.id);for(const e of r){const t=this._data.tileDisplayData.displayObjectRegistry.get(e);if(t){this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);this._data.tileDisplayData.displayObjectRegistry.delete(e);const i=this._data.tileDisplayData.displayObjects.indexOf(t);this._data.tileDisplayData.displayObjects.splice(i,1)}}for(const r of i){let i,s=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(s){const e=s.displayRecords;s.set(r),s.displayRecords=e;const t=s.displayRecords.length;for(let e=0;e<t;++e){const t=s.displayRecords[e],i=r.displayRecords[e];(e>=r.displayRecords.length||t.geometryType!==i.geometryType||t.symbolLevel!==i.symbolLevel||t.zOrder!==i.zOrder||t.materialKey!==i.materialKey)&&(this._dispRecStore.delete(s.displayRecords[e]),e<r.displayRecords.length&&(s.displayRecords[e]=void 0))}s.displayRecords.length=r.displayRecords.length}else{let e;s=r.copy(),s.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,s);const t=this._data.tileDisplayData.displayObjects;if(null!=s.insertAfter)if(i={},s.insertAfter>=0){const i=this._data.tileDisplayData.displayObjectRegistry.get(s.insertAfter);i?(e=t.indexOf(i)+1,e<t.length?t.splice(e,0,s):(t.push(s),e=t.length)):(t.push(s),e=t.length)}else t.unshift(s),e=0;else t.push(s),e=t.length;if(i){const s=r.displayRecords.length>0?1:0;let n=0;for(let r=e-1;r>=0&&n<s;--r)for(let e=t[r].displayRecords.length-1;e>=0&&n<s;--e){const s=t[r].displayRecords[e],o=this._data.tileDisplayData.displayList.getDPInfoType();i[o]||(i[o]=s,++n)}}}const n=r.displayRecords.length;for(let o=0;o<n;++o){const n=r.displayRecords[o];let a=s.displayRecords[o];a?(a.meshData=n.meshData,a.materialKey=n.materialKey):(a=n.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,s.displayRecords[o]=a);const l=n.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),h=e.addOrUpdate.tileBufferData.geometries[l],c=h.vertexBuffer,u=h.indexBuffer;let f;i&&(f=i[d]?this._data.tileDisplayData.displayList.splitAfter(i[d]):-1),t=this._dispRecStore.setMeshData(a,n,c,u,f)&&t,i&&null!=a.indexFrom&&null!=a.indexFrom&&(i[d]=a)}}return t}constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new(0,s.default)}}})),t.register("9BVF9",(function(t,i){e(t.exports,"default",(function(){return s}));const r=-1;class s{hasDirty(){return this._dirties.some((e=>e.indexCount!==r||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=r,e.indexCount=r,e.vertexFrom=r,e.vertexCount=r,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:i,indexFrom:s,vertexCount:n,vertexFrom:o,allDirty:a}=this._dirties[t],l={};let d,h=!1;(a||o!==r&&n>0)&&(l.geometry={count:n,from:o,allDirty:a},h=!0),(a||s!==r&&i>0)&&(d={count:i,from:s,allDirty:a},h=!0),h&&e({indices:d,vertices:l},t)}}markDirtyIndices(e,t,i){const s=this._dirties[e],n=t,o=i;if(!s.allDirty)if(s.indexCount!==r){const e=Math.min(s.indexFrom,n),t=Math.max(s.indexFrom+s.indexCount,n+o)-e;s.indexFrom=e,s.indexCount=t}else s.indexFrom=n,s.indexCount=o}markDirtyVertices(e,t,i,s){const n=this._dirties[e],o=i,a=s;if(!n.allDirty)if(n.vertexCount!==r){const e=Math.min(n.vertexFrom,o),t=Math.max(n.vertexFrom+n.vertexCount,o+a)-e;n.vertexFrom=e,n.vertexCount=t}else n.vertexFrom=o,n.vertexCount=a}constructor(){this._dirties=[{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1}]}}})),t.register("bfOJh",(function(i,r){e(i.exports,"default",(function(){return a})),t("5HTPH");var s=t("gaZis"),n=t("cPgEa");const o=["FILL","LINE","MARKER","TEXT","LABEL"];class a{static fromTileData(e,t){const i=function(e){const t=e.getStrides(),i={};for(let e=0;e<t.length;e++)i[o[e]]=t[e];return i}(e),r=[0,0,0,0,0],l=[0,0,0,0,0],d=e.tileDisplayData.displayObjects;for(const e of d)for(const t of e.displayRecords)r[t.geometryType]=Math.max(r[t.geometryType],t.vertexFrom+t.vertexCount),l[t.geometryType]=Math.max(l[t.geometryType],t.indexFrom+t.indexCount);const h=new a(i,e.tileDisplayData.displayList,t,null);for(let t=0;t<e.tileBufferData.geometries.length;++t){const i=r[t],a=l[t],d=e.tileBufferData.geometries[t],c=o[t],u=h._storageFor(c),f=e.tileBufferData.geometries[t].indexBuffer;let p;u.indexBuffer=f,u.idxFreeList=new(0,s.FreeList)(f.length),u.idxFreeList.allocate(a);for(const i in d.vertexBuffer){const r=e.tileBufferData.geometries[t].vertexBuffer[i];u.vertexBuffers[i].data=r.data,u.vertexBuffers[i].stride=r.stride;const s=(0,n.strideToPackingFactor)(r.stride),o=r.data.length*s/r.stride;p||(p=o)}u.vtxFreeList=new(0,s.FreeList)(p),u.vtxFreeList.allocate(i)}return h}delete(e){const t=o[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,i,r,s){const a=o[e.geometryType];let l,d;e.meshData=null,void 0===e.vertexFrom?(d=t.vertexCount,l=this._allocateVertices(a,d)):t.vertexCount>e.vertexCount?(this._freeVertices(a,e.vertexFrom,e.vertexCount),d=t.vertexCount,l=this._allocateVertices(a,d)):t.vertexCount===e.vertexCount?(l=e.vertexFrom,d=e.vertexCount):(this._freeVertices(a,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),l=e.vertexFrom,d=t.vertexCount);let h,c,u,f=!0;if(void 0===e.indexFrom?(h=s,u=t.indexCount,c=this._allocateIndices(a,u)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom,e.indexCount),u=t.indexCount,c=this._allocateIndices(a,u)):t.indexCount===e.indexCount?(f=!1,c=e.indexFrom,u=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),c=e.indexFrom,u=t.indexCount),-1!==l&&-1!==c){const s=this._storageFor(a);if((0,n.copyMeshData)(l,c,s.vertexBuffers,s.indexBuffer,t,i,r),e.vertexFrom=l,e.indexFrom=c,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return f&&this._displayList.addToList(e,h),!0}return-1!==l&&this._freeVertices(a,l,d),-1!==c&&this._freeIndices(a,c,u),e.setMeshDataFromBuffers(t,i,r),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const i=t.vertexBuffer,r=t.indexBuffer,s=o[e.geometryType],a=this._allocateVertices(s,e.vertexCount);if(-1===a)return this._freeVertices(s,a,e.vertexCount),!1;const l=this._allocateIndices(s,e.indexCount);if(-1===l)return this._freeVertices(s,a,e.vertexCount),this._freeIndices(s,l,e.indexCount),!1;const d=this._storageFor(s);if((0,n.copyMeshData)(a,l,d.vertexBuffers,d.indexBuffer,e,i,r),e.vertexFrom=a,e.indexFrom=l,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,a,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const i=this._storageFor(e),r=i.vtxFreeList.allocate(t);return-1===r||i.vtxFreeList.fragmentation>.5?-1:r}_freeVertices(e,t,i){this._storageFor(e).vtxFreeList.free(t,i)}_freeIndices(e,t,i){this._storageFor(e).idxFreeList.free(t,i)}_allocateIndices(e,t){const i=this._storageFor(e),r=i.idxFreeList.allocate(t);return-1===r||i.idxFreeList.fragmentation>.5?-1:r}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}constructor(e,t,i,r){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=i;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:r?new(0,s.FreeList)(r):null,idxFreeList:r?new(0,s.FreeList)(r):null,vertexBuffers:{},indexBuffer:r?new Uint32Array(r):null};for(const i in e[t])this._freeListsAndStorage[t].vertexBuffers[i]={data:r?(0,n.allocateTypedArrayBuffer)(r,e[t][i]):null,stride:e[t][i]}}}}})),t.register("gaZis",(function(t,i){e(t.exports,"FreeList",(function(){return s}));class r{get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,i=null;for(;null!==t;)t.count>=e&&(!i||t.count-e<i.count-e)&&(i=t),t=t.next;return i}findAdjacentRanges(e,t){let i=!0,r=!1,s=null,n=this._parent._freeHead;for(;i&&!r;){const o=null!==s?s.from+s.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(i=!1,r=!0):null!==n?(s=n,n=n.next):i=!1}return[s,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}}class s{allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const i=t.from,r=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,i,r),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;s._removeRange(t),this._freeHead=e}return i}free(e,t){const[i,r]=this._bookKeeper.findAdjacentRanges(e,t),n={from:e,count:t,prev:i,next:r};if(null!==i&&(i.next=n),null!==r&&(r.prev=n),this._bookKeeper.rangeCreated(n),this._allocated-=t,null!==r&&n.from+n.count===r.from){const e=n.from,t=n.count;s._fuse(n,r),s._removeRange(r),this._bookKeeper.rangeResized(n,e,t),this._bookKeeper.rangeResized(r,void 0,0)}if(null!==i&&i.from+i.count===n.from){const e=i.from,t=i.count;s._fuse(i,n),s._removeRange(n),this._bookKeeper.rangeResized(i,e,t),this._bookKeeper.rangeResized(n,void 0,0)}this._freeHead=null!==n.prev?this._freeHead:n}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new r(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}}})),t.register("85L9a",(function(i,r){e(i.exports,"default",(function(){return l}));var s=t("cPgEa"),n=t("g0mVO"),o=t("l3QXd"),a=t("4radX");class l{dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,i,r){if(!t.data.vao){const s={};for(const e in t.buffers)s[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new(0,a.VertexArrayObject)(e,r,i,s,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,i)=>{this._upload(t,i,e)}))}_upload(e,t,i){if(e.indices&&(e.indices.allDirty?this._uploadIndices(i,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(i,t,e.indices.from,e.indices.count)),e.vertices){const r=e.vertices;for(const e in r){const s=r[e];s.allDirty?this._uploadVertices(i,t,e):null!=s.from&&null!=s.count&&this._uploadVertices(i,t,e,s.from,s.count)}}}_uploadVertices(e,t,i,r,s){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[i];if(!o)return;const a=o.stride,l=o.data.buffer;n.buffers[i]&&l.byteLength>0&&(null!=r&&null!=s?n.buffers[i].data.vertexBuffer.setSubData(l,r*a,r*a,(r+s)*a):n.buffers[i].data.vertexBuffer.setData(l))}_uploadIndices(e,t,i,r){const s=this.geometryMap[t];if(!s)return;const n=e.geometries[t].indexBuffer.buffer;s.data.indexBuffer&&n.byteLength>0&&(null!=i&&null!=r?s.data.indexBuffer.setSubData(n,4*i,4*i,4*(i+r)):s.data.indexBuffer.setData(n))}constructor(e){this.geometryMap=(0,s.createGeometryData)((()=>({indexBuffer:n.BufferObject.createIndex(e,o.Usage.STATIC_DRAW),vao:null})),((t,i)=>({vertexBuffer:n.BufferObject.createVertex(e,s.C_VBO_INFO[i])})))}}})),t.register("6Xzce",(function(i,r){e(i.exports,"TileData",(function(){return g}));var s=t("1CpCt"),n=t("747oS"),o=t("eNKpv"),a=t("jXcks"),l=t("cPgEa"),d=t("kzzZ1"),h=t("9PGNx"),c=t("euBpn"),u=t("cObbk"),f=t("dcBo6");const p=new(0,n.default),m=new(0,n.default);function y(e,t){const i={};for(const r in e){const s={data:(0,l.allocateTypedArrayBuffer)(t,e[r]),stride:e[r]};i[r]=s}return i}class g{reshuffle(){p.reset();const e=(0,a.groupRecordsByGeometryType)(this.tileDisplayData.displayObjects);for(const t of e)for(const e of t)e&&p.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,i=new(0,o.default);for(let e=0;e<t;++e){i.geometries[e].indexBuffer=new Uint32Array(Math.round(1.5*p.indicesFor(e)));const t=[];for(const i in this.tileBufferData.geometries[e].vertexBuffer)t.push(this.tileBufferData.geometries[e].vertexBuffer[i].stride);const r=g._computeVertexAlignment(t),s=Math.round(1.5*p.verticesFor(e)),n=g._align(s,r);for(const t in this.tileBufferData.geometries[e].vertexBuffer){const r=this.tileBufferData.geometries[e].vertexBuffer[t].stride;i.geometries[e].vertexBuffer[t]={stride:r,data:(0,l.allocateTypedArrayBuffer)(n,r)}}}m.reset(),this.tileDisplayData.displayList.clear();for(let r=0;r<t;++r){const t=e[r];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(m.verticesFor(r),i.geometries[r].vertexBuffer,m.indicesFor(r),i.geometries[r].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[r].vertexBuffer,s=this.tileBufferData.geometries[r].indexBuffer,n=i.geometries[r].vertexBuffer,o=i.geometries[r].indexBuffer,a=m.verticesFor(r),d=m.indicesFor(r);(0,l.copyMeshData)(a,d,n,o,e,t,s),e.vertexFrom=a,e.indexFrom=d}m.needMore(r,e.vertexCount,e.indexCount)}}for(const e of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(e.displayRecords);this.tileBufferData=i}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const i=this.tileBufferData.geometries[t];e[t]={};for(const r in i.vertexBuffer)e[t][r]=i.vertexBuffer[r].stride}return e}clone(){const e=new g;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let i=0;for(let r=0;r<t;r++)i=Math.max(i,e[r].displayRecords.length);return 2*(12*e.length+e.length*i*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),i=this.tileDisplayData.serialize(new(0,f.default)(Int32Array,this._guessSize())).buffer();return t.push(i),{result:{displayData:i,bufferData:e},transferList:t}}static fromVertexData(e,t){const i={},r=new Map;for(const e of t)r.set(e.id,e);return(0,l.forEachGeometryType)((t=>{const n=e.data[t];if((0,s.isSome)(n)){const e=h.DisplayRecordReader.from(n.records).getCursor();for(;e.next();){const i=e.id,s=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,h=r.get(i),c=new(0,d.default)(i,t,s);c.indexFrom=n,c.indexCount=o,c.vertexFrom=a,c.vertexCount=l,h.displayRecords.push(c)}i[t]=c.VertexBuffers.fromVertexData(n,t)}else i[t]=new(0,u.VertexVectors)(t,0,{fill:"default"}).intoBuffers()})),g.fromMeshData({displayObjects:t,vertexBuffersMap:i})}static fromMeshData(e){const t=new g,i=new(0,a.default),r=new(0,o.default);i.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const i=e.vertexBuffersMap[t];r.geometries[t].indexBuffer=i.indexBuffer,r.geometries[t].vertexBuffer=i.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=r,t}static bind(e,t){const i=new g;return i.tileDisplayData=e,i.tileBufferData=t,i}static create(e,t){const i=new g;i.tileDisplayData=new(0,a.default),i.tileDisplayData.displayObjects=e;const r=[0,0,0,0,0],s=[0,0,0,0,0],n=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)n[e.geometryType].push(e),r[e.geometryType]+=e.meshData.vertexCount,s[e.geometryType]+=e.meshData.indexData.length;const l=new(0,o.default),h=[(c=t).fill||{},c.line||{},c.icon||{},c.text||{},c.label||{}];var c;for(let e=0;e<5;e++){const t=new Uint32Array(s[e]),i=y(h[e],r[e]);d.default.writeAllMeshDataToBuffers(n[e],i,t),l.geometries[e]={indexBuffer:t,vertexBuffer:i}}return i.tileBufferData=l,i}static _align(e,t){const i=e%t;return 0===i?e:e+(t-i)}static _computeVertexAlignment(e){let t=!1,i=!1;for(const r of e)r%4==2?t=!0:r%4!=0&&(i=!0);return i?4:t?2:1}constructor(){this.tileDisplayData=null,this.tileBufferData=null}}})),t.register("747oS",(function(t,i){e(t.exports,"default",(function(){return r}));class r{get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const r=this._byGeometryType[e];r.vertices+=t,r.indices+=i}constructor(){this._byGeometryType=null}}})),t.register("eNKpv",(function(i,r){e(i.exports,"default",(function(){return n}));var s=t("cPgEa");class n{clone(){const e=new n;for(let t=0;t<this.geometries.length;t++){const i=this.geometries[t],r=e.geometries[t];r.indexBuffer=i.indexBuffer.slice(),r.vertexBuffer={};for(const e in i.vertexBuffer){const{data:t,stride:s}=i.vertexBuffer[e];r.vertexBuffer[e]={data:t.slice(),stride:s}}}return e}static deserialize(e){const t=new n;for(let i=0;i<5;++i){t.geometries[i].indexBuffer=new Uint32Array(e.geometries[i].indexBuffer),t.geometries[i].vertexBuffer={};for(const r in e.geometries[i].vertexBuffer)t.geometries[i].vertexBuffer[r]={data:(0,s.allocateTypedArrayBufferwithData)(e.geometries[i].vertexBuffer[r].data,e.geometries[i].vertexBuffer[r].stride),stride:e.geometries[i].vertexBuffer[r].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const i in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[i]={data:this.geometries[t].vertexBuffer[i].data.buffer,stride:this.geometries[t].vertexBuffer[i].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const i in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[i].data.buffer)}return e}constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}}})),t.register("jXcks",(function(i,r){e(i.exports,"groupRecordsByGeometryType",(function(){return a})),e(i.exports,"default",(function(){return l}));var s=t("asObQ"),n=t("6sktq"),o=t("7HvQo");function a(e){const t=[[],[],[],[],[]],i=e;for(const e of i)for(const i of e.displayRecords)t[i.geometryType].push(i);return t}class l{get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new(0,s.default);for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new l;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return(0,o.serializeList)(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),i=new Array(t),r=new Map;for(let t=0;t<i.length;++t){const s=n.default.deserialize(e);i[t]=s,r.set(s.id,s)}this.displayObjects=i,this._displayList=null,this._displayObjectRegistry=r}static deserialize(e){const t=new l;return t._deserializeObjects(e),t}constructor(){}}})),t.register("asObQ",(function(i,r){e(i.exports,"default",(function(){return a}));var s=t("eyQUy");function n(e,t,i,...r){t<e.length?e.splice(t,i,...r):e.push(...r)}const o=new Map;o.set(s.WGLDrawPhase.MAP,[s.WGLGeometryType.FILL,s.WGLGeometryType.LINE,s.WGLGeometryType.MARKER,s.WGLGeometryType.TEXT]),o.set(s.WGLDrawPhase.LABEL,[s.WGLGeometryType.LABEL]),o.set(s.WGLDrawPhase.LABEL_ALPHA,[s.WGLGeometryType.LABEL]);class a{replay(e,t,i){for(const r of this.symbolLevels)for(const s of r.zLevels){const r=s.geometryDPInfo.unified;if(r)for(const s of r){const r=e.painter.getGeometryBrush(s.geometryType),n=t.getGeometry(s.geometryType),o={geometryType:s.geometryType,materialKey:s.materialKey,indexFrom:s.indexFrom,indexCount:s.indexCount,target:n};r.prepareState(e,t),r.drawGeometry(e,t,o,i)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const i of e)this._addToList(i,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const i of e)t=this._removeFromList(i);return t}clone(){const e=new a;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length,r=e.indexFrom+e.indexCount;for(let s=0;s<i;++s){const i=t[s];if(i.geometryType===e.geometryType&&r>i.indexFrom&&r<=i.indexFrom+i.indexCount){if(r<i.indexFrom+i.indexCount){const e=new l;e.geometryType=i.geometryType,e.materialKey=i.materialKey,e.indexFrom=r,e.indexCount=i.indexFrom+i.indexCount-r,t.splice(s+1,0,e),i.indexCount=r-i.indexFrom}return s}}}_addToList(e,t){const i=e.symbolLevel,r=e.zOrder,s=this._getDisplayList(i,r),o=null!=t?t:s.length-1,a=o>=0&&o<s.length?s[o]:null;if(null!==a&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{const t=new l;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,n(s,o+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(t,i),s=r.length;let o;for(let t=0;t<s;++t){const i=r[t];if(e.indexFrom+e.indexCount>i.indexFrom&&e.indexFrom<i.indexFrom+i.indexCount&&i.geometryType===e.geometryType){o=t;break}}if(void 0!==o){const t=r[o];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&n(r,o,1),o-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(n(r,o,1),o-1):o;{const i=t.indexFrom,s=e.indexFrom-t.indexFrom,a=e.indexCount,d=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=s;const h=new l;return h.geometryType=t.geometryType,h.materialKey=t.materialKey,h.indexFrom=i+s+a,h.indexCount=d,n(r,o+1,0,h),o}}return null}_getDisplayList(e,t){let i;const r=this.symbolLevels.length;for(let t=0;t<r;t++)if(this.symbolLevels[t].symbolLevel===e){i=this.symbolLevels[t];break}let s;i||(i=new c,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let e=0;e<n;e++)if(i.zLevels[e].zLevel===t){s=i.zLevels[e];break}return s||(s=new h,s.geometryDPInfo=new d,s.zLevel=t,i.zLevels.push(s)),s.geometryDPInfo.unified||(s.geometryDPInfo.unified=[]),s.geometryDPInfo.unified}getDPInfoType(){return"unified"}constructor(){this.symbolLevels=[]}}class l{clone(){const e=new l;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}}class d{clone(){const e=new d;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}}class h{clone(){const e=new h;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}constructor(){this.geometryDPInfo=new d}}class c{clone(){const e=new c;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}constructor(){this.zLevels=[]}}})),t.register("6sktq",(function(i,r){e(i.exports,"default",(function(){return o}));var s=t("kzzZ1"),n=t("7HvQo");class o{copy(){const e=new o(this.id);return e.set(this),e}clone(){const e=new o(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),(0,n.serializeList)(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),i=new o(t),r={id:t};return i.displayRecords=(0,n.deserializeList)(e,s.default,r),i}constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}}})),t.register("kzzZ1",(function(i,r){e(i.exports,"default",(function(){return o}));var s=t("ceiYW"),n=t("cPgEa");class o{get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new o(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,i){const r=new(0,s.default);for(const i in t){const s=t[i].stride,o=t[i].data,a=[],l=(0,n.strideToPackingFactor)(s);for(let t=0;t<s*e.vertexCount/l;++t)a[t]=o[t+s*e.vertexFrom/l];r.vertexData.set(i,a)}r.indexData.length=0;for(let t=0;t<e.indexCount;++t)r.indexData[t]=i[t+e.indexFrom]-e.vertexFrom;r.vertexCount=e.vertexCount,this.meshData=r}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new(0,s.default);for(const t in e){const i=e[t].stride,r=e[t].data,s=[],o=(0,n.strideToPackingFactor)(i);for(let e=0;e<i*this.vertexCount/o;++e)s[e]=r[e+i*this.vertexFrom/o];this.meshData.vertexData.set(t,s)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,i,r){for(const i in t){const r=t[i].stride,s=this.meshData.vertexData.get(i),o=t[i].data,a=(0,n.strideToPackingFactor)(r);for(let t=0;t<r*this.meshData.vertexCount/a;++t)o[t+r*e/a]=s[t]}for(let t=0;t<this.meshData.indexData.length;++t)r[t+i]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,i){let r=0,s=0;for(const n of e)n.writeMeshDataToBuffers(r,t,s,i),r+=n.vertexCount,s+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const i=e.readInt32(),r=e.readInt32(),s=new o(t.id,i,r);return s.vertexFrom=e.readInt32(),s.vertexCount=e.readInt32(),s.indexFrom=e.readInt32(),s.indexCount=e.readInt32(),s.minZoom=e.readInt32(),s.maxZoom=e.readInt32(),s}constructor(e,t,i,r=0,s=0){this.id=e,this.geometryType=t,this.materialKey=i,this.minZoom=r,this.maxZoom=s,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}}})),t.register("ceiYW",(function(t,i){e(t.exports,"default",(function(){return r}));class r{clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,i){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=i}constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}}})),t.register("7HvQo",(function(t,i){function r(e,t){if(null!==t){e.push(t.length);for(const i of t)i.serialize(e);return e}e.push(0)}function s(e,t,i){const r=e.readInt32(),s=new Array(r);for(let r=0;r<s.length;r++)s[r]=t.deserialize(e,i);return s}e(t.exports,"serializeList",(function(){return r})),e(t.exports,"deserializeList",(function(){return s}))})),t.register("euBpn",(function(i,r){e(i.exports,"VertexBuffers",(function(){return o}));var s=t("cPgEa");class n{static decode(e){const t=(0,s.allocateTypedArrayBufferwithData)(e.data,e.stride),i=e.stride;return new n(t,i)}static fromVertexVector(e){const t=(0,s.allocateTypedArrayBufferwithData)(e.data.buffer(),e.stride),i=e.stride;return new n(t,i)}constructor(e,t){this.data=e,this.stride=t}}class o{static decode(e){const t=e.geometryType,i=e.indexBuffer,r={};for(const t in e.namedBuffers)r[t]=n.decode(e.namedBuffers[t]);return new o(t,i,r)}static fromVertexData(e,t){const i=e.indices,r=(0,s.allocateTypedArrayBufferwithData)(e.vertices,e.stride),a=e.stride,l={geometry:new n(r,a)};return new o(t,i,l)}static fromVertexVectors(e){const t=e.geometryType,i=e.indexVector.buffer(),r={};for(const t in e.namedVectors)r[t]=n.fromVertexVector(e.namedVectors[t]);return new o(t,i,r)}constructor(e,t,i){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=i}}})),t.register("cObbk",(function(i,r){e(i.exports,"VertexVectors",(function(){return l}));var s=t("cPgEa"),n=t("euBpn"),o=t("dcBo6");class a{get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const i=this.data.buffer();e.vertexCount=this.vertexCount,e.data=i,e.stride=this.stride,t.push(i)}constructor(e,t){this.data=e,this.stride=t}}class l{get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const i=this.indexVector.buffer(),r={};t.push(i);for(const e in this.namedVectors){const i=this.namedVectors[e];r[e]={},i.transfer(r[e],t)}e.geometryType=this.geometryType,e.indexBuffer=i,e.namedBuffers=r,this.destroy()}intoBuffers(){const e=n.VertexBuffers.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}constructor(e,t,i){this.geometryType=e,this.indexVector=new(0,o.default)(Uint32Array,6*t),this.namedVectors={};const r=(0,s.getStrides)(e,i);for(const e in r){const i=r[e];let s;switch(i%4){case 0:case 2:s=new(0,o.default)(Uint32Array,i*t);break;case 1:case 3:s=new(0,o.default)(Uint8Array,i*t)}this.namedVectors[e]=new a(s,i)}}}})),t.register("faWte",(function(i,r){e(i.exports,"GraphicsReader",(function(){return l}));var s=t("86d4E"),n=t("8RZNq"),o=t("dbCZi"),a=t("dmhPb");class l extends a.FeatureSetReaderJSON{static from(e){const t=o.FeatureSetReader.createInstance(),i=[],r=e.filter((e=>!!e.geometry));for(const e of r){const t=(0,s.getJsonType)(e.geometry);(0,n.convertFromGraphics)(i,[e],t,!1,!1,"uid")}return new l(t,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new l(this.instance,this._features);return this.copyInto(e),e}constructor(e,t){super(e,t,null)}}})),t.register("f4cqe",(function(i,r){e(i.exports,"default",(function(){return v}));var s=t("1CpCt"),n=t("jCR4P"),o=t("lD2ob"),a=t("19dbe"),l=t("772GK"),d=t("hq5aB"),h=t("jCqxN"),c=t("khzw4"),u=t("1kN4D"),f=t("1SWxH"),p=t("mayqQ");const m={minX:0,minY:0,maxX:0,maxY:0},y=(0,a.create)(),g=1e-5;function x(e,t,i,r,s){return m.minX=t,m.minY=i,m.maxX=r,m.maxY=s,e.search(m)}function _(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class v{setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new(0,c.HittestDrawHelper)(e)}hitTest(e,t,i,r,s){e=(0,d.normalizeMapX)(e,this._tileInfoView.spatialReference);const n=.5*r*window.devicePixelRatio*i;y[0]=e-n,y[1]=t-n,y[2]=e+n,y[3]=t+n;const o=.5*r*(i+p.PIXEL_BUFFER),l=x(this._index,e-o,t-o,e+o,t+o);if(!l||0===l.length)return[];const h=[],c=(0,a.create)(),u=(0,a.create)();for(const e of l){const{geometry:t,symbolResource:i}=e;this._getSymbolBounds(c,i,t,u,s),u[3]=u[2]=u[1]=u[0]=0,(0,a.intersects)(c,y)&&e.graphic.visible&&h.push(e)}if(0===h.length)return[];const f=this._hittestDrawHelper,m=[];for(const e of h){const{geometry:t,symbolResource:i}=e,{hash:n,textInfo:o}=i,a=this._hashToCIM.get(n);a&&f.hitTest(y,a.symbol,t,o,s,r)&&m.push(e)}return m.sort(b),m.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=this._searchForItems(t);if(0===r.length||0===i.length)return[];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let e=1;e<r.length;e++)r[e].insertAfter=r[e-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,n=0,o=0;const a=t.resolution,l=[],d={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const h of i){for(o=-2;n<r.length;)if(s=r[n],n++,h.uid===s.graphic.uid){o=s.insertAfter;break}if(!s.geometry||-2===o)continue;const i=s.getGeometryQuantized(d,t.bounds,this._tileInfoView.spatialReference,a),c={...s.graphic.attributes};c[this._uidFieldName]=h.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),l.push({centroid:f.default.getCentroidQuantized(s,d),geometry:i,attributes:c,symbol:s.symbol,groupId:s.groupId,insertAfter:o,zorder:s.zorder})}return l.sort(((e,t)=>e.zorder-t.zorder)),l}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:r}=t,s=this._searchForItems(t),n=[];return 0===s.length||this._createTileGraphics(n,e,s,{originPosition:"upperLeft",scale:[r,r],translate:[i[0],i[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,i){if(!e||(0,s.isNone)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const r=[0,0,0,0],n=this._getSymbolBounds(null,t,i,r,0),o=f.default.acquire(e,t,i,(0,s.isSome)(n)?n:null,r);return this._itemByGraphic.set(e,o),i&&this._index.insert(o),o.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r)}update(e,t,i){const r=this._itemByGraphic.get(e);r.groupId=null;const n=(0,a.clone)(r.bounds);this._index.remove(r);const o=this._getSymbolBounds(r.bounds,t,i,r.size,0);return(0,s.isSome)(o)&&r.set(e,t,i,o,r.size),i&&this._index.insert(r),{oldBounds:n,newBounds:r.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,i=[];for(const[e,r]of t){const e=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,s.isSome)(e)&&(r.bounds=e,i.push(r))}this._index.load(i)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,r,s){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a,resolution:l}=s;let d,h,c,u;i.sort(((e,t)=>e.zorder-t.zorder));for(let s=0;s<i.length;s++){c=i[s],d=c.graphic,h=c.getGeometryQuantized(r,a,o,l),u=0===s?-1:i[s-1].graphic.uid;const p={...c.graphic.attributes};p[n]=d.uid,null==c.groupId&&(c.groupId=t.createTemplateGroup(c.symbol,null)),e.push({centroid:f.default.getCentroidQuantized(c,r),geometry:h,attributes:p,symbol:c.symbol,groupId:c.groupId,insertAfter:u,zorder:c.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds;if(t.isWrappable){const[r,s]=(0,h.getSpatialReferenceMinMaxX)(t),n=Math.abs(i[2]-s)<g,o=Math.abs(i[0]-r)<g;if((!n||!o)&&(n||o)){const t=e.resolution;let o;o=(0,a.create)(n?[r,i[1],r+t*p.PIXEL_BUFFER,i[3]]:[s-t*p.PIXEL_BUFFER,i[1],s,i[3]]);const l=x(this._index,i[0],i[1],i[2],i[3]),d=x(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...l,...d])]}}return x(this._index,i[0],i[1],i[2],i[3])}_getSymbolBounds(e,t,i,r,s){if(!t||!t.symbol||!i)return null;if(e||(e=(0,a.create)()),(0,l.getBoundsXY)(e,i),!r||0===r[0]&&0===r[1]&&0===r[2]&&0===r[3]){const{hash:e,textInfo:i}=t,o=this._hashToCIM.get(e);if(!o)return null;r||(r=[0,0,0,0]);const a=this._inflatedSizeHelper.getSymbolInflateSize(r,o.symbol,this._cimResourceManager,s,i);r[0]=(0,n.pt2px)(a[0]),r[1]=(0,n.pt2px)(a[1]),r[2]=(0,n.pt2px)(a[2]),r[3]=(0,n.pt2px)(a[3])}const o=this._resolution,d=u.CIMSimbolInflatedSizeHelper.safeSize(r);return e[0]-=d*o,e[1]-=d*o,e[2]+=d*o,e[3]+=d*o,e}constructor(e,t,i,r,s,n,a){this._graphics=r,this._onAdd=s,this._onRemove=n,this._hashToCIM=a,this._index=(0,o.r)(9,_),this._itemByGraphic=new Map,this._inflatedSizeHelper=new(0,u.CIMSimbolInflatedSizeHelper),this._tileInfoView=e,this._uidFieldName=i;const l=e.getClosestInfoForScale(t);l&&(this._resolution=this._tileInfoView.getTileResolution(l.level))}}const b=(e,t)=>{const i=(0,p.graphicGeometryToNumber)(e.graphic),r=(0,p.graphicGeometryToNumber)(t.graphic);return i===r?t.zorder-e.zorder:i-r}})),t.register("1SWxH",(function(i,r){e(i.exports,"default",(function(){return g}));var s=t("1CpCt"),n=t("19dbe"),o=t("2oFSF"),a=t("86d4E"),l=t("jCqxN"),d=t("1kNSi"),h=t("8RZNq"),c=t("i24Gp"),u=t("mayqQ");const f=new(0,c.default),p=new(0,c.default),m="esriGeometryPolyline";function y(e){e.coords.length=0,e.lengths.length=0}class g{static acquire(e=null,t,i,r,s){let n;return 0===g._pool.length?n=new g:(n=g._pool.pop(),this._set.delete(n)),n.acquire(e,t,i,r,s),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,a.isPolygon)(e.geometry)){const i=e.symbol;if((0,s.isNone)(i))return null;if((0,u.isMarkerSymbol)(i.type)||(0,u.isTextSymbol)(i.type)){const i=(0,o.polygonCentroid)(e.geometry);return(0,d.quantizePoint)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,i,r,s){e&&this.set(e,t,i,r,s)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,r,s){this.graphic=e,this.geometry=i,this.symbolResource=t,this.bounds=r,s&&(this.size=s)}getGeometryQuantized(e,t,i,r){const s=this.geometry;if((0,a.isPolygon)(s)){const t=s.rings;if(1===t.length&&2===t[0].length)return(0,d.quantizeGeometry)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,a.isPolyline)(s))return y(f),y(p),(0,h.convertFromPolyline)(f,s),(0,h.generalizeOptimizedGeometry)(p,f,s.hasZ,s.hasM,m,e.scale[0]),(0,h.quantizeOptimizedGeometry)(f,p,s.hasZ,s.hasM,m,e),(0,h.convertToPolyline)(f,s.hasZ,s.hasM);if((0,a.isMultipoint)(s)){const o=.5*r*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),[a,h]=(0,l.getSpatialReferenceMinMaxX)(i),c=h-a,u=s.points.filter((e=>{if(e[0]+o>h||e[0]-o<a){const i=[...e];return e[0]+o>h?i[0]-=c:i[0]+=c,(0,n.containsPointWithMargin)(t,e,o)||(0,n.containsPointWithMargin)(t,i,o)}return(0,n.containsPointWithMargin)(t,e,o)}));return 0===u.length?{points:u}:(0,d.quantizeGeometry)(e,{points:u})}}return(0,d.quantizeGeometry)(e,this.geometry)}constructor(){this.bounds=(0,n.create)(),this.graphic=null}}g._pool=[],g._set=new Set})),t.register("5smAu",(function(i,r){e(i.exports,"GraphicsView",(function(){return l}));var s=t("j6uz9"),n=t("2tTSh"),o=t("hTI69");t("aX9sh"),t("5HTPH"),t("gHCNy");var a=t("qA6zg");const l=e=>{let t=class extends((0,n.IdentifiableMixin)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,s._)([(0,o.property)()],t.prototype,"graphics",void 0),(0,s._)([(0,o.property)()],t.prototype,"renderer",void 0),(0,s._)([(0,o.property)()],t.prototype,"updating",void 0),(0,s._)([(0,o.property)()],t.prototype,"view",void 0),t=(0,s._)([(0,a.subclass)("esri.views.layers.GraphicsView")],t),t}})),t.register("eumJQ",(function(i,r){e(i.exports,"default",(function(){return a}));var s=t("faj3Z"),n=t("drAR1"),o=t("l3QXd");class a extends s.FeatureContainer{destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(e){this._boundsRenderer=new(0,n.default)(e),this.requestRender()}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const i of this.children)i.isReady&&i.hasData&&(i.commit(e),e.context.setStencilFunction(o.CompareFunction.EQUAL,i.stencilRef,255),i._displayList.replay(e,i,t))}constructor(e){super(e),this.hasHighlight=()=>!0}}})),t.register("drAR1",(function(i,r){e(i.exports,"default",(function(){return m}));var s=t("52822"),n=t("jsolS"),o=t("gLni9"),a=t("bQCak"),l=t("hq5aB"),d=t("5aS5k"),h=t("cPgEa"),c=t("g0mVO"),u=t("l3QXd"),f=t("4radX");const p=Math.PI/180;class m extends d.DisplayObject{destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(e){const{context:t}=e,i=this._getBounds();if(i.length<1)return;this._createShaderProgram(t),this._updateMatricesAndLocalOrigin(e),this._updateBufferData(t,i),t.setBlendingEnabled(!0),t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setBlendFunction(u.BlendFactor.ONE,u.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const r=this._program;t.bindVAO(this._vao),t.useProgram(r),r.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),t.gl.lineWidth(1),t.drawElements(u.PrimitiveType.LINES,8*i.length,u.DataType.UNSIGNED_INT,0),t.bindVAO()}_createTransforms(){return{dvs:(0,n.c)()}}_createShaderProgram(e){if(this._program)return;this._program=e.programCache.acquire("precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",y().attributes)}_updateMatricesAndLocalOrigin(e){const{state:t}=e,{displayMat3:i,size:r,resolution:n,pixelRatio:d,rotation:h,viewpoint:c}=t,u=p*h,{x:f,y:m}=c.targetGeometry,y=(0,l.normalizeMapX)(f,t.spatialReference);this._localOrigin.x=y,this._localOrigin.y=m;const g=d*r[0],x=d*r[1],_=n*g,v=n*x,b=(0,s.b)(this._dvsMat3);(0,s.m)(b,b,i),(0,s.c)(b,b,(0,o.f)(g/2,x/2)),(0,s.d)(b,b,(0,a.f)(r[0]/_,-x/v,1)),(0,s.r)(b,b,-u)}_updateBufferData(e,t){const{x:i,y:r}=this._localOrigin,s=8*t.length,n=new Float32Array(s),o=new Uint32Array(8*t.length);let a=0,l=0;for(const e of t)e&&(n[2*a+0]=e[0]-i,n[2*a+1]=e[1]-r,n[2*a+2]=e[0]-i,n[2*a+3]=e[3]-r,n[2*a+4]=e[2]-i,n[2*a+5]=e[3]-r,n[2*a+6]=e[2]-i,n[2*a+7]=e[1]-r,o[l+0]=a+0,o[l+1]=a+3,o[l+2]=a+3,o[l+3]=a+2,o[l+4]=a+2,o[l+5]=a+1,o[l+6]=a+1,o[l+7]=a+0,a+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(n.buffer):this._vertexBuffer=c.BufferObject.createVertex(e,u.Usage.DYNAMIC_DRAW,n.buffer),this._indexBuffer?this._indexBuffer.setData(o):this._indexBuffer=c.BufferObject.createIndex(e,u.Usage.DYNAMIC_DRAW,o),!this._vao){const t=y();this._vao=new(0,f.VertexArrayObject)(e,t.attributes,t.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}constructor(e){super(),this._dvsMat3=(0,n.c)(),this._localOrigin={x:0,y:0},this._getBounds=e}}const y=()=>(0,h.createProgramDescriptor)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:u.DataType.FLOAT}]})}));
//# sourceMappingURL=mapViewDeps.ba5d7b09.js.map
