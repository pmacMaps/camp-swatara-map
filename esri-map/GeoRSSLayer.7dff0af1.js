var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("9RJUc",(function(t,r){var o,l,i,s,n;o=t.exports,Object.defineProperty(o,"__esModule",{value:!0,configurable:!0}),l=t.exports,i="default",s=function(){return N},Object.defineProperty(l,i,{get:s,set:n,enumerable:!0,configurable:!0});var a=e("j6uz9"),p=e("9XPDd"),y=e("bYA0c");e("cSqwa");var u=e("1CpCt"),d=e("2IJVS"),c=e("lHg4e"),f=e("7dRCe"),h=e("hTI69");e("aX9sh"),e("5HTPH"),e("gHCNy");var g=e("bzBbJ"),v=e("qA6zg"),S=e("2WnyR"),m=e("fau59"),b=e("iGP99"),_=e("90xN9"),C=e("ctxhN"),P=e("54ioU"),w=e("eOpMC"),x=e("5lb2Y"),R=e("lixLM"),G=e("jnD7B"),L=e("aLvg8"),O=e("8A3N8"),j=e("2HOOk"),M=e("iA5S4");const k=["atom","xml"],E={base:G.default,key:"type",typeMap:{"simple-line":L.default},errorContext:"symbol"},F={base:G.default,key:"type",typeMap:{"picture-marker":O.default,"simple-marker":j.default},errorContext:"symbol"},T={base:G.default,key:"type",typeMap:{"simple-fill":M.default},errorContext:"symbol"};let A=class extends((0,_.BlendLayer)((0,w.RefreshableLayer)((0,C.OperationalLayer)((0,P.PortalLayer)((0,x.ScaleRangeLayer)((0,d.MultiOriginJSONMixin)(b.default))))))){normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{var t;const r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&null!=(t=r.outline)&&t.style.includes("esriSFS")&&(r.outline.style="esriSLSSolid")})),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,f.getFilename)(this.url,k)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const t=(0,u.isSome)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(c.throwIfAbortError).then((()=>this._fetchService(t))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var t;const r=this.spatialReference,{data:o}=await(0,y.default)(p.default.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:(0,m.isWGS84)(r)?void 0:null!=(t=r.wkid)?t:JSON.stringify(r)},signal:e});return o}_hasGeometry(e){var t,r;return null!=(t=null==(r=this.featureCollections)?void 0:r.some((t=>{var r,o;return(null==(r=t.featureSet)?void 0:r.geometryType)===e&&(null==(o=t.featureSet.features)?void 0:o.length)>0})))&&t}constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}};(0,a._)([(0,h.property)()],A.prototype,"description",void 0),(0,a._)([(0,h.property)()],A.prototype,"featureCollections",void 0),(0,a._)([(0,g.reader)("service","featureCollections",["featureCollection.layers"])],A.prototype,"readFeatureCollections",null),(0,a._)([(0,h.property)({type:S.default,json:{name:"lookAtExtent"}})],A.prototype,"fullExtent",void 0),(0,a._)([(0,h.property)(R.id)],A.prototype,"id",void 0),(0,a._)([(0,h.property)(R.legendEnabled)],A.prototype,"legendEnabled",void 0),(0,a._)([(0,h.property)({types:E,json:{write:!0}})],A.prototype,"lineSymbol",void 0),(0,a._)([(0,h.property)({type:["show","hide"]})],A.prototype,"listMode",void 0),(0,a._)([(0,h.property)({types:F,json:{write:!0}})],A.prototype,"pointSymbol",void 0),(0,a._)([(0,h.property)({types:T,json:{write:!0}})],A.prototype,"polygonSymbol",void 0),(0,a._)([(0,h.property)({type:["GeoRSS"]})],A.prototype,"operationalLayerType",void 0),(0,a._)([(0,h.property)(R.url)],A.prototype,"url",void 0),(0,a._)([(0,h.property)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],A.prototype,"title",null),(0,a._)([(0,h.property)({readOnly:!0,json:{read:!1},value:"geo-rss"})],A.prototype,"type",void 0),A=(0,a._)([(0,v.subclass)("esri.layers.GeoRSSLayer")],A);const N=A}));
//# sourceMappingURL=GeoRSSLayer.7dff0af1.js.map
