var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("5Lur8",(function(t,s){var i,o,r,n;i=t.exports,o="DictionaryLoader",r=function(){return _},Object.defineProperty(i,o,{get:r,set:n,enumerable:!0,configurable:!0});var l=e("hJt7u"),a=e("bYA0c"),c=e("bPmsI"),f=e("6TszD"),u=e("c8bTS"),m=e("1CpCt"),y=e("lHg4e"),h=e("29Fuv"),d=e("QiKdE"),p=e("dRXfp");const b=f.default.getLogger("esri.renderers.support.DictionaryLoader"),g={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class _{getSymbolFields(){return this._symbolFields}async getSymbolAsync(e,t){let s;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(t));try{s=await this._dictionaryPromise}catch(e){if((0,y.isAbortError)(e))return this._dictionaryPromise=null,null}const i={};if(this.fieldMap)for(const t of this._symbolFields){const s=this.fieldMap[t];if(s&&null!=e.attributes[s]){const o=""+e.attributes[s];i[t]=o}else i[t]=""}const o=s(i,t);if(!o||"string"!=typeof o)return null;const r=(0,h.numericHash)(o).toString(),n=this._symbolCache.get(r);if(n)return n.catch((()=>{this._symbolCache.pop(r)})),n;const a=o.split(";"),c=[],f=[];for(const e of a)if(e)if(e.includes("po:")){const t=e.substr(3).split("|");if(3===t.length){const e=t[0],s=t[1];let i=t[2];if("DashTemplate"===s)i=i.split(" ").map((e=>Number(e)));else if("Color"===s){const e=new(0,l.default)(i).toRgba();i=[e[0],e[1],e[2],255*e[3]]}else i=Number(i);f.push({primitiveName:e,propertyName:s,value:i})}}else if(e.includes("|")){for(const t of e.split("|"))if(this._itemNames.has(t)){c.push(t);break}}else this._itemNames.has(e)&&c.push(e);const u=!(0,m.isSome)(e.geometry)||!e.geometry.hasZ&&"point"===e.geometry.type,d=this._cimPartsToCIMSymbol(c,f,u,t);return this._symbolCache.put(r,d,1),d}async fetchResources(e){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void b.error("no valid URL!");const t=(0,m.isSome)(e)?e.abortOptions:null,s=(0,a.default)(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},...t}),[{data:i}]=await Promise.all([s,(0,d.loadArcade)()]);if(!i)throw this._dictionaryPromise=null,new(0,c.default)("esri.renderers.DictionaryRenderer","Bad dictionary data!");const o=i.expression,r=i.authoringInfo;this._refSymbolUrlTemplate=this.url+"/"+i.cimRefTemplateUrl,this._itemNames=new Set(i.itemsNames),this._symbolFields=r.symbol;const n={};if(this.config){const e=this.config;for(const t in e)n[t]=e[t]}if(r.configuration)for(const e of r.configuration)n.hasOwnProperty(e.name)||(n[e.name]=e.value);const l=[];if((0,m.isSome)(e)&&e.fields&&this.fieldMap)for(const t of this._symbolFields){const s=this.fieldMap[t],i=e.fields.filter((e=>e.name===s));i.length>0&&l.push({...i[0],name:t})}return this._dictionaryPromise=(0,d.createDictionaryExpression)(o,(0,m.isSome)(e)?e.spatialReference:null,l,n).then((e=>{const t={scale:0};return(s,i)=>{const o=e.repurposeFeature({geometry:null,attributes:s});return t.scale=(0,m.isSome)(i)?i.scale:void 0,e.evaluate({$feature:o,$view:t})}})).catch((e=>(b.error("Creating dictinoary expression failed:",e),null))),this._dictionaryPromise}async _cimPartsToCIMSymbol(e,t,s,i){const o=new Array(e.length);for(let t=0;t<e.length;t++)o[t]=this._getSymbolPart(e[t],i);const r=await Promise.all(o),n=this.fieldMap;for(const e of r)S(e,n);return new(0,p.default)({data:this._combineSymbolParts(r,t,s)})}async _getSymbolPart(e,t){if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then((e=>e.data));const s=this._refSymbolUrlTemplate.replace(/\{itemName\}/gi,e),i=(0,a.default)(s,{responseType:"json",query:{f:"json"},...t});this._ongoingRequests.set(e,i);try{return(await i).data}catch(t){return this._ongoingRequests.delete(e),Promise.reject(t)}}_combineSymbolParts(e,t,s){if(!e||0===e.length)return null;const i={...e[0]};if(e.length>1){i.symbolLayers=[];for(const t of e){const e=t;i.symbolLayers.unshift(...e.symbolLayers)}}return s&&(i.callout=g),{type:"CIMSymbolReference",symbol:i,primitiveOverrides:t}}constructor(e,t,s){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new(0,u.default)(100),this.url=e,this.config=t,this.fieldMap=s}}function S(e,t){if(!e)return;const s=e.symbolLayers;if(!s)return;let i=s.length;for(;i--;){const e=s[i];e&&!1!==e.enable&&"CIMVectorMarker"===e.type&&P(e,t)}}function P(e,t){const s=e.markerGraphics;if(s)for(const e of s){if(!e)continue;const s=e.symbol;if(s)switch(s.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":S(s,t);break;case"CIMTextSymbol":s.fieldMap=t}}}}));
//# sourceMappingURL=DictionaryLoader.a79335a6.js.map
