!function(){function e(e,t,i,r){Object.defineProperty(e,t,{get:i,set:r,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("3RWte",(function(i,r){e(i.exports,"default",(function(){return W}));var s=t("7eJjO"),n=t("jymfC"),o=t("lNwWH"),a=t("6J0KG"),l=t("6dXDO"),d=t("2VlWd"),h=t("52Bzb"),u=t("7qybv"),c=t("10vEZ"),f=t("lKPaD"),p=t("iho5X");t("iJAIC");var m=t("fcwIv"),y=t("j40xv"),g=t("8TwEW"),_=t("exxMy"),x=t("79LpT"),v=t("fDoeM"),b=t("eY5Yp"),T=t("fP7bp"),D=t("4FBKO"),w=t("4aUIW"),F=t("4WoSm"),C=t("66IJZ"),B=t("3kinH"),I=t("6WOnF"),S=t("7P0zT"),R=t("4rXhP"),L=t("7Vsyp"),M=t("iyMTk"),A=t("aZQjs"),z=t("li6vg"),G=t("8c8ji"),P=t("angIQ"),O=t("cdq0d"),U=t("4gS0A"),V=t("d2StF"),E=t("2rjRQ"),j=t("3NAox"),K=t("90RBb");const k=(0,d.default)("esri-2d-graphic-debug");function q(e,t,i){let r=i.get(e);return r||(r={tile:t,addedOrModified:[],removed:[]},i.set(e,r)),r}let H=class extends((0,h.IdentifiableMixin)((0,l.HandleOwnerMixin)(n.default))){destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,i){if(e){const r=(0,z.createSymbolSchemaOptions)(e),s=(0,z.createMatcherSchema)({indexCount:0,fields:{}},"feature",e,r);this._matcher=(0,A.createMatcher)(s,t,null,i)}}_createDisplayId(e){let t=this._displayIds.get(e);return t||(t=this._storage.createDisplayId(),this._displayIds.set(e,t)),t}initialize(){this._attributeStore=new(0,G.default)({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,j.getWebGLCapabilities)("2d")),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=new(0,M.WGLTemplateStore)(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new(0,U.default)(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new(0,L.WGLMeshFactory)(null,this.uid,e),this._templateStore=e,this.handles.add([(0,f.watch)((()=>this._effectiveRenderer),(t=>{this._createMatcher(t,e,this.container.stage.resourceManager);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{k&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const t=this.container.stage.resourceManager;this._createMatcher(this._effectiveRenderer,e,t),this._graphicStore.setResourceManager(t),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get _effectiveRenderer(){return"function"==typeof this.renderer?this.renderer():this.renderer}get updating(){var e;return!this._attached||null!==this._updatingGraphicsTimer||this._pendingUpdate.added.size>0||this._pendingUpdate.removed.size>0||this._pendingUpdate.updated.size>0||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||(null===(e=this._attributeStore)||void 0===e?void 0:e.updatingHandles.updating)||this._processing}hitTest(e){if(!this.view||this.view.suspended)return[];const{resolution:t,rotation:i}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,i)}update(e){(0,c.throwIfAborted)(this._controller.signal);const t=e.state,{resolution:i}=t;if(this._graphicStore.updateLevel(i),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i}=e;switch(i){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,t.visible),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e))).filter(o.isSome);this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,g.width)(t)||0===(0,g.height)(t))return[];const i=(0,V.intersectingInternationalDateline)(t,this.view.spatialReference);return null!=i?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,c.throwIfAborted)(this._controller.signal);const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified),r=await this._processGraphics(t,i);return(0,c.throwIfAborted)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:r,remove:e.removed,end:!0,clear:!1,sort:!1}),r}_patchTile(e,t){const i=this._tiles.get(e);i&&(this.container.onTileData(i,t),this.container.requestRender())}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),r=this._tilesToUpdate;let s;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],a=this._getIntersectingTiles(t);for(const e of a)s=e.id,q(s,e,r).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=i.length;for(let t=0;t<e.length;t++){const i=e[t];o[a+t]=i,this._graphicsSet.add(i),n.push(this._addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t)s=i.id,q(s,i,r).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)s=e.id,q(s,e,r).addedOrModified.push(l)}this._graphicStore.updateZ();const d=[];for(const[e,t]of r)d.push(this._updateTile(t));await Promise.all(d)}catch(e){(0,c.isAbortError)(e)}for(const e of t)try{const t=await this._getSymbolForGraphic(e,null);if(t){const e=t.hash();this._hashToExpandedSymbol.delete(e)}}catch(e){(0,c.isAbortError)(e)}r.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return null==e.geometry?null:{geometryType:(0,x.getJsonType)(e.geometry),spatialReference:y.default.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,c.throwIfAborted)(this._controller.signal),null!=e.symbol?Promise.resolve(e.symbol):null!=this._effectiveRenderer?this._effectiveRenderer.getSymbolAsync(e,{scale:this.view.state.scale,signal:null!=t?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,i){let r=this._hashToCIM.get(t);if(r)return Promise.resolve(r);const s=(0,D.symbolToCIM)(e);if(null!=s){if("CIMSymbolReference"===s.type)return r=s,this._hashToCIM.set(t,r),Promise.resolve(r);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=s.fetchCIMSymbol(i).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,c.throwIfAbortError)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,i,r){const s=this._hashToExpandedSymbol.get(i);if(s)return Promise.resolve(s);let n=this._hashToExpandedSymbolPromise.get(i);if(n)return n;const o=this.container.stage,a=this._getArcadeInfo(t),l=(0,z.createSymbolSchemaOptions)(null),d=(0,K.createSymbolSchema)(e,l);return n=(0,E.expandSymbol)(d,a,o.resourceManager,r),this._hashToExpandedSymbolPromise.set(i,n),n.then((e=>(this._hashToExpandedSymbol.set(i,e),this._hashToExpandedSymbolPromise.delete(i),e))),n}async _getSymbolResources(e,t){return(0,c.throwIfAborted)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((i=>{if(!i)return null;const r=i.hash();return this._getCIMSymbol(i,r,t).then((i=>null==i?null:this._expandCIMSymbol(i,e,r,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const i=new Array(t.length);for(let e=0;e<t.length;e++){const r=t[e],s=[],[n]=(0,a.bidiText)(r.text);r.text=n;for(let e=0;e<n.length;e++)s.push(n.charCodeAt(e));i[e]={symbol:r,id:e,glyphIds:s}}const s=new Map;return this.container.getMaterialItems(i).then((i=>{(0,u.assertIsSome)(i);for(let e=0;e<t.length;e++){const r=t[e];s.set(r.cim,{text:r.text,mosaicItem:i[e].mosaicItem})}return{symbol:e,textInfo:s,hash:r}}))}return{symbol:e,hash:r}}))))})).catch((e=>((0,c.throwIfAbortError)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,c.throwIfAborted)(this._controller.signal),null==e.geometry||"mesh"===e.geometry.type)return null;let i=e.geometry;if((0,x.isPolygon)(i)){const e=i.rings;i.rings=e}else if((0,x.isPolyline)(i)){const e=i.paths;i.paths=e}else if((0,x.isExtent)(i)){const r=await this._getSymbolForGraphic(e,t);(0,c.throwIfAborted)(this._controller.signal),i=r&&((0,V.isMarkerSymbol)(r.type)||(0,V.isTextSymbol)(r.type))?i.center:(0,V.polygonFromExtent)(i)}await(0,T.checkProjectionSupport)(i.spatialReference,this.view.spatialReference);const r=(0,v.normalizeCentralMeridianForDisplay)(i),s=(0,T.project)(r,i.spatialReference,this.view.spatialReference);return s&&(0,_.closeRingsAndFixWinding)(s),s}_onTileUpdate(e){const t=(0,b.getInfo)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,c.throwIfAborted)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};try{await this._addOrUpdateGraphic(e,i),(0,c.throwIfAborted)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,c.isAbortError)(t))throw t}}_updateGraphic(e,t){(0,c.throwIfAborted)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),r=this._getSymbolResources(e,t);return Promise.all([i,r]).then((([t,i])=>{(0,c.throwIfAborted)(this._controller.signal),this._graphicStore.addOrModify(e,i,t)}))}_addOrUpdateGraphic(e,t){(0,c.throwIfAborted)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),r=this._getSymbolResources(e,t);return Promise.all([i,r]).then((([t,i])=>{(0,c.throwIfAborted)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,i,t)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,g.create)(),e),i=this.view.featuresTilingScheme.getTileResolution(e.level),r=new(0,B.GraphicTile)(e,i,t[0],t[3]);return this._tiles.set(e,r),this.container.addChild(r),r}async _addNewTile(e,t){const i=this._addTile(e.key),r=this._graphicStore.queryTileData(this._templateStore,e);if(0===r.length)return;if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of r)e.geometry&&((0,x.isPoint)(e.geometry)||(0,x.isMultipoint)(e.geometry))&&this._wrapPoints(e,i)}const s=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,r),remove:[],end:!0,sort:!1};i.patch(t),this._tileUpdateSet.delete(s),this.notifyChange("updating")}catch(e){if(this._tileUpdateSet.delete(s),this.notifyChange("updating"),!(0,c.isAbortError)(e))throw e}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),r=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,r|(t?F.FILTER_FLAG_0:0))}_getGraphicsData(e,t,i){const r=this.view,s=(0,b.getInfo)(r.spatialReference),n=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of n)t.geometry&&((0,x.isPoint)(t.geometry)||(0,x.isMultipoint)(t.geometry))&&this._wrapPoints(t,e)}return n}_wrapPoints(e,t){const i=e.geometry;(0,x.isMultipoint)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,r=[];let s=0,n=0;for(const[e,o]of i){if(r.push([e+s,o]),s=0,t===V.TILE_SIZE){const i=5*V.PIXEL_BUFFER;e+n<i?(r.push([t,0]),s=-t):e+n>V.TILE_SIZE-i&&(r.push([-t,0]),s=t)}else e+n<-V.PIXEL_BUFFER?(r.push([t,0]),s=-t):e+n>V.TILE_SIZE+V.PIXEL_BUFFER&&(r.push([-t,0]),s=t);n+=e}e.points=r}_wrapPoint(e,t){const i=e.geometry;if(t===V.TILE_SIZE){const r=5*V.PIXEL_BUFFER;i.x<r?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>V.TILE_SIZE-r&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-V.PIXEL_BUFFER?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>V.TILE_SIZE+V.PIXEL_BUFFER&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}_processGraphics(e,t,i){if(!t||!t.length||!this._meshFactory)return Promise.resolve(null);const r=O.GraphicsReader.from(t,this.uid,e.transform),s=this._meshFactory;return this._matcher.then((t=>s.analyzeGraphics(r,this.container.stage.resourceManager,t,null,null,i).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,r))))))}_processAnalyzedGraphics(e,t){const i=this._meshFactory,r=t.getSize(),s=t.getCursor(),n={features:r,records:r,metrics:0},o=new(0,R.MeshData)(e.key.id,n,C.WGLSymbologyType.DEFAULT,!1,!1),a=[];for(;s.next();){const t=s.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const r=new(0,S.default)(t.displayId);r.insertAfter=t.insertAfter,a.push(r),i.writeGraphic(o,s,e.level,this.container.stage.resourceManager)}const l=e.tileInfoView.tileInfo.isWrappable,d=o.serialize(l);if(1!==d.length)return new(0,I.TileData);const h=d[0].message;return I.TileData.fromVertexData(h,a)}_abortProcessingGraphic(e){var t;null===(t=this._graphicIdToAbortController.get(e))||void 0===t||t.abort()}_getNullSymbol(e){const t=e.geometry;return(0,x.isPolyline)(t)?w.errorPolylineSymbol2D:(0,x.isPolygon)(t)||(0,x.isExtent)(t)?w.errorPolygonSymbol2D:this.defaultPointSymbolEnabled?w.errorPointSymbol2D:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}constructor(e){super(e),this._storage=new(0,P.ComputedAttributeStorage),this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.renderer=null,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}};(0,s._)([(0,p.property)()],H.prototype,"_effectiveRenderer",null),(0,s._)([(0,p.property)({constructOnly:!0})],H.prototype,"requestUpdateCallback",void 0),(0,s._)([(0,p.property)()],H.prototype,"container",void 0),(0,s._)([(0,p.property)({constructOnly:!0})],H.prototype,"graphics",void 0),(0,s._)([(0,p.property)()],H.prototype,"renderer",void 0),(0,s._)([(0,p.property)()],H.prototype,"updating",null),(0,s._)([(0,p.property)()],H.prototype,"view",void 0),(0,s._)([(0,p.property)()],H.prototype,"updateRequested",void 0),(0,s._)([(0,p.property)()],H.prototype,"defaultPointSymbolEnabled",void 0),H=(0,s._)([(0,m.subclass)("esri.views.2d.layers.support.GraphicsView2D")],H);const W=H})),t.register("3kinH",(function(i,r){e(i.exports,"GraphicTile",(function(){return l}));var s=t("8g5yZ"),n=t("4q6AC"),o=t("JmPPi"),a=t("gINiF");class l extends a.WGLTile{destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!==(e=this._displayObjects)&&void 0!==e?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){var t,i;if(!0===e.clear)return this.clear(),void(this._hasData=!1);const r=e.addOrUpdate,o=e.remove;!this._data&&r&&(null===(t=r.tileDisplayData)||void 0===t?void 0:t.displayObjects.length)?(r.tileDisplayData.computeDisplayList(),this._dirtyMap=new(0,s.default),this._dispRecStore=n.default.fromTileData(r,this._dirtyMap),this._data=r,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(r&&(null===(i=r.tileDisplayData)||void 0===i?void 0:i.displayObjects.length)||o.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new(0,o.default)(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=n.default.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const i=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],r=(e.remove||[]).slice();for(const e of i)null!=e.insertAfter&&r.push(e.id);let s;r.length>0&&(s=new Set(r));const n=this._data.tileDisplayData;for(const e of r){const t=n.displayObjectRegistry.get(e);if(t){n.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);n.displayObjectRegistry.delete(e)}}(null==s?void 0:s.size)&&(n.displayObjects=n.displayObjects.filter((e=>!s.has(e.id))));for(const r of i){let i,s=n.displayObjectRegistry.get(r.id);if(s){const e=s.displayRecords;s.set(r),s.displayRecords=e;const t=s.displayRecords.length;for(let e=0;e<t;++e){const t=s.displayRecords[e],i=r.displayRecords[e];(e>=r.displayRecords.length||t.geometryType!==i.geometryType||t.symbolLevel!==i.symbolLevel||t.zOrder!==i.zOrder||t.materialKey!==i.materialKey)&&(this._dispRecStore.delete(s.displayRecords[e]),e<r.displayRecords.length&&(s.displayRecords[e]=void 0))}s.displayRecords.length=r.displayRecords.length}else{let e;s=r.copy(),s.displayRecords=[],n.displayObjectRegistry.set(r.id,s);const t=n.displayObjects;if(null!=s.insertAfter)if(i={},s.insertAfter>=0){const i=n.displayObjectRegistry.get(s.insertAfter);i?(e=t.indexOf(i)+1,e<t.length?t.splice(e,0,s):(t.push(s),e=t.length)):(t.push(s),e=t.length)}else t.unshift(s),e=0;else t.push(s),e=t.length;if(i){const s=r.displayRecords.length>0?1:0;let o=0;for(let r=e-1;r>=0&&o<s;--r)for(let e=t[r].displayRecords.length-1;e>=0&&o<s;--e){const s=t[r].displayRecords[e],a=n.displayList.getDPInfoType();i[a]||(i[a]=s,++o)}}}const o=r.displayRecords.length;for(let a=0;a<o;++a){const o=r.displayRecords[a];let l=s.displayRecords[a];l?(l.meshData=o.meshData,l.materialKey=o.materialKey):(l=o.copy(),l.vertexFrom=void 0,l.indexFrom=void 0,s.displayRecords[a]=l);const d=o.geometryType,h=n.displayList.getDPInfoType(),u=e.addOrUpdate.tileBufferData.geometries[d],c=u.vertexBuffer,f=u.indexBuffer;let p;i&&(p=i[h]?n.displayList.splitAfter(i[h]):-1),t=this._dispRecStore.setMeshData(l,o,c,f,p)&&t,i&&null!=l.indexFrom&&null!=l.indexFrom&&(i[h]=l)}}return t}constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new(0,s.default)}}})),t.register("8g5yZ",(function(t,i){e(t.exports,"default",(function(){return s}));const r=-1;class s{hasDirty(){return this._dirties.some((e=>e.indexCount!==r||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=r,e.indexCount=r,e.vertexFrom=r,e.vertexCount=r,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:i,indexFrom:s,vertexCount:n,vertexFrom:o,allDirty:a}=this._dirties[t],l={};let d,h=!1;(a||o!==r&&n>0)&&(l.geometry={count:n,from:o,allDirty:a},h=!0),(a||s!==r&&i>0)&&(d={count:i,from:s,allDirty:a},h=!0),h&&e({indices:d,vertices:l},t)}}markDirtyIndices(e,t,i){const s=this._dirties[e],n=t,o=i;if(!s.allDirty)if(s.indexCount!==r){const e=Math.min(s.indexFrom,n),t=Math.max(s.indexFrom+s.indexCount,n+o)-e;s.indexFrom=e,s.indexCount=t}else s.indexFrom=n,s.indexCount=o}markDirtyVertices(e,t,i,s){const n=this._dirties[e],o=i,a=s;if(!n.allDirty)if(n.vertexCount!==r){const e=Math.min(n.vertexFrom,o),t=Math.max(n.vertexFrom+n.vertexCount,o+a)-e;n.vertexFrom=e,n.vertexCount=t}else n.vertexFrom=o,n.vertexCount=a}constructor(){this._dirties=[{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1},{vertexFrom:r,vertexCount:r,indexFrom:r,indexCount:r,allDirty:!1}]}}})),t.register("4q6AC",(function(i,r){e(i.exports,"default",(function(){return a})),t("2VlWd");var s=t("7UqHt"),n=t("5WctK");const o=["FILL","LINE","MARKER","TEXT","LABEL"];class a{static fromTileData(e,t){var i;const r=function(e){const t=e.getStrides(),i={};for(let e=0;e<t.length;e++)i[o[e]]=t[e];return i}(e),l=[0,0,0,0,0],d=[0,0,0,0,0];for(const t of e.tileDisplayData.displayObjects)for(const e of t.displayRecords)l[e.geometryType]=Math.max(l[e.geometryType],e.vertexFrom+e.vertexCount),d[e.geometryType]=Math.max(d[e.geometryType],e.indexFrom+e.indexCount);var h;const u=new a(r,e.tileDisplayData.displayList,t,void 0),c=null!==(h=null===(i=e.tileBufferData)||void 0===i?void 0:i.geometries)&&void 0!==h?h:[];for(let e=0;e<c.length;++e){const t=l[e],i=d[e],r=c[e],a=o[e],h=u._storageFor(a),f=c[e].indexBuffer;h.indexBuffer=f,h.idxFreeList=new(0,s.FreeList)(f.length),h.idxFreeList.allocate(i);let p=0;for(const t in r.vertexBuffer){const i=c[e].vertexBuffer[t];h.vertexBuffers[t].data=i.data,h.vertexBuffers[t].stride=i.stride;const r=(0,n.strideToPackingFactor)(i.stride),s=i.data.length*r/i.stride;p||(p=s)}h.vtxFreeList=new(0,s.FreeList)(p),h.vtxFreeList.allocate(t)}return u}delete(e){const t=o[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,i,r,s){const a=o[e.geometryType];let l,d;e.meshData=null,void 0===e.vertexFrom?(d=t.vertexCount,l=this._allocateVertices(a,d)):t.vertexCount>e.vertexCount?(this._freeVertices(a,e.vertexFrom,e.vertexCount),d=t.vertexCount,l=this._allocateVertices(a,d)):t.vertexCount===e.vertexCount?(l=e.vertexFrom,d=e.vertexCount):(this._freeVertices(a,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),l=e.vertexFrom,d=t.vertexCount);let h,u,c,f=!0;if(void 0===e.indexFrom?(h=s,c=t.indexCount,u=this._allocateIndices(a,c)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom,e.indexCount),c=t.indexCount,u=this._allocateIndices(a,c)):t.indexCount===e.indexCount?(f=!1,u=e.indexFrom,c=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),u=e.indexFrom,c=t.indexCount),-1!==l&&-1!==u){const s=this._storageFor(a);if((0,n.copyMeshData)(l,u,s.vertexBuffers,s.indexBuffer,t,i,r),e.vertexFrom=l,e.indexFrom=u,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return f&&this._displayList.addToList(e,h),!0}return-1!==l&&this._freeVertices(a,l,d),-1!==u&&this._freeIndices(a,u,c),e.setMeshDataFromBuffers(t,i,r),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const i=t.vertexBuffer,r=t.indexBuffer,s=o[e.geometryType],a=this._allocateVertices(s,e.vertexCount);if(-1===a)return this._freeVertices(s,a,e.vertexCount),!1;const l=this._allocateIndices(s,e.indexCount);if(-1===l)return this._freeVertices(s,a,e.vertexCount),this._freeIndices(s,l,e.indexCount),!1;const d=this._storageFor(s);if((0,n.copyMeshData)(a,l,d.vertexBuffers,d.indexBuffer,e,i,r),e.vertexFrom=a,e.indexFrom=l,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,a,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){var i,r;const s=this._storageFor(e),n=null===(i=s.vtxFreeList)||void 0===i?void 0:i.allocate(t);if(null==n||-1===n)return-1;const o=null===(r=s.vtxFreeList)||void 0===r?void 0:r.fragmentation;return null==o||o>.5?-1:n}_freeVertices(e,t,i){var r;null===(r=this._storageFor(e).vtxFreeList)||void 0===r||r.free(t,i)}_freeIndices(e,t,i){var r;null===(r=this._storageFor(e).idxFreeList)||void 0===r||r.free(t,i)}_allocateIndices(e,t){var i,r;const s=this._storageFor(e),n=null===(i=s.idxFreeList)||void 0===i?void 0:i.allocate(t);if(null==n||-1===n)return-1;const o=null===(r=s.idxFreeList)||void 0===r?void 0:r.fragmentation;return null==o||o>.5?-1:n}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}constructor(e,t,i,r){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=i;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:r?new(0,s.FreeList)(r):null,idxFreeList:r?new(0,s.FreeList)(r):null,vertexBuffers:{},indexBuffer:r?new Uint32Array(r):null};for(const i in e[t])this._freeListsAndStorage[t].vertexBuffers[i]={data:r?(0,n.allocateTypedArrayBuffer)(r,e[t][i]):null,stride:e[t][i]}}}}})),t.register("7UqHt",(function(t,i){e(t.exports,"FreeList",(function(){return s}));class r{get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,i=null;for(;null!==t;)t.count>=e&&(!i||t.count-e<i.count-e)&&(i=t),t=t.next;return i}findAdjacentRanges(e,t){let i=!0,r=!1,s=null,n=this._parent._freeHead;for(;i&&!r;){const o=null!==s?s.from+s.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(i=!1,r=!0):null!==n?(s=n,n=n.next):i=!1}return[s,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}}class s{allocate(e){const t=this._bookKeeper.findBestRange(e);if(null==t)return-1;const i=t.from,r=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,i,r),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;s._removeRange(t),this._freeHead=e}return i}free(e,t){const[i,r]=this._bookKeeper.findAdjacentRanges(e,t),n={from:e,count:t,prev:null!=i?i:null,next:null!=r?r:null};if(null!=i&&(i.next=n),null!=r&&(r.prev=n),this._bookKeeper.rangeCreated(n),this._allocated-=t,null!=r&&n.from+n.count===r.from){const e=n.from,t=n.count;s._fuse(n,r),s._removeRange(r),this._bookKeeper.rangeResized(n,e,t),this._bookKeeper.rangeResized(r,void 0,0)}if(null!=i&&i.from+i.count===n.from){const e=i.from,t=i.count;s._fuse(i,n),s._removeRange(n),this._bookKeeper.rangeResized(i,e,t),this._bookKeeper.rangeResized(n,void 0,0)}this._freeHead=null!==n.prev?this._freeHead:n}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new r(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}}})),t.register("JmPPi",(function(i,r){e(i.exports,"default",(function(){return l}));var s=t("5WctK"),n=t("iRJeW"),o=t("8JzMA"),a=t("4aQus");class l{dispose(){for(let r=0;r<5;r++){const s=this.geometryMap[r];if(s){var e,t,i;null===(e=s.data.vao)||void 0===e||e.disposeVAOOnly(),null===(t=s.data.indexBuffer)||void 0===t||t.dispose();for(const e in s.buffers)null===(i=s.buffers[e])||void 0===i||i.data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,i,r){if(!t.data.vao){const s={};for(const e in t.buffers)s[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new(0,a.VertexArrayObject)(e,r,i,s,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,i)=>{this._upload(t,i,e)}))}_upload(e,t,i){if(e.indices&&(e.indices.allDirty?this._uploadIndices(i,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(i,t,e.indices.from,e.indices.count)),e.vertices){const r=e.vertices;for(const e in r){const s=r[e];s.allDirty?this._uploadVertices(i,t,e):null!=s.from&&null!=s.count&&this._uploadVertices(i,t,e,s.from,s.count)}}}_uploadVertices(e,t,i,r,s){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[i];if(!o)return;const{data:a,stride:l}=o;if(n.buffers[i]&&a.length>0){const e=l/a.BYTES_PER_ELEMENT;null!=r&&null!=s?n.buffers[i].data.vertexBuffer.setSubData(a,r*e,r*e,(r+s)*e):n.buffers[i].data.vertexBuffer.setData(a)}}_uploadIndices(e,t,i,r){const s=this.geometryMap[t];if(!s)return;const n=e.geometries[t].indexBuffer;s.data.indexBuffer&&n.length>0&&(null!=i&&null!=r?s.data.indexBuffer.setSubData(n,i,i,i+r):s.data.indexBuffer.setData(n))}constructor(e){this.geometryMap=(0,s.createGeometryData)((()=>({indexBuffer:n.BufferObject.createIndex(e,o.Usage.STATIC_DRAW),vao:null})),((t,i)=>({vertexBuffer:n.BufferObject.createVertex(e,s.C_VBO_INFO[i])})))}}})),t.register("6WOnF",(function(i,r){e(i.exports,"TileData",(function(){return _}));var s=t("lNwWH"),n=t("66IJZ"),o=t("a3keH"),a=t("6KY07"),l=t("b63R8"),d=t("5WctK"),h=t("1uPnB"),u=t("kgLNq"),c=t("jTLfv"),f=t("f5ROF"),p=t("8laiu");const m=new(0,o.default),y=new(0,o.default);function g(e,t){const i={};for(const r in e){const s={data:(0,d.allocateTypedArrayBuffer)(t,e[r]),stride:e[r]};i[r]=s}return i}class _{reshuffle(){var e;if(m.reset(),!this.tileDisplayData)return;const t=function(e){const t=[[],[],[],[],[]],i=e;for(const e of i)for(const i of e.displayRecords)t[i.geometryType].push(i);return t}(this.tileDisplayData.displayObjects);for(const e of t)for(const t of e)t&&m.needMore(t.geometryType,t.meshData?t.meshData.vertexCount:t.vertexCount,t.meshData?t.meshData.indexData.length:t.indexCount);const i=t.length,r=new(0,a.default);for(let e=0;e<i;++e){var n;r.geometries[e].indexBuffer=new Uint32Array(Math.round(s.ReallocGrowthFactor*m.indicesFor(e)));const t=[],i=null===(n=this.tileBufferData)||void 0===n?void 0:n.geometries[e].vertexBuffer;if(!i)continue;for(const e in i)t.push(i[e].stride);const o=_._computeVertexAlignment(t),a=Math.round(s.ReallocGrowthFactor*m.verticesFor(e)),l=_._align(a,o);for(const t in i){const s=i[t].stride;r.geometries[e].vertexBuffer[t]={stride:s,data:(0,d.allocateTypedArrayBuffer)(l,s)}}}y.reset(),null===(e=this.tileDisplayData.displayList)||void 0===e||e.clear();for(let e=0;e<i;++e){const i=t[e];for(const t of i){if(t.meshData)t.writeMeshDataToBuffers(y.verticesFor(e),r.geometries[e].vertexBuffer,y.indicesFor(e),r.geometries[e].indexBuffer),t.meshData=null;else{var o;const i=null===(o=this.tileBufferData)||void 0===o?void 0:o.geometries[e];if(i){const s=i.vertexBuffer,n=i.indexBuffer,o=r.geometries[e].vertexBuffer,a=r.geometries[e].indexBuffer,l=y.verticesFor(e),h=y.indicesFor(e);(0,d.copyMeshData)(l,h,o,a,t,s,n),t.vertexFrom=l,t.indexFrom=h}}y.needMore(e,t.vertexCount,t.indexCount)}}const{displayList:l,displayObjects:h}=this.tileDisplayData;if(l)for(const e of h)l.addToList(e.displayRecords);this.tileBufferData=r}getStrides(){var e;const t=[],i=null===(e=this.tileBufferData)||void 0===e?void 0:e.geometries;if(!i)return t;for(let e=0;e<i.length;++e){const r=i[e];t[e]={};for(const i in r.vertexBuffer)t[e][i]=r.vertexBuffer[i].stride}return t}clone(){var e,t;const i=new _;var r,s;return i.tileBufferData=null!==(r=null===(e=this.tileBufferData)||void 0===e?void 0:e.clone())&&void 0!==r?r:null,i.tileDisplayData=null!==(s=null===(t=this.tileDisplayData)||void 0===t?void 0:t.clone())&&void 0!==s?s:null,i}_guessSize(){var e,t;const i=null!==(t=null===(e=this.tileDisplayData)||void 0===e?void 0:e.displayObjects)&&void 0!==t?t:[],r=Math.min(i.length,4);let s=0;for(let e=0;e<r;e++)s=Math.max(s,i[e].displayRecords.length);return 2*(12*i.length+i.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),i=this.tileDisplayData.serialize(new(0,p.default)(Int32Array,this._guessSize())).buffer();return t.push(i),{result:{displayData:i,bufferData:e},transferList:t}}static fromVertexData(e,t){const i={},r=new Map;for(const e of t)r.set(e.id,e);return(0,d.forEachGeometryType)((t=>{const s=e.data[t];if(null!=s){const e=u.DisplayRecordReader.from(s.records).getCursor();for(;e.next();){const i=e.id,s=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,d=r.get(i),u=new(0,h.default)(i,t,s);u.indexFrom=n,u.indexCount=o,u.vertexFrom=a,u.vertexCount=l,d.displayRecords.push(u)}i[t]=c.VertexBuffers.fromVertexData(s,t)}else i[t]=new(0,f.VertexVectors)(t,0,n.WGLSymbologyType.DEFAULT).intoBuffers()})),_.fromMeshData({displayObjects:t,vertexBuffersMap:i})}static fromMeshData(e){const t=new _,i=new(0,l.default),r=new(0,a.default);i.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const i=t,s=e.vertexBuffersMap[i];r.geometries[i].indexBuffer=s.indexBuffer,r.geometries[i].vertexBuffer=s.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=r,t}static bind(e,t){const i=new _;return i.tileDisplayData=e,i.tileBufferData=t,i}static create(e,t){const i=new _;i.tileDisplayData=new(0,l.default),i.tileDisplayData.displayObjects=e;const r=[0,0,0,0,0],s=[0,0,0,0,0],n=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)n[e.geometryType].push(e),r[e.geometryType]+=e.meshData.vertexCount,s[e.geometryType]+=e.meshData.indexData.length;const o=new(0,a.default),d=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let e=0;e<5;e++){const t=new Uint32Array(s[e]),i=g(d[e],r[e]);h.default.writeAllMeshDataToBuffers(n[e],i,t),o.geometries[e]={indexBuffer:t,vertexBuffer:i}}return i.tileBufferData=o,i}static _align(e,t){const i=e%t;return 0===i?e:e+(t-i)}static _computeVertexAlignment(e){let t=!1,i=!1;for(const r of e)r%4==2?t=!0:r%4!=0&&(i=!0);return i?4:t?2:1}constructor(){this.tileDisplayData=null,this.tileBufferData=null}}})),t.register("a3keH",(function(t,i){e(t.exports,"default",(function(){return r}));class r{get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const r=this._byGeometryType[e];r.vertices+=t,r.indices+=i}constructor(){this._byGeometryType=null}}})),t.register("6KY07",(function(i,r){e(i.exports,"default",(function(){return n}));var s=t("5WctK");class n{clone(){const e=new n;for(let t=0;t<this.geometries.length;t++){const i=this.geometries[t],r=e.geometries[t];r.indexBuffer=i.indexBuffer.slice(),r.vertexBuffer={};for(const e in i.vertexBuffer){const{data:t,stride:s}=i.vertexBuffer[e];r.vertexBuffer[e]={data:t.slice(),stride:s}}}return e}static deserialize(e){const t=new n;for(let i=0;i<5;++i){t.geometries[i].indexBuffer=new Uint32Array(e.geometries[i].indexBuffer),t.geometries[i].vertexBuffer={};for(const r in e.geometries[i].vertexBuffer)t.geometries[i].vertexBuffer[r]={data:(0,s.allocateTypedArrayBufferwithData)(e.geometries[i].vertexBuffer[r].data,e.geometries[i].vertexBuffer[r].stride),stride:e.geometries[i].vertexBuffer[r].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const i in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[i]={data:this.geometries[t].vertexBuffer[i].data.buffer,stride:this.geometries[t].vertexBuffer[i].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const i in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[i].data.buffer)}return e}constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}}})),t.register("b63R8",(function(i,r){e(i.exports,"default",(function(){return a}));var s=t("63ASp"),n=t("7P0zT"),o=t("5F4A5");class a{get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new(0,s.default);for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new a;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return(0,o.serializeList)(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),i=new Array(t),r=new Map;for(let t=0;t<i.length;++t){const s=n.default.deserialize(e);i[t]=s,r.set(s.id,s)}this.displayObjects=i,this._displayList=null,this._displayObjectRegistry=r}static deserialize(e){const t=new a;return t._deserializeObjects(e),t}constructor(){this.displayObjects=[],this._displayList=null}}})),t.register("63ASp",(function(i,r){e(i.exports,"default",(function(){return o}));var s=t("ktHf8");function n(e,t,i,...r){t<e.length?e.splice(t,i,...r):e.push(...r)}class o{replay(e,t,i){for(const r of this.symbolLevels)for(const n of r.zLevels){const r=n.geometryDPInfo.unified;if(r)for(const n of r){const{geometryType:r,materialKey:o,indexFrom:a,indexCount:l}=n,d=s.MaterialKeyBase.load(o).symbologyType,h=e.painter.getBrush(r,d),u={geometryType:r,materialKey:o,indexFrom:a,indexCount:l,target:t.getGeometry(r)};h.prepareState(e),h.drawGeometry(e,t,u,i)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const i of e)this._addToList(i,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const i of e)t=this._removeFromList(i);return t}clone(){const e=new o;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length,r=e.indexFrom+e.indexCount;for(let s=0;s<i;++s){const i=t[s];if(i.geometryType===e.geometryType&&r>i.indexFrom&&r<=i.indexFrom+i.indexCount){if(r<i.indexFrom+i.indexCount){const e=new a;e.geometryType=i.geometryType,e.materialKey=i.materialKey,e.indexFrom=r,e.indexCount=i.indexFrom+i.indexCount-r,t.splice(s+1,0,e),i.indexCount=r-i.indexFrom}return s}}}_addToList(e,t){const i=e.symbolLevel,r=e.zOrder,s=this._getDisplayList(i,r),o=null!=t?t:s.length-1,l=o>=0&&o<s.length?s[o]:null;if(null!==l&&l.materialKey===e.materialKey&&l.indexFrom+l.indexCount===e.indexFrom&&l.geometryType===e.geometryType)l.indexCount+=e.indexCount;else{const t=new a;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,n(s,o+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(t,i),s=r.length;let o;for(let t=0;t<s;++t){const i=r[t];if(e.indexFrom+e.indexCount>i.indexFrom&&e.indexFrom<i.indexFrom+i.indexCount&&i.geometryType===e.geometryType){o=t;break}}if(void 0!==o){const t=r[o];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&n(r,o,1),o-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(n(r,o,1),o-1):o;{const i=t.indexFrom,s=e.indexFrom-t.indexFrom,l=e.indexCount,d=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=s;const h=new a;return h.geometryType=t.geometryType,h.materialKey=t.materialKey,h.indexFrom=i+s+l,h.indexCount=d,n(r,o+1,0,h),o}}return null}_getDisplayList(e,t){let i;const r=this.symbolLevels.length;for(let t=0;t<r;t++)if(this.symbolLevels[t].symbolLevel===e){i=this.symbolLevels[t];break}let s;i||(i=new h,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let e=0;e<n;e++)if(i.zLevels[e].zLevel===t){s=i.zLevels[e];break}return s||(s=new d,s.geometryDPInfo=new l,s.zLevel=t,i.zLevels.push(s)),s.geometryDPInfo.unified||(s.geometryDPInfo.unified=[]),s.geometryDPInfo.unified}getDPInfoType(){return"unified"}constructor(){this.symbolLevels=[]}}class a{clone(){const e=new a;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}}class l{clone(){const e=new l;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}}class d{clone(){const e=new d;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}constructor(){this.geometryDPInfo=new l}}class h{clone(){const e=new h;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}constructor(){this.zLevels=[]}}})),t.register("7P0zT",(function(i,r){e(i.exports,"default",(function(){return o}));var s=t("1uPnB"),n=t("5F4A5");class o{copy(){const e=new o(this.id);return e.set(this),e}clone(){const e=new o(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),(0,n.serializeList)(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),i=new o(t),r={id:t};var a;return i.displayRecords=null!==(a=(0,n.deserializeList)(e,s.default,r))&&void 0!==a?a:[],i}constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}}})),t.register("1uPnB",(function(i,r){e(i.exports,"default",(function(){return o}));var s=t("lug9S"),n=t("5WctK");class o{get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new o(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,i){const r=new(0,s.default);for(const i in t){const s=t[i].stride,o=t[i].data;if(!o)continue;const a=[],l=(0,n.strideToPackingFactor)(s);for(let t=0;t<s*e.vertexCount/l;++t)a[t]=o[t+s*e.vertexFrom/l];r.vertexData.set(i,a)}r.indexData.length=0;for(let t=0;t<e.indexCount;++t)r.indexData[t]=i[t+e.indexFrom]-e.vertexFrom;r.vertexCount=e.vertexCount,this.meshData=r}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new(0,s.default);for(const t in e){const i=e[t].stride,r=e[t].data,s=[],o=(0,n.strideToPackingFactor)(i);for(let e=0;e<i*this.vertexCount/o;++e)s[e]=r[e+i*this.vertexFrom/o];this.meshData.vertexData.set(t,s)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,i,r){if(this.meshData){for(const i in t){const r=t[i].stride,s=this.meshData.vertexData.get(i),o=t[i].data,a=(0,n.strideToPackingFactor)(r);for(let t=0;t<r*this.meshData.vertexCount/a;++t)o[t+r*e/a]=s[t]}for(let t=0;t<this.meshData.indexData.length;++t)r[t+i]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(e,t,i){let r=0,s=0;for(const n of e)n.writeMeshDataToBuffers(r,t,s,i),r+=n.vertexCount,s+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const i=e.readInt32(),r=e.readInt32(),s=new o(t.id,i,r);return s.vertexFrom=e.readInt32(),s.vertexCount=e.readInt32(),s.indexFrom=e.readInt32(),s.indexCount=e.readInt32(),s.minZoom=e.readInt32(),s.maxZoom=e.readInt32(),s}constructor(e,t,i,r=0,s=0){this.id=e,this.geometryType=t,this.materialKey=i,this.minZoom=r,this.maxZoom=s,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}}})),t.register("lug9S",(function(t,i){e(t.exports,"default",(function(){return r}));class r{clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,i){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=i}constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}}})),t.register("5F4A5",(function(t,i){function r(e,t){if(null!==t){e.push(t.length);for(const i of t)i.serialize(e);return e}e.push(0)}function s(e,t,i){const r=e.readInt32(),s=new Array(r);for(let r=0;r<s.length;r++)s[r]=t.deserialize(e,i);return s}e(t.exports,"serializeList",(function(){return r})),e(t.exports,"deserializeList",(function(){return s}))})),t.register("jTLfv",(function(i,r){e(i.exports,"VertexBuffers",(function(){return o}));var s=t("5WctK");class n{static decode(e){const t=(0,s.allocateTypedArrayBufferwithData)(e.data,e.stride),i=e.stride;return new n(t,i)}static fromVertexVector(e){const t=(0,s.allocateTypedArrayBufferwithData)(e.data.buffer(),e.stride),i=e.stride;return new n(t,i)}constructor(e,t){this.data=e,this.stride=t}}class o{static decode(e){const t=e.geometryType,i=e.indexBuffer,r={};for(const t in e.namedBuffers)r[t]=n.decode(e.namedBuffers[t]);return new o(t,i,r)}static fromVertexData(e,t){const i=e.indices,r=(0,s.allocateTypedArrayBufferwithData)(e.vertices,e.stride),a=e.stride,l={geometry:new n(r,a)};return new o(t,i,l)}static fromVertexVectors(e){const t=e.geometryType,i=e.indexVector.buffer(),r={};let s;for(s in e.namedVectors)r[s]=n.fromVertexVector(e.namedVectors[s]);return new o(t,i,r)}constructor(e,t,i){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=i}}})),t.register("f5ROF",(function(i,r){e(i.exports,"VertexVectors",(function(){return l}));var s=t("5WctK"),n=t("jTLfv"),o=t("8laiu");class a{get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const i=this.data.buffer();e.vertexCount=this.vertexCount,e.data=i,e.stride=this.stride,t.push(i)}constructor(e,t){this.data=e,this.stride=t}}class l{get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const i=this.indexVector.buffer(),r={};let s;for(s in t.push(i),this.namedVectors){const e=this.namedVectors[s];r[s]={},e.transfer(r[s],t)}e.geometryType=this.geometryType,e.indexBuffer=i,e.namedBuffers=r,this.destroy()}intoBuffers(){const e=n.VertexBuffers.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}constructor(e,t,i){this.geometryType=e,this.indexVector=new(0,o.default)(Uint32Array,6*t),this.namedVectors={};const r=(0,s.getStrides)(e,i);for(const e in r){const i=r[e];let s;switch(i%4){case 0:case 2:s=new(0,o.default)(Uint32Array,i*t);break;case 1:case 3:s=new(0,o.default)(Uint8Array,i*t)}this.namedVectors[e]=new a(s,i)}}}})),t.register("cdq0d",(function(i,r){e(i.exports,"GraphicsReader",(function(){return l}));var s=t("79LpT"),n=t("akQYU"),o=t("jBcNl"),a=t("5STKO");class l extends a.FeatureSetReaderJSON{static from(e,t,i){const r=o.FeatureSetReader.createInstance(),a=[],d=e.filter((e=>!!e.geometry));for(const e of d){const i=(0,s.getJsonType)(e.geometry);(0,n.convertFromGraphics)(a,[e],i,!1,!1,t)}return new l(r,a,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new l(this.instance,this._features,this._transform);return this.copyInto(e),e}constructor(e,t,i){super(e,t,null),this._transform=i}}})),t.register("4gS0A",(function(i,r){e(i.exports,"default",(function(){return x}));var s=t("iXlXu"),n=t("38gAI"),o=t("8TwEW"),a=t("5Hy9K"),l=t("5On35"),d=t("eY5Yp"),h=t("eGRqB"),u=t("4FBKO"),c=t("gKnlV"),f=t("d2StF");const p={minX:0,minY:0,maxX:0,maxY:0},m=(0,o.create)(),y=1e-5;function g(e,t,i,r,s){return p.minX=t,p.minY=i,p.maxX=r,p.maxY=s,e.search(p)}function _(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class x{setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new(0,h.HittestDrawHelper)(e)}hitTest(e,t,i,r,s){e=(0,l.normalizeMapX)(e,this._tileInfoView.spatialReference);const n=.5*r*window.devicePixelRatio*i;m[0]=e-n,m[1]=t-n,m[2]=e+n,m[3]=t+n;const a=.5*r*(i+f.PIXEL_BUFFER),d=g(this._index,e-a,t-a,e+a,t+a);if(!d||0===d.length)return[];const h=[],u=(0,o.create)(),c=(0,o.create)();for(const e of d){var p;const{geometry:t,symbolResource:i}=e;this._getSymbolBounds(u,i,t,c,s),c[3]=c[2]=c[1]=c[0]=0,(0,o.intersects)(u,m)&&(null===(p=e.graphic)||void 0===p?void 0:p.visible)&&h.push(e)}if(0===h.length)return[];const y=this._hittestDrawHelper,_=[];for(const e of h){const{geometry:t,symbolResource:i}=e,{hash:n,textInfo:o}=i,a=this._hashToCIM.get(n);a&&y.hitTest(m,a.symbol,t,o,s,r)&&_.push(e)}return _.sort(v),_.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=this._searchForItems(t);if(0===r.length||0===i.length)return[];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let e=1;e<r.length;e++)r[e].insertAfter=r[e-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,n=0,o=0;const a=t.resolution,l=[],d={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const h of i){for(o=-2;n<r.length;)if(s=r[n],n++,h.uid===s.graphic.uid){o=s.insertAfter;break}if(!(null==s?void 0:s.geometry)||-2===o)continue;const i=s.getGeometryQuantized(d,t.bounds,this._tileInfoView.spatialReference,a),u={...s.graphic.attributes};u[this._uidFieldName]=h.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),l.push({centroid:c.default.getCentroidQuantized(s,d),geometry:i,attributes:u,symbol:s.symbol,groupId:s.groupId,insertAfter:o,zorder:s.zorder})}return l.sort(((e,t)=>e.zorder-t.zorder)),l}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:r}=t,s=this._searchForItems(t),n=[];return 0===s.length||this._createTileGraphics(n,e,s,{originPosition:"upperLeft",scale:[r,r],translate:[i[0],i[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,i){if(!e||null==t)return;this.has(e)&&this.remove(e),this._onAdd(e);const r=[0,0,0,0],s=this._getSymbolBounds(null,t,i,r,0),n=c.default.acquire(e,t,i,null!=s?s:null,r);return this._itemByGraphic.set(e,n),i&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);(null==t?void 0:t.bounds)&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r)}update(e,t,i){const r=this._itemByGraphic.get(e);r.groupId=null;const s=(0,o.clone)(r.bounds);this._index.remove(r);const n=this._getSymbolBounds(r.bounds,t,i,r.size,0);return null!=n&&r.set(e,t,i,n,r.size),i&&this._index.insert(r),{oldBounds:s,newBounds:r.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,i=[];for(const[e,r]of t){const e=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&null!=e&&(r.bounds=e,i.push(r))}this._index.load(i)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,r,s){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a,resolution:l}=s;let d,h,u,f;i.sort(((e,t)=>e.zorder-t.zorder));for(let s=0;s<i.length;s++){u=i[s],d=u.graphic,h=u.getGeometryQuantized(r,a,o,l),f=0===s?-1:i[s-1].graphic.uid;const p={...u.graphic.attributes};p[n]=d.uid,null==u.groupId&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:c.default.getCentroidQuantized(u,r),geometry:h,attributes:p,symbol:u.symbol,groupId:u.groupId,insertAfter:f,zorder:u.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds,r=(0,d.getInfo)(t);if(r&&t.isWrappable){const[t,s]=r.valid,n=Math.abs(i[2]-s)<y,a=Math.abs(i[0]-t)<y;if((!n||!a)&&(n||a)){const r=e.resolution;let a;a=(0,o.create)(n?[t,i[1],t+r*f.PIXEL_BUFFER,i[3]]:[s-r*f.PIXEL_BUFFER,i[1],s,i[3]]);const l=g(this._index,i[0],i[1],i[2],i[3]),d=g(this._index,a[0],a[1],a[2],a[3]);return[...new Set([...l,...d])]}}return g(this._index,i[0],i[1],i[2],i[3])}_getSymbolBounds(e,t,i,r,n){if(!t||!t.symbol||!i)return null;if(e||(e=(0,o.create)()),(0,a.getBoundsXY)(e,i),!r||0===r[0]&&0===r[1]&&0===r[2]&&0===r[3]){const{hash:e,textInfo:i}=t,o=this._hashToCIM.get(e);if(!o)return null;r||(r=[0,0,0,0]);const a=this._inflatedSizeHelper.getSymbolInflateSize(r,o.symbol,this._cimResourceManager,n,i);r[0]=(0,s.pt2px)(a[0]),r[1]=(0,s.pt2px)(a[1]),r[2]=(0,s.pt2px)(a[2]),r[3]=(0,s.pt2px)(a[3])}const l=this._resolution,d=u.CIMSymbolInflatedSizeHelper.safeSize(r);return e[0]-=d*l,e[1]-=d*l,e[2]+=d*l,e[3]+=d*l,e}constructor(e,t,i,r,s,o,a){this._graphics=r,this._onAdd=s,this._onRemove=o,this._hashToCIM=a,this._index=(0,n.r)(9,_),this._itemByGraphic=new Map,this._inflatedSizeHelper=new(0,u.CIMSymbolInflatedSizeHelper),this._tileInfoView=e,this._uidFieldName=i;const l=e.getClosestInfoForScale(t);l&&(this._resolution=this._tileInfoView.getTileResolution(l.level))}}const v=(e,t)=>{const i=(0,f.graphicGeometryToNumber)(e.graphic),r=(0,f.graphicGeometryToNumber)(t.graphic);return i===r?t.zorder-e.zorder:i-r}})),t.register("gKnlV",(function(i,r){e(i.exports,"default",(function(){return m}));var s=t("8TwEW"),n=t("30puZ"),o=t("79LpT"),a=t("ibKgR"),l=t("eY5Yp"),d=t("akQYU"),h=t("awxBI");const u=new(0,h.default),c=new(0,h.default),f="esriGeometryPolyline";function p(e){e.coords.length=0,e.lengths.length=0}class m{static acquire(e=null,t,i,r,s){let n;return 0===m._pool.length?n=new m:(n=m._pool.pop(),this._set.delete(n)),n.acquire(e,t,i,r,s),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,o.isPolygon)(e.geometry)){const i=e.symbol;if(null==i)return null;if((null==i?void 0:i.layers.length)>0&&i.layers.some((e=>"text"===e.type||"marker"===e.type))){const i=(0,n.polygonCentroid)(e.geometry);return null!==i?(0,a.quantizePoint)(t,{},{x:i[0],y:i[1]},!1,!1):null}}return null}acquire(e=null,t,i,r,s){e&&this.set(e,t,i,r,s)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,r,s){this.graphic=e,this.geometry=i,this.symbolResource=t,this.bounds=r,s&&(this.size=s)}getGeometryQuantized(e,t,i,r){const n=this.geometry,h=(0,o.getJsonType)(n);if(null==h)return null;switch(h){case"esriGeometryPolygon":{const t=n,{rings:i}=t;if(!i||0===i.length)return null;let r;if(r=1===i.length&&2===i[0].length?(0,a.quantizeGeometry)(e,{paths:[[i[0][0],i[0][1]]]}):(0,a.quantizeGeometry)(e,this.geometry),!r){const t={x:i[0][0][0],y:i[0][0][1]};if(r=(0,a.quantizeGeometry)(e,t),r){const{x:e,y:t}=r;return{rings:[[[e-1,t],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return r}case"esriGeometryPolyline":{const t=n;var m,y;p(u),p(c);const i=null!==(m=t.hasZ)&&void 0!==m&&m,r=null!==(y=t.hasM)&&void 0!==y&&y;var g,_;return(0,d.convertFromPolyline)(u,t),(0,d.generalizeOptimizedGeometry)(c,u,i,r,f,e.scale[0]),(0,d.quantizeOptimizedGeometry)(u,c,i,r,f,e),(0,d.convertToPolyline)(u,null!==(g=t.hasZ)&&void 0!==g&&g,null!==(_=t.hasM)&&void 0!==_&&_)}case"esriGeometryMultipoint":{const o=n,d=.5*r*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),h=(0,l.getInfo)(i);let u=o.points;if(h){const[e,i]=h.valid,r=i-e;u=u.filter((n=>{if(n[0]+d>i||n[0]-d<e){const e=[...n];return n[0]+d>i?e[0]-=r:e[0]+=r,(0,s.containsPointWithMargin)(t,n,d)||(0,s.containsPointWithMargin)(t,e,d)}return(0,s.containsPointWithMargin)(t,n,d)}))}return 0===u.length?{points:u}:(0,a.quantizeGeometry)(e,{points:u})}}return(0,a.quantizeGeometry)(e,this.geometry)}constructor(){this.bounds=(0,s.create)(),this.graphic=null}}m._pool=[],m._set=new Set}))}();
//# sourceMappingURL=mapViewDeps.56632974.js.map
