function e(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("bkuWn",(function(n,r){var i;i=n.exports,Object.defineProperty(i,"__esModule",{value:!0,configurable:!0}),e(n.exports,"default",(function(){return E}));var s=t("j6uz9"),a=t("5kFOn"),o=t("bPmsI"),l=t("6TszD"),u=t("2IJVS"),c=t("lHg4e"),f=t("cc23H"),d=t("hTI69"),h=t("gHCNy");t("aX9sh"),t("5HTPH");var p=t("8gk9b"),m=t("qA6zg"),y=t("iGP99"),g=t("lPKJW"),x=t("90xN9"),b=t("8u5kg"),w=t("fx4cs"),I=t("ctxhN"),v=t("54ioU"),S=t("eOpMC"),R=t("5lb2Y"),T=t("6rQbA"),_=t("lixLM"),M=t("4VorL"),C=t("8hgwR"),k=t("043dQ"),F=t("49VE6"),P=t("kXLjG"),N=t("lWZIb"),D=t("gKyS5");let O=class extends((0,x.BlendLayer)((0,R.ScaleRangeLayer)((0,I.OperationalLayer)((0,v.PortalLayer)((0,b.CustomParametersMixin)((0,w.ImageryTileMixin)((0,T.TemporalLayer)((0,g.ArcGISService)((0,S.RefreshableLayer)((0,u.MultiOriginJSONMixin)(y.default))))))))))){normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.throwIfAbortError).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[new(0,M.default)({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new(0,M.default)({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:t}=this,n=t?.attributeTable,r=null!=n?n.fields:null;if(r){const t=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e.push(...t)}const i=t?.dataType,s=t?.multidimensionalInfo;if(("vector-magdir"===i||"vector-uv"===i)&&null!=s){const t=s.variables[0].unit?.trim(),n="Magnitude"+(t?` (${t})`:"");e.push(new(0,M.default)({name:"Raster.Magnitude",alias:n,domain:null,editable:!1,type:"double"})),e.push(new(0,M.default)({name:"Raster.Direction",alias:"Direction (Â°)",domain:null,editable:!1,type:"double"}))}return e}createPopupTemplate(e){const{rasterFields:t}=this,n=new Set(t.map((({name:e})=>e)).filter((e=>"raster.servicepixelvalue.raw"!==e.toLowerCase())));return(0,D.createPopupTemplate)({fields:t,title:this.title},{...e,visibleFieldNames:n})}async generateRasterInfo(e,t){if(!(e=(0,h.ensureClass)(k.default,e)))return this.rasterInfo;try{const n={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>n[e.url]=e));const r=(0,N.create)(e.functionDefinition?.toJSON()??e.toJSON(),n),i=new(0,F.default)({rasterFunction:r});return await i.open(t),i.rasterInfo}catch(e){if(e instanceof o.default)throw e;throw new(0,o.default)("imagery-tile-layer","the given raster function is not supported")}}write(e,t){const n=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===n.datasetFormat&&("Raster"===n.tileType||"Map"===n.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new(0,o.default)("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),"Function"===this.raster.datasetFormat?(t=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,n=[this.url];t&&(0,N.getPrimaryRasterUrls)(t.toJSON(),n);const r=await Promise.all(n.map((t=>P.default.open({url:t,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e})))),i=r.findIndex((e=>null==e));if(i>-1)throw new(0,o.default)("imagery-tile-layer:open",`cannot open raster: ${n[i]}`);if(this._primaryRasters=r,t){const e={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((t=>e[t.url]=t));const n=(0,N.create)(t.functionDefinition?.toJSON()??t.toJSON(),e),i=new(0,F.default)({rasterFunction:n});try{await i.open(),this.raster=i}catch(e){const t=l.default.getLogger(this);e instanceof o.default&&t.error("imagery-tile-layer:open",e.message),t.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=r[0]}}else this.raster=r[0]}const n=this.raster.rasterInfo;if(!n)throw new(0,o.default)("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",t?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,f.watch)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}constructor(...e){super(...e),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}};(0,s._)([(0,d.property)()],O.prototype,"_primaryRasters",void 0),(0,s._)([(0,d.property)({type:[h.Integer],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],O.prototype,"bandIds",void 0),(0,s._)([(0,d.property)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,p.enumeration)(C.interpolationKebab)],O.prototype,"interpolation",void 0),(0,s._)([(0,d.property)(_.legendEnabled)],O.prototype,"legendEnabled",void 0),(0,s._)([(0,d.property)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],O.prototype,"isReference",void 0),(0,s._)([(0,d.property)({type:["show","hide"]})],O.prototype,"listMode",void 0),(0,s._)([(0,d.property)({json:{read:!0,write:!0}})],O.prototype,"blendMode",void 0),(0,s._)([(0,d.property)()],O.prototype,"sourceJSON",void 0),(0,s._)([(0,d.property)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],O.prototype,"version",void 0),(0,s._)([(0,d.property)({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),(0,s._)([(0,d.property)({type:["ArcGISTiledImageServiceLayer"]})],O.prototype,"operationalLayerType",void 0),(0,s._)([(0,d.property)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,n){t[n]=!e}}}})],O.prototype,"popupEnabled",void 0),(0,s._)([(0,d.property)({type:a.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],O.prototype,"popupTemplate",void 0),(0,s._)([(0,d.property)({readOnly:!0})],O.prototype,"defaultPopupTemplate",null),(0,s._)([(0,d.property)({readOnly:!0,type:[M.default]})],O.prototype,"fields",void 0),(0,s._)([(0,d.property)({readOnly:!0,type:[M.default]})],O.prototype,"rasterFields",null),O=(0,s._)([(0,m.subclass)("esri.layers.ImageryTileLayer")],O);const E=O})),t.register("fx4cs",(function(n,r){e(n.exports,"ImageryTileMixin",(function(){return E}));var i=t("j6uz9");t("ixrNB");var s=t("CQPvH"),a=t("bYA0c"),o=t("bPmsI"),l=t("6TszD"),u=t("hTI69"),c=t("gHCNy");t("aX9sh"),t("5HTPH");var f=t("bzBbJ"),d=t("qA6zg"),h=t("fau59"),p=t("c8U9w"),m=t("lixLM"),y=t("1eHoq"),g=t("h1Qd4"),x=t("043dQ"),b=t("bVXVO"),w=t("hCr3P"),I=t("49VE6"),v=t("lEHJu"),S=t("8Jx0B"),R=t("lWZIb"),T=t("2WfpR"),_=t("e6UOF"),M=t("dqihR"),C=t("j07pE"),k=t("es4Xy"),F=t("9abHb"),P=t("fDLIP"),N=t("jaaCV"),D=t("dZxPT");const O=l.default.getLogger("esri.layers.mixins.ImageryTileMixin"),E=e=>{let t=class extends e{get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){"none"===e?.functionName?.toLowerCase()&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}set url(e){this._set("url",(0,p.sanitizeUrl)(e,O))}set renderer(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",e),this.updateRenderer())}readRenderer(e,t,n){const r=t?.layerDefinition?.drawingInfo?.renderer;return(0,s.read)(r,n)||void 0}async convertVectorFieldData(e,t){if(null==e||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:e,dataType:r},t):(0,M.convertVectorFieldData)(e,r)}async computeStatisticsHistograms(e,t){e=(0,c.ensureClass)(F.default,e).clone();const{rasterInfo:n}=this,{geometry:r}=e;if(null==r)throw new(0,o.default)("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let i=r;const{spatialReference:s}=n;r.spatialReference.equals(s)||(await(0,T.load)(),i="extent"===r.type?(0,T.projectExtent)(r,s):(0,T.projectPolygon)(r,s));const a=e.pixelSize??new(0,D.default)({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:s}),{extent:l,width:u,height:f}=(0,S.snapToRaster)(n,i,a),d=await this.fetchPixels(l,u,f,{...t,interpolation:"nearest"});if(null==d.pixelBlock)throw new(0,o.default)("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const h=await(0,S.clip)(d.pixelBlock,l,i),p=this._rasterJobHandler.instance;return p?p.computeStatisticsHistograms({pixelBlock:h},t):(0,_.computeStatisticsHistograms)(h)}async createFlowMesh(e,t){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,t):(0,P.createFlowMesh)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo??{};if(null==t)return e;let n=e.multidimensionalDefinition||this.multidimensionalDefinition;null!=n&&n.length||(n=(0,v.getDefaultMultidimensionalDefinition)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const r=e.timeExtent||this.timeExtent;if(null!=n&&null!=r&&(null!=r.start||null!=r.end)){n=n.map((e=>e.clone()));const i=t.variables.find((({name:e})=>e===n[0].variableName))?.dimensions?.find((({name:e})=>"StdTime"===e)),s=n.find((({dimensionName:e})=>"StdTime"===e));if(!i||!s)return{...e,multidimensionalDefinition:null};const{start:a,end:o}=r,l=null==a?null:a.getTime(),u=null==o?null:o.getTime(),c=l??u,f=u??l;if(null!=i.values){const e=i.values.filter((e=>{if(Array.isArray(e)){if(c===f)return e[0]<=c&&e[1]>=c;const t=e[0]<=c&&e[1]>c||e[0]<f&&e[1]>=f,n=e[0]>=c&&e[1]<=f||e[0]<c&&e[1]>f;return t||n}return c===f?e===c:e>=c&&e<=f}));if(e.length){const t=e.sort(((e,t)=>{const n=Array.isArray(e)?e[0]:e,r=Array.isArray(e)?e[1]:e,i=Array.isArray(t)?t[0]:t,s=Array.isArray(t)?t[1]:t;return c===f?n-i:Math.abs(r-f)-Math.abs(s-f)}))[0];s.values=[t]}else n=null}else if(i.hasRegularIntervals&&i.extent){const[e,t]=i.extent;c>t||f<e?n=null:s.values=c===f?[c]:[Math.max(e,c),Math.min(t,f)]}}return null!=n&&(0,v.hasExcludedVariableOrDimension)(n,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:n}}async updateRasterFunction(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&e&&this._set("rasterFunction",x.default.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,n=!1;"Function"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],n=!0):e=[t];const{rasterFunction:r}=this;if(r){const n={raster:t};e.length>1&&e.forEach((e=>n[e.url]=e));const i=(0,R.create)(r.functionDefinition?.toJSON()??r.toJSON(),n),s=new(0,I.default)({rasterFunction:i});s.rasterJobHandler=this._rasterJobHandler.instance,await s.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=s}else this.raster=t,this._cachedRasterFunctionJson=null,await t.when();if(this._cachedRendererJson=null,!n&&!r)return;const{bandIds:i}=this,{bandCount:s}=this.raster.rasterInfo,a=i?.length?i.some((e=>e>=s)):s>=3;i&&(a||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;const{rasterInfo:n}=this.raster,r=(0,v.getDefaultVariablInfo)(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,i=(0,C.normalizeRendererJSON)({...this.renderer.toJSON(),variableName:r});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(i))return;const s=this._rasterJobHandler.instance;s&&(t.rasterInfo=(0,C.getVariableRasterInfo)(n,r),t.rendererJSON=i,t.bind(),await s.updateSymbolizer(t),this._cachedRendererJson=i)}async applyRenderer(e,t){const n=e&&e.pixelBlock;if(!(null!=n&&n.pixels&&n.pixels.length>0))return null;let r;await this.updateRenderer();const i=this._rasterJobHandler.instance,s=this.bandIds??[];return r=i?await i.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),r}getTileUrl(e,t,n){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${n}`:""}getCompatibleTileInfo(e,t,n=!1){if(!this.loaded||null==t)return null;if(n&&e.equals(this.spatialReference))return this.tileInfo;const r=(0,h.getInfo)(e);return w.default.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(n(this),i.requestAsImageElement){const n=this.getTileUrl(e,t,r);return(0,a.default)(n,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:i.signal}).then((e=>e.data))}const{rasterInfo:s}=this;if(null!=s.multidimensionalInfo&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition){const n=i.tileInfo||s.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,n),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer?.type&&(i={...i,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,n,r={}){return null!=this.rasterInfo.multidimensionalInfo&&null==(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),n=Math.round(n),this.raster.fetchPixels(e,t,n,r))}async identify(e,t={}){const{raster:n,rasterInfo:r}=this;if(null!=r.multidimensionalInfo&&!(r.hasMultidimensionalTranspose&&((0,v.isMultiSliceOrRangeDefinition)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||null!=(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition))return{location:e,value:null};const i=this.multidimensionalSubset?.areaOfInterest;if(i&&!i.contains(e))throw new(0,o.default)("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo?.multidimensionalInfo;if(null==e||"standard-time"!==this.rasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,n=t?.[0]?.variableName;return e.variables.some((e=>e.name===n&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*36e5).toString()}getMultidimensionalSubsetVariables(e){const t=e??this.rasterInfo?.multidimensionalInfo;return(0,v.getSubsetVariablesFromMdInfo)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,v.getDefaultMultidimensionalDefinition)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new(0,b.default);return this._rasterJobHandler.connectionPromise=e.initialize().then((async()=>{n(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){n(this);const{raster:e}=this,t=(0,C.getDefaultInterpolation)(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(e="no"){n(this);const{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=(0,C.getDefaultBandCombination)(t));const r=(0,v.getDefaultVariablInfo)(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===e){const e=(0,C.createDefaultRenderer)(t,{bandIds:this.bandIds,variableName:r}),n=t.statistics,i=n&&n.length>0?n[0]:null,s=i?.max??0,a=i?.min??0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&(s>1e24||a<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e}const i=(0,C.normalizeRendererJSON)({...this.renderer.toJSON(),variableName:r}),s=(0,C.getVariableRasterInfo)(t,r);this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=s):this.symbolizer=new(0,k.default)({rendererJSON:i,rasterInfo:s});const a=this.symbolizer.bind();if(a.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&"raster-colormap"===t.type){const e=(0,C.createDefaultRenderer)(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override")}else if("raster-stretch"===t.type){const e=this.bandIds?.length,n=t.statistics?.length;!t.dynamicRangeAdjustment&&n&&e&&n!==e&&this._configDefaultRenderer("override")}}}else O.warn("imagery-tile-mixin",a.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")}constructor(...e){super(...e),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===e[0]?.raster?.datasetFormat}};function n(e){if(!e.raster||!e.rasterInfo)throw new(0,o.default)("imagery-tile","no raster")}return(0,i._)([(0,u.property)()],t.prototype,"_cachedRendererJson",void 0),(0,i._)([(0,u.property)()],t.prototype,"_cachedRasterFunctionJson",void 0),(0,i._)([(0,u.property)()],t.prototype,"_compatibleFullExtent",void 0),(0,i._)([(0,u.property)()],t.prototype,"_isConstructedFromFunctionRaster",void 0),(0,i._)([(0,u.property)()],t.prototype,"_rasterJobHandler",void 0),(0,i._)([(0,u.property)()],t.prototype,"bandIds",void 0),(0,i._)([(0,u.property)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,i._)([(0,u.property)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,i._)([(0,u.property)()],t.prototype,"interpolation",void 0),(0,i._)([(0,u.property)()],t.prototype,"ioConfig",void 0),(0,i._)([(0,u.property)({type:[y.default],json:{write:!0}})],t.prototype,"multidimensionalDefinition",null),(0,i._)([(0,u.property)({type:g.default,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,i._)([(0,u.property)()],t.prototype,"raster",void 0),(0,i._)([(0,u.property)({type:x.default,json:{name:"renderingRule",write:!0}})],t.prototype,"rasterFunction",null),(0,i._)([(0,u.property)()],t.prototype,"rasterInfo",void 0),(0,i._)([(0,u.property)()],t.prototype,"sourceJSON",void 0),(0,i._)([(0,u.property)({readOnly:!0,type:N.default,json:{read:!1}})],t.prototype,"spatialReference",void 0),(0,i._)([(0,u.property)({type:w.default})],t.prototype,"tileInfo",void 0),(0,i._)([(0,u.property)(m.url)],t.prototype,"url",null),(0,i._)([(0,u.property)({types:s.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:s.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,i._)([(0,f.reader)("renderer")],t.prototype,"readRenderer",null),(0,i._)([(0,u.property)()],t.prototype,"symbolizer",void 0),t=(0,i._)([(0,d.subclass)("esri.layers.ImageryTileMixin")],t),t}})),t.register("1eHoq",(function(n,r){e(n.exports,"default",(function(){return d}));var i,s=t("j6uz9"),a=t("hO0an"),o=t("itGIg"),l=t("hTI69"),u=t("gHCNy"),c=t("qA6zg");let f=i=class extends a.JSONSupport{clone(){return new i({variableName:this.variableName,dimensionName:this.dimensionName,values:(0,o.clone)(this.values),isSlice:this.isSlice})}constructor(e){super(e),this.variableName=null,this.dimensionName=null,this.values=[],this.isSlice=!1}};(0,s._)([(0,l.property)({type:String,json:{write:!0}})],f.prototype,"variableName",void 0),(0,s._)([(0,l.property)({type:String,json:{write:!0}})],f.prototype,"dimensionName",void 0),(0,s._)([(0,l.property)({type:u.types.array(u.types.oneOf([u.types.native(Number),u.types.array(u.types.native(Number))])),json:{write:!0}})],f.prototype,"values",void 0),(0,s._)([(0,l.property)({type:Boolean,json:{write:!0}})],f.prototype,"isSlice",void 0),f=i=(0,s._)([(0,c.subclass)("esri.layers.support.DimensionalDefinition")],f);const d=f})),t.register("49VE6",(function(n,r){e(n.exports,"default",(function(){return d}));var i=t("j6uz9"),s=t("bPmsI"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("6KRcq"),u=t("2wUG0"),c=t("gEU1A");let f=class extends l.default{async open(e){await this.init();const{rasterFunction:t}=this;this.primaryRasters?.rasters?.length?t.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=t.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach((e=>e.rasterJobHandler=this.rasterJobHandler)));const{rasters:n,rasterIds:r}=this.primaryRasters,i=n.map((t=>t.rasterInfo?void 0:t.open(e)));await Promise.all(i);const a=n.map((({rasterInfo:e})=>e)),o=t.bind({rasterInfos:a,rasterIds:r});if(!o.success||0===a.length)throw new(0,s.default)("raster-function:open",`cannot bind the function: ${o.error??""}`);const l="Table"===t.functionName?t:t.functionArguments?.raster;"Table"===l?.functionName&&(t.rasterInfo.attributeTable=c.default.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const u=a[0];this.hasUniqueSourceStorageInfo=1===a.length||a.slice(1).every((e=>this._hasSameStorageInfo(e,u))),this.set("sourceJSON",n[0].sourceJSON),this.set("rasterInfo",t.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,t,n,r={}){const{rasters:i,rasterIds:s}=this.primaryRasters;let a=!1;const{interpolation:o}=r,l=this.rasterFunction.flatWebGLFunctionChain?.hasSurfaceFunction;!r.requestRawData&&"bilinear"!==o&&l&&(a=1===i.length&&!r.skipRasterFunction,r={...r,interpolation:"bilinear",requestRawData:a});const c=i.map((i=>i.fetchPixels(e,t,n,r))),f=await Promise.all(c),d=f.map((e=>e.pixelBlock)),h=a||r.requestRawData?f.map((e=>e.srcTilePixelSize)):null;if(r.skipRasterFunction||d.every((e=>null==e)))return f[0];const p=f.find((e=>null!=e.pixelBlock))?.extent??e,m=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:d,primaryPixelSizes:h,primaryRasterIds:s}):this.rasterFunction.process({extent:p,primaryPixelBlocks:d,primaryPixelSizes:h,primaryRasterIds:s}),{transformGrid:y}=f[0];if(!a||null==m||null==y)return{...f[0],pixelBlock:m};const g={rows:y.spacing[0],cols:y.spacing[1]};let x;return x=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[m],srcMosaicSize:{width:m.width,height:m.height},destDimension:{width:t,height:n},coefs:y.coefficients,sampleSpacing:g,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},r)).pixelBlock:(0,u.approximateTransform)(m,{width:t,height:n},y.coefficients,g,o),{extent:e,srcExtent:f[0].srcExtent,pixelBlock:x}}_hasSameStorageInfo(e,t){const{storageInfo:n,pixelSize:r,spatialReference:i,extent:s}=e,{storageInfo:a,pixelSize:o,spatialReference:l,extent:u}=t;return r.x===o.x&&r.y===o.y&&i.equals(l)&&s.equals(u)&&n.blockHeight===a.blockHeight&&n.blockWidth===a.blockWidth&&n.maximumPyramidLevel===a.maximumPyramidLevel}constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}};(0,i._)([(0,a.property)({type:String,json:{write:!0}})],f.prototype,"datasetFormat",void 0),(0,i._)([(0,a.property)()],f.prototype,"tileType",void 0),(0,i._)([(0,a.property)()],f.prototype,"rasterFunction",void 0),(0,i._)([(0,a.property)()],f.prototype,"primaryRasters",void 0),f=(0,i._)([(0,o.subclass)("esri.layers.support.rasterDatasets.FunctionRaster")],f);const d=f})),t.register("6KRcq",(function(n,r){e(n.exports,"default",(function(){return P}));var i=t("j6uz9");t("ixrNB");var s=t("bYA0c"),a=t("bPmsI"),o=t("hO0an"),l=t("6TszD"),u=t("1CpCt"),c=t("fteFo"),f=t("lHg4e"),d=t("hTI69"),h=t("gHCNy");t("aX9sh"),t("5HTPH");var p=t("qA6zg"),m=t("c8U9w"),y=t("lixLM"),g=t("1eHoq"),x=t("8UmtQ"),b=t("8tfgy"),w=t("hCr3P"),I=t("lEHJu"),v=t("2ia6n"),S=t("8Orx1"),R=t("gAtfu"),T=t("2wUG0"),_=t("2WfpR"),M=t("dqihR"),C=t("2WnyR"),k=t("dZxPT");let F=class extends((0,c.EsriPromiseMixin)(o.JSONSupport)){async init(){const e=(0,_.load)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:w.default.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,_.getWorldWidth)(e.spatialReference);return null!=t&&e.extent.width>=t/2}get _hasNoneOrGCSShiftTransform(){const{transform:e}=this.rasterInfo;return null==e||"gcs-shift"===e.type}set rasterJobHandler(e){this._set("rasterJobHandler",e),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach((t=>t.rasterJobHandler=e))}set url(e){this._set("url",(0,m.sanitizeUrl)(e,l.default.getLogger(this)))}async open(e){throw new(0,a.default)("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,n,r={}){const i=r.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,n,i);return this.fetchPixels(s,i.size[0],i.size[1],r)}async identify(e,t={}){e=(0,h.ensureClass)(k.default,e).clone().normalize();const{multidimensionalDefinition:n,timeExtent:r}=t,{rasterInfo:i}=this,{hasMultidimensionalTranspose:s,multidimensionalInfo:a}=i;let{transposedVariableName:o}=t;const l=null!=a&&s&&(null!=r||(0,I.isMultiSliceOrRangeDefinition)(n));l&&!o&&(o=null!=n&&n.length>0?n[0].variableName??void 0:a.variables[0].name,t={...t,transposedVariableName:o}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:u,extent:c}=i,{datumTransformation:f}=t;let d=(0,_.projectPoint)(e,u,f);if(!c.intersects(d))return{location:d,value:null};if(null!=i.transform){const e=i.transform.inverseTransform(d);if(!i.nativeExtent.intersects(e))return{location:e,value:null};d=e}let p=0;const m=null!=o&&null!=a&&i.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(m)return e.identify(d,t);const{pixelSize:n}=i,r=3,s=n.x*r/2,a=n.y*r/2,o=new(0,C.default)({xmin:d.x-s,xmax:d.x+s,ymin:d.y-a,ymax:d.y+a,spatialReference:u}),l={interpolation:"nearest"},{pixelBlock:c}=await e.fetchPixels(o,r,r,l),{pixelBlock:f}=await this.fetchPixels(o,r,r,l);if(null==c)return{location:d,value:null};const h=Math.floor(r*r*.5),p=!c.mask||c.mask[h]?c.pixels.map((e=>e[h])):null;let y;return null!=f&&(y=!f.mask||f.mask[h]?f.pixels.map((e=>e[h])):void 0),{location:d,value:p,processedValue:y,pyramidLevel:0}}if(!m)if(t.srcResolution)p=(0,_.snapPyramid)(t.srcResolution,i,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(e,t),null==p)return{location:d,value:null};const y=this.identifyPixelLocation(d,p,null,m);if(null===y)return{location:d,value:null};const{row:g,col:x,rowOffset:b,colOffset:w,blockWidth:S}=y,R=o??t.sliceId,T=(0,v.getRasterId)(this.url,R),M=`${p}/${g}/${x}`;let F=(0,v.getBlock)(T,null,M);null==F&&(F=this.fetchRawTile(p,g,x,t),(0,v.putBlock)(T,null,M,F));const P=await F;if(null==P||!P.pixels?.length)return{location:d,value:null};const N=b*S+w;return this._processIdentifyResult(P,{srcLocation:d,position:N,pyramidLevel:p,useTransposedTile:!!m,requestSomeSlices:l,identifyOptions:t})}async fetchPixels(e,t,n,r={}){e=(0,_.snapExtent)(e),r=this._getRequestOptionsWithSliceId(r);const{_hasNoneOrGCSShiftTransform:i}=this;if(r.requestRawData&&i)return this._fetchPixels(e,t,n,r);const s=(0,_.getWorldWidth)(e.spatialReference),a=(0,_.getWorldWrapCount)(e);if(null==s||0===a||1===a&&this._isGlobalWrappableSource&&i)return this._fetchPixels(e,t,n,r);if(a>=3)return{extent:e,pixelBlock:null};const o=[],{xmin:l,xmax:u}=e,c=Math.round(s/(u-l)*t),f=c-Math.round((s/2-l)/(u-l)*t);let d=0;const h=[];for(let i=0;i<=a;i++){const p=new(0,C.default)({xmin:0===i?l:-s/2,xmax:i===a?u-s*i:s/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),m=0===i?c-f:i===a?t-d:c;d+=m,h.push(m);const y=r.disableWrapAround&&i>0?null:this._fetchPixels(p,m,n,r);o.push(y)}const p=(await Promise.all(o)).map((e=>e?.pixelBlock));let m=null;const y={width:t,height:n};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},r)).pixelBlock:(0,T.mosaic)(p,y,{blockWidths:h}),{extent:e,srcExtent:(0,_.projectExtent)(e,this.rasterInfo.spatialReference,r.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,n,r={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const i=await this._fetchRawTiles(e,t,n,r),{nativeExtent:s,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**e,u=a.x*l,c=a.y*l,f=new(0,C.default)({xmin:s.xmin+u*t.x,xmax:s.xmin+u*(t.x+n.width-1),ymin:s.ymax-c*(t.y+n.height-1),ymax:s.ymax-c*t.y,spatialReference:s.spatialReference});if(!i)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:d,mosaicSize:h}=i;if(1===d.length&&null!=d[0]&&d[0].width===n.width&&d[0].height===n.height)return{extent:f,srcExtent:f,pixelBlock:i.pixelBlocks[0]};const p=e>0?o.pyramidBlockWidth:o.blockWidth,m=e>0?o.pyramidBlockHeight:o.blockHeight,y={x:t.x%p,y:t.y%m};let g;return g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:h,destDimension:n,clipOffset:y,clipSize:n,coefs:null,sampleSpacing:null,interpolation:r.interpolation,alignmentInfo:null,blockWidths:null},r)).pixelBlock:(0,T.mosaic)(d,h,{clipOffset:y,clipSize:n}),{extent:f,srcExtent:f,pixelBlock:g}}fetchRawTile(e,t,n,r){throw new(0,a.default)("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,_.projectExtent)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,R.decode)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,n=0){const{customFetchParameters:r}=this.ioConfig,{range:i,query:a,headers:o}=t;n=n??t.retryCount??this.ioConfig.retryCount;const l=i?{Range:`bytes=${i.from}-${i.to}`}:null;try{return await(0,s.default)(e,{...t,query:{...a,...r},headers:{...o,...l}})}catch(r){if(n>0)return n--,this.request(e,t,n);throw r}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return null==t||null==e||0===e.length?null:(0,I.getSliceIndex)(e,t)}getTileExtentFromTileInfo(e,t,n,r){const i=(0,u.unwrapOrThrow)(r.lodAt(e));return this.getTileExtent({x:i.resolution,y:i.resolution},t,n,r.origin,r.spatialReference,r.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:n,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const i=[],s=e.maximumPyramidLevel||0;let a=Math.max(r.x,r.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)i.push(new(0,x.default)({level:s-e,resolution:a,scale:o})),a*=2,o*=2;const l=new(0,k.default)({x:n.xmin,y:n.ymax,spatialReference:t});e.tileInfo=new(0,w.default)({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:i}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,n=512,r){const{width:i,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new(0,k.default)({x:a.xmin,y:a.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(i,s))/Math.LN2-8)));const c=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],r);e.storageInfo=new(0,b.default)({blockWidth:t,blockHeight:n,pyramidBlockWidth:t,pyramidBlockHeight:n,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,n,r,i,s=0,a=2){if(1===i.length&&s>0){i=[...i];let{x:e,y:t}=i[0];for(let n=0;n<s;n++)e*=a,t*=a,i.push({x:e,y:t})}const o=[],{x:l,y:u}=r;for(let r=0;r<i.length;r++){const{x:s,y:a}=i[r];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((u-e.ymax+.1*a)/n/a),maxRow:Math.floor((u-e.ymin-.1*a)/n/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if(null!=n&&n.length)return n[e-1];const i=r**e;return{x:t.x*i,y:t.y*i}}identifyPixelLocation(e,t,n,r){const{spatialReference:i,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:u}=a,c=r&&null!=u?u.tileSize[0]:a.blockWidth,f=r&&null!=u?u.tileSize[1]:a.blockHeight,d=(0,_.projectPoint)(e,i,n);if(!s.intersects(d))return null;if(t<0||t>o)return null;const h=this.getPyramidPixelSize(t),{x:p,y:m}=h,y=(l.y-d.y)/m/f,g=(d.x-l.x)/p/c,x=Math.min(f-1,Math.floor((y-Math.floor(y))*f)),b=Math.min(c-1,Math.floor((g-Math.floor(g))*c));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:x,colOffset:b,blockWidth:c,srcLocation:d}}getTileExtent(e,t,n,r,i,s){const[a,o]=s,l=r.x+n*a*e.x,u=l+a*e.x,c=r.y-t*o*e.y,f=c-o*e.y;return new(0,C.default)({xmin:l,xmax:u,ymin:f,ymax:c,spatialReference:i})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<n||r.minRow>t||r.minCol>n}async _fetchPixels(e,t,n,r={}){let i=(0,_.getWorldWrapCount)(e);if(i>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,n,r),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:u,srcHeight:c,ul:f}=s;if(0===u||0===c)return{extent:e,srcExtent:l,pixelBlock:null};const{rasterInfo:d}=this,h=d.transform,p="gcs-shift"===h?.type,m=null!=(0,_.getWorldWidth)(e.spatialReference);!p&&m||(i=(0,_.getWorldWrapCount)(s.srcExtent,p));const y=await this._fetchRawTiles(a,f,{width:u,height:c,wrapCount:i},r);if(!y)return{extent:e,srcExtent:l,pixelBlock:null};const g=d.storageInfo,x=a>0?g.pyramidBlockWidth:g.blockWidth,b=a>0?g.pyramidBlockHeight:g.blockHeight;let{x:w,y:I}=d.pixelSize;if(a>0){const{pyramidResolutions:e,pyramidScalingFactor:t}=g;if(null!=e&&e[a-1])({x:w,y:I}=e[a-1]);else{const e=t**a;w*=e,I*=e}}const v=d.spatialReference,S=new(0,k.default)({x:w,y:I,spatialReference:v}),R=x===u&&b===c&&f.x%x==0&&f.y%b==0,C=new(0,k.default)({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/n,spatialReference:e.spatialReference}),F=!e.spatialReference.equals(v),P=v.isGeographic?1e-9:1e-4,{datumTransformation:N}=r;if(!F&&R&&1===y.pixelBlocks.length&&x===t&&b===n&&this._isSameResolution(o,C,P))return{extent:e,srcExtent:l,srcTilePixelSize:S,pixelBlock:y.pixelBlocks[0]};const D=m&&null!=(0,_.getWorldWidth)(l.spatialReference)&&this._hasNoneOrGCSShiftTransform,O=r.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");O&&!this.rasterJobHandler&&await(0,_.load)();const E=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:C.toJSON(),datumTransformation:N,rasterTransform:h,hasWrapAround:i>0||D,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:O},r):(0,_.getProjectionOffsetGrid)({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:C,datumTransformation:N,rasterTransform:h,hasWrapAround:i>0||D,isAdaptive:!1,includeGCSGrid:O});let B;const z=!r.requestRawData,H={rows:E.spacing[0],cols:E.spacing[1]},A=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,y.extent.xmin):void 0,{pixelBlocks:J,mosaicSize:L,isPartiallyFilled:V}=y;let W=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:J,srcMosaicSize:L,destDimension:z?{width:t,height:n}:null,coefs:z?E.coefficients:null,sampleSpacing:z?H:null,projectDirections:O,gcsGrid:O?E.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:r.interpolation,alignmentInfo:A,blockWidths:null},r);({pixelBlock:B,localNorthDirections:W}=e)}else{const e=(0,T.mosaic)(J,L,{alignmentInfo:A});B=z?(0,T.approximateTransform)(e,{width:t,height:n},E.coefficients,H,r.interpolation):e,O&&E.gcsGrid&&(W=(0,T.getLocalArithmeticNorthRotations)({width:t,height:n},E.gcsGrid),B=(0,M.convertToLocalDirections)(B,this.rasterInfo.dataType,W))}return r.requestRawData||O?{extent:e,srcExtent:l,srcTilePixelSize:S,pixelBlock:B,transformGrid:E,localNorthDirections:W,isPartiallyFilled:V}:{extent:e,srcExtent:l,srcTilePixelSize:S,pixelBlock:B}}async _fetchRawTiles(e,t,n,r){const{origin:i,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(e);let{x:l,y:u}=t,{width:c,height:f,wrapCount:d}=n;const h=this._getRasterTileAlignmentInfo(e,0);r.buffer&&(l-=r.buffer.cols,u-=r.buffer.rows,c+=2*r.buffer.cols,f+=2*r.buffer.rows);let p=0,m=0,y=0;d&&null!=h&&(({worldColumnCountFromOrigin:m,originColumnOffset:y,rightPadding:p}=h),m*h.blockWidth-p>=l+c&&(p=0));const g=Math.floor(l/a),x=Math.floor(u/o),b=Math.floor((l+c+p-1)/a),w=Math.floor((u+f+p-1)/o),I=s[e];if(!I)return null;const{minRow:v,minCol:S,maxCol:R,maxRow:T}=I;if(0===d&&(w<v||b<S||x>T||g>R))return null;const _=new Array;let M=!1;const k=null==this.ioConfig.allowPartialFill?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let t=x;t<=w;t++)for(let n=g;n<=b;n++){let i=n;if(!r.disableWrapAround&&d&&null!=h&&m<=n&&(i=n-m-y),t>=v&&i>=S&&T>=t&&R>=i){const n=this._fetchRawTile(e,t,i,r);k?_.push(new Promise((e=>{n.then((t=>e(t))).catch((()=>{M=!0,e(null)}))}))):_.push(n)}else _.push(Promise.resolve(null))}if(0===_.length)return null;const F=await Promise.all(_),P={height:(w-x+1)*o,width:(b-g+1)*a},{spatialReference:N}=this.rasterInfo,D=this.getPyramidPixelSize(e),{x:O,y:E}=D;return{extent:new(0,C.default)({xmin:i.x+g*a*O,xmax:i.x+(b+1)*a*O,ymin:i.y-(w+1)*o*E,ymax:i.y-x*o*E,spatialReference:N}),pixelBlocks:F,mosaicSize:P,isPartiallyFilled:M}}_isSameResolution(e,t,n){return Math.abs(e.x-t.x)<n&&Math.abs(e.y-t.y)<n}_fetchRawTile(e,t,n,r){const i=this.rasterInfo.storageInfo.blockBoundary[e];if(!i)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:o,maxRow:l}=i;if(t<s||n<a||t>l||n>o)return Promise.resolve(null);const u=(0,v.getRasterId)(this.url,r.sliceId),c=`${e}/${t}/${n}`;let d=(0,v.getBlock)(u,r.registryId,c);if(null==d){const i=new AbortController;d=this.fetchRawTile(e,t,n,{...r,signal:i.signal}),(0,v.putBlock)(u,r.registryId,c,d,i),d.catch((()=>(0,v.deleteBlock)(u,r.registryId,c)))}return r.signal&&(0,f.onAbort)(r,(()=>{(0,v.decreaseRefCount)(u,r.registryId,c)})),d}_computeMagDirValues(e){const{bandCount:t,dataType:n}=this.rasterInfo;if((2!==t||"vector-magdir"!==n)&&"vector-uv"!==n||2!==e?.length||!e[0]?.length)return null;const r=e[0].length;if("vector-magdir"===n){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[i,s]=e,a=[],o=[];for(let e=0;e<r;e++){const[t,n]=(0,M.uvComponentToVector)([i[e],s[e]]);a.push(t),o.push(n)}return[a,o]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,_.getRasterDatasetAlignmentInfo)(this.rasterInfo)),null==this._rasterTileAlighmentInfo.pyramidsInfo?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,n,r={}){const i={datumTransformation:r.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};r.srcResolution&&(i.srcResolution=r.srcResolution,this._updateSourceDataInfo(e,i));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=i,u=a/t,c=o/n,f=l<s&&u*c>=16,d=l===s&&this._requireTooManySrcTiles(a,o,t,n);if(f||d||0===a||0===o){const a=new(0,k.default)({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/n,spatialReference:e.spatialReference});let o=(0,_.projectResolution)(a,this.rasterInfo.spatialReference,e,i.datumTransformation);const d=!o||r.srcResolution&&o.x+o.y<r.srcResolution.x+r.srcResolution.y;if(f&&r.srcResolution&&d){const e=Math.round(Math.log(Math.max(u,c))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:r.srcResolution.x*t,y:r.srcResolution.y*t}}}o&&(i.srcResolution=o,this._updateSourceDataInfo(e,i))}return this._requireTooManySrcTiles(i.srcWidth,i.srcHeight,t,n)&&(i.srcWidth=0,i.srcHeight=0),i}_requireTooManySrcTiles(e,t,n,r){const{tileInfo:i}=this.rasterInfo.storageInfo;return Math.ceil(e/i.size[0])*Math.ceil(t/i.size[1])>=256||e/n>8||t/r>8}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const{rasterInfo:n}=this,r=n.spatialReference,{srcResolution:i,datumTransformation:s}=t,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=(0,_.snapPyramid)(i,n,this.ioConfig.sampling);if(l)return;let u=t.srcExtent||(0,_.projectExtent)(e,r,s);if(null==u)return;const c=n.transform;c&&(u=c.inverseTransform(u)),t.srcExtent=u;const{x:f,y:d}=n.storageInfo.origin,h=Math.floor((u.xmin-f)/o.x+.1),p=Math.floor((d-u.ymax)/o.y+.1),m=Math.floor((u.xmax-f)/o.x-.1),y=Math.floor((d-u.ymin)/o.y-.1),g=u.width<.1*o.x?0:m-h+1,x=u.height<.1*o.y?0:y-p+1;t.pyramidLevel=a,t.pyramidResolution=o,t.srcWidth=g,t.srcHeight=x,t.ul={x:h,y:p}}_getRequestOptionsWithSliceId(e){return null!=this.rasterInfo.multidimensionalInfo&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:n,position:r,pyramidLevel:i,useTransposedTile:s}=t,a=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[r])return{location:n,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!s){const t=e.pixels.map((e=>e[r])),s={location:n,value:t,pyramidLevel:i},a=this._computeMagDirValues(t.map((e=>[e])));return a?.length&&(s.magdirValue=a.map((e=>e[0]))),s}let l=e.pixels.map((e=>e.slice(r*a,r*a+a))),u=this._computeMagDirValues(l);const{requestSomeSlices:c,identifyOptions:f}=t;let d=(0,I.createSlices)(o,f.transposedVariableName);if(c){const e=(0,I.getSliceIds)(d,f.multidimensionalDefinition,f.timeExtent);l=l.map((t=>e.map((e=>t[e])))),u=u?.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}const h=e.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:e.pixelType};let m;return null!=h&&((0,S.convertNoDataToMask)(p,h),m=p.mask),{location:n,value:null,dataSeries:d.map(((e,t)=>{const n={value:0===m?.[t]?null:l.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new(0,g.default)({...e,isSlice:!0})))};return u?.length&&(n.magdirValue=[u[0][t],u[1][t]]),n})),pyramidLevel:i}}constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}};(0,i._)([(0,d.property)()],F.prototype,"_rasterTileAlighmentInfo",void 0),(0,i._)([(0,d.property)({readOnly:!0})],F.prototype,"_isGlobalWrappableSource",null),(0,i._)([(0,d.property)({readOnly:!0})],F.prototype,"_hasNoneOrGCSShiftTransform",null),(0,i._)([(0,d.property)()],F.prototype,"rasterJobHandler",null),(0,i._)([(0,d.property)(y.url)],F.prototype,"url",null),(0,i._)([(0,d.property)({type:String,json:{write:!0}})],F.prototype,"datasetName",void 0),(0,i._)([(0,d.property)({type:String,json:{write:!0}})],F.prototype,"datasetFormat",void 0),(0,i._)([(0,d.property)()],F.prototype,"hasUniqueSourceStorageInfo",void 0),(0,i._)([(0,d.property)()],F.prototype,"rasterInfo",void 0),(0,i._)([(0,d.property)()],F.prototype,"ioConfig",void 0),(0,i._)([(0,d.property)()],F.prototype,"sourceJSON",void 0),F=(0,i._)([(0,p.subclass)("esri.layers.support.rasterDatasets.BaseRaster")],F);const P=F})),t.register("lEHJu",(function(n,r){e(n.exports,"createSlices",(function(){return o})),e(n.exports,"getSliceIds",(function(){return l})),e(n.exports,"hasExcludedVariableOrDimension",(function(){return h})),e(n.exports,"intersectMultimensionalSubset",(function(){return p})),e(n.exports,"getDefaultVariablInfo",(function(){return m})),e(n.exports,"getDefaultMultidimensionalDefinition",(function(){return y})),e(n.exports,"isMultiSliceOrRangeDefinition",(function(){return g})),e(n.exports,"getSubsetVariablesFromMdInfo",(function(){return x})),e(n.exports,"getSliceIndex",(function(){return I}));var i=t("aX9sh"),s=t("1eHoq");function a(e,t,n){const r=t.shift();if(0===n.length){const e=[];n.push({sliceId:-1,multidimensionalDefinition:e})}const i=n.length;for(let t=0;t<i;t++){const t=n.shift().multidimensionalDefinition;r.values?.forEach((i=>{n.push({sliceId:-1,multidimensionalDefinition:[...t,{variableName:e,dimensionName:r.name,values:[i]}]})}))}t.length&&a(e,t,n)}function o(e,t){const n=[];let r=0;return(t?e.variables.filter((e=>e.name.toLowerCase()===t.toLowerCase())):[...e.variables].sort(((e,t)=>e.name>t.name?1:-1))).forEach((e=>{const t=[],i=[...e.dimensions].sort(((e,t)=>e.name>t.name?-1:1));a(e.name,i,t),t.forEach((e=>{n.push({...e,sliceId:r++})}))})),n}function l(e,t,n){let r=e;if(t&&(t=[...t].sort(((e,t)=>e.dimensionName<t.dimensionName?-1:1))).forEach((({dimensionName:e,values:t,isSlice:n})=>{t.length&&(r=r.filter((r=>{const i=r.multidimensionalDefinition.find((t=>t.dimensionName===e));if(null==i)return!1;const s=i.values[0];return"number"==typeof s?"number"==typeof t[0]?t.includes(s):t.some((e=>e[0]<=s&&e[1]>=s)):"number"==typeof t[0]?t.some((e=>s[0]<=e&&s[1]>=e)):n?t.some((e=>e[0]===s[0]&&e[0]===s[1])):t.some((e=>e[0]>=s[0]&&e[0]<=s[1]||e[1]>=s[0]&&e[1]<=s[1]||e[0]<s[0]&&e[1]>s[1]))})))})),r.length&&n&&null!=n.start&&null!=n.end){const e=n.start.getTime(),t=n.end.getTime(),i=r[0].multidimensionalDefinition.findIndex((e=>"StdTime"===e.dimensionName));i>-1&&(r=r.filter((n=>{const r=n.multidimensionalDefinition[i].values[0];return e<=r&&t>=r})))}return r.map((e=>e.sliceId))}function u(e,t){return Array.isArray(e)?t[0]===t[1]?e[0]===t[0]||e[1]===t[0]:e[0]>=t[0]&&e[0]<=t[1]&&e[1]>=t[0]&&e[1]<=t[1]:e>=t[0]&&e<=t[1]}function c(e,t){return e[0]<=t[0]&&e[1]>=t[0]||e[0]<=t[1]&&e[1]>=t[1]||e[0]>=t[0]&&e[1]<=t[1]}function f(e){return 1===e.length?[e[0],e[0]]:[e[0],e[e.length-1]]}function d(e,t,n){if(!t?.subsetDefinitions?.length)return e;let r;if(n){const{variables:i}=t;if(i.length&&!i.includes(n))return null;const s=t.subsetDefinitions.find((t=>t.dimensionName===e.name&&t.variableName===n));if(!s?.values?.length)return e;r=f(s.values)}else{r=t.dimensions.find((({name:t})=>t===e.name))?.extent}const i=r;if(!i||!i?.length)return e;const s=e.values.filter((e=>u(e,i)));return{...e,extent:[...i],values:s}}function h(e,t,n){if(!t?.subsetDefinitions?.length)return!1;const{variables:r}=t;if(r.length&&e.some((({variableName:e})=>e&&!r.includes(e))))return!0;for(let r=0;r<e.length;r++){const i=e[r],s=t.subsetDefinitions.find((e=>(""===i.variableName||e.variableName===i.variableName)&&e.dimensionName===i.dimensionName));if(s?.values.length){const e=f(s.values);if(i.isSlice||2!==i.values.length||Array.isArray(i.values[0])||i.values[0]===i.values[1]||!n){if(i.values.some((t=>!u(t,e))))return!0}else if(!c(i.values,e))return!0}}return!1}function p(e,t){if(null==e)return{isOutside:!1};const{geometry:n,timeExtent:r,multidimensionalDefinition:i}=t;let a=null;if(null!=r&&(a=function(e,t){const n=e.dimensions.find((({name:e})=>"StdTime"===e));if(null==n||null==t.start&&null==t.end)return t;t=t.clone();const{start:r,end:i}=t.toJSON(),a=r===i?[r]:null!=r&&null!=i?[r,i]:[r??i];return 2===a.length&&n?.extent.length&&(a[0]=Math.max(a[0],n.extent[0]),a[1]=Math.min(a[1],n.extent[1]??n.extent[0]),a[1]<a[0])||h([new(0,s.default)({variableName:"",dimensionName:"StdTime",isSlice:1===a.length,values:a})],e,!0)?null:(t.start=new Date(a[0]),t.end=new Date(a[1]??a[0]),t)}(e,r),null==a))return{isOutside:!0};const{areaOfInterest:o}=e;if(o&&n){const e="point"===n.type?n:"extent"===n.type?n.center:"polygon"===n.type?n.centroid:null;if(e&&!o.contains(e))return{isOutside:!0}}return null!=i&&i.length&&h(i,e,!0)?{isOutside:!0}:{isOutside:!1,intersection:{geometry:n,timeExtent:a,multidimensionalDefinition:i}}}function m(e,t={}){const{multidimensionalInfo:n,keyProperties:r}=e;if(null==n)return null;const{variableName:i,multidimensionalSubset:s,multidimensionalDefinition:a}=t,o=null!=a?a[0]?.variableName:null,l=i||o||r?.DefaultVariable;let{variables:u}=n;return s?.variables?.length&&(u=u.filter((({name:e})=>s.variables.includes(e)))),l?u.find((({name:e})=>e===l))??u[0]:u[0]}function y(e,t={}){const n=m(e,t);if(!n)return null;const r=[],{dimensions:i,name:a}=n;if(0===i.length)return[new(0,s.default)({variableName:a,dimensionName:"",values:[],isSlice:!0})];for(let e=0;e<i.length;e++){const n=d(i[e],t.multidimensionalSubset,a);if(!n)return null;const{values:o,extent:l}=n;let u=o?.[0]??l[0];"stdz"===n.name.toLowerCase()&&!n.hasRanges&&Math.abs(l[1])<=Math.abs(l[0])&&(u=o?.length?o[o.length-1]:l[1]),r.push(new(0,s.default)({variableName:a,dimensionName:n.name,values:[u],isSlice:!t.useRangeForRangedDimensionInfo||!!n.hasRanges}))}return r}function g(e){return!(null==e||!e.length)&&e.some((e=>{if(null==e.values)return!0;const t=e.values.length;return 0===t||t>1||!e.isSlice&&Array.isArray(e.values[0])}))}function x(e,t){if(null==t||null==e)return null;let n=t.variables.map((e=>({...e})));return e?.variables?.length&&(n=n.filter((({name:t})=>e.variables.includes(t))),n.forEach((t=>{t.dimensions=t.dimensions.map((n=>d(n,e,t.name))).filter(i.isSome)}))),n}function b(e,t){const{values:n}=t;if(n?.length){const t=Array.isArray(n[0]),r=Array.isArray(e);return t!==r?-1:t&&r?n.findIndex((t=>t[0]===e[0]&&t[1]===e[1])):n.indexOf(e)}const{extent:r}=t;if(Array.isArray(e)||e<r[0]||e>r[1])return-1;const i=t.interval||1;if("ISO8601"!==t.unit)return Math.round((e-r[0])/i);const s=r[0];let a=-1;switch(t.intervalUnit?.toLowerCase()||"seconds"){case"seconds":a=Math.round((e-s)/1e3/i);break;case"minutes":a=Math.round((e-s)/6e4/i);break;case"hours":a=Math.round((e-s)/36e5/i);break;case"days":a=Math.round((e-s)/864e5/i);break;case"months":{const t=new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear(),n=new Date(s).getUTCMonth(),r=new Date(e).getUTCMonth();a=0===t?r-n:r+11-n+12*(t-1)}break;case"years":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return a}function w(e){let t=e.values?.length;if(t)return t;const{extent:n,unit:r}=e,i=e.interval||1,s=n?n[1]-n[0]:0;if("ISO8601"!==r)return Math.round(s/i);switch(e.intervalUnit?.toLowerCase()??"seconds"){case"seconds":t=Math.round(s/1e3/i);break;case"minutes":t=Math.round(s/6e4/i);break;case"hours":t=Math.round(s/36e5/i);break;case"days":t=Math.round(s/864e5/i);break;case"months":{const e=new Date(n[1]).getUTCFullYear()-new Date(n[0]).getUTCFullYear(),r=new Date(n[0]).getUTCMonth(),i=new Date(n[1]).getUTCMonth();t=0===e?i-r+1:i+11-r+12*(e-1)+1}break;case"years":t=Math.round((new Date(n[1]).getUTCFullYear()-new Date(n[0]).getUTCFullYear())/i);break;case"decades":t=Math.round((new Date(n[1]).getUTCFullYear()-new Date(n[0]).getUTCFullYear())/10/i);break;default:t=0}return t}function I(e,t){let n=0;const r=e[0].variableName,i=[...t.variables].sort(((e,t)=>e.name>t.name?1:-1));for(let t=0;t<i.length;t++){const s=i[t],a=[...s.dimensions].sort(((e,t)=>e.name>t.name?-1:1));if(s.name!==r){n+=a.map((e=>w(e))).reduce(((e,t)=>e*t));continue}const o=a.map((e=>w(e))),l=a.length;for(let t=0;t<l;t++){const r=e.find((e=>e.dimensionName===a[t].name));if(null==r)return null;const i=b(r.values[0],a[t]);if(-1===i)return null;o.shift(),n+=t===l-1?i:i*o.reduce(((e,t)=>e*t))}break}return n}})),t.register("2ia6n",(function(n,r){e(n.exports,"getRasterId",(function(){return u})),e(n.exports,"register",(function(){return c})),e(n.exports,"unregister",(function(){return f})),e(n.exports,"decreaseRefCount",(function(){return d})),e(n.exports,"getBlock",(function(){return h})),e(n.exports,"putBlock",(function(){return p})),e(n.exports,"deleteBlock",(function(){return m})),e(n.exports,"update",(function(){return y})),t("ixrNB");var i=t("230S6"),s=t("2WfpR"),a=t("dZxPT");const o=new Map,l=new(0,i.default);function u(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const n={extent:null,rasterInfo:t,cache:new Map},r=o.get(e);return r?(r.push(n),r.length-1):(o.set(e,[n]),0)}function f(e,t){const n=o.get(e);n&&(n[t]=null,n.some((e=>null!=e))||o.delete(e))}function d(e,t,n){const r=o.get(e);if(!r)return null==t?l.decreaseRefCount(e,n):0;if(null==t||null==r[t])return l.decreaseRefCount(e,n);const i=r[t]?.cache,s=i?.get(n);if(i&&s){if(s.refCount--,0===s.refCount){i.delete(n);for(let e=0;e<r.length;e++)r[e]?.cache.delete(n);s.controller&&s.controller.abort()}return s.refCount}return 0}function h(e,t,n){const r=o.get(e);if(!r)return null==t?l.getBlock(e,n):null;if(null==t||null==r[t]){for(let e=0;e<r.length;e++){const t=r[e]?.cache.get(n);if(t)return t.refCount++,t.block}return l.getBlock(e,n)}const i=r[t]?.cache.get(n);if(i)return i.refCount++,i.block;for(let e=0;e<r.length;e++){if(e===t||!r[e])continue;const i=r[e]?.cache,s=i?.get(n);if(i&&s)return s.refCount++,i.set(n,s),s.block}return null}function p(e,t,n,r,i=null){const s=o.get(e);if(!s)return void(null==t&&l.putBlock(e,n,r,i));if(null==t||null==s[t])return void l.putBlock(e,n,r,i);const a={refCount:1,block:r,isResolved:!1,isRejected:!1,controller:i};r.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),s[t]?.cache.set(n,a)}function m(e,t,n){const r=o.get(e);r?null!=t&&null!=r[t]?r[t]?.cache.delete(n):l.deleteBlock(e,n):null==t&&l.deleteBlock(e,n)}function y(e,t,n,r,i,l,u=null){const c=function(e,t){const n=o.get(e);return n?n[t]??null:null}(e,t);if(!c)return;const f=c.extent,{cache:d,rasterInfo:h}=c;if(f&&f.xmin===n.xmin&&f.xmax===n.xmax&&f.ymin===n.ymin&&f.ymax===n.ymax)return;r=r??0;const p=n.clone().normalize(),{spatialReference:m,transform:y}=h,g=new Set;for(let e=0;e<p.length;e++){const t=p[e];if(t.xmax-t.xmin<=r||t.ymax-t.ymin<=r)continue;let n=(0,s.projectExtent)(t,m,u);null!=y&&(n=y.inverseTransform(n));const o=new(0,a.default)({x:r,y:r,spatialReference:t.spatialReference});if(null==i&&!(i=(0,s.projectResolution)(o,m,t,u)))return;const{pyramidLevel:c,pyramidResolution:f,excessiveReading:d}=(0,s.snapPyramid)(i,h,l||"closest");if(d)return;const{storageInfo:x}=h,{origin:b}=x,w={x:Math.max(0,Math.floor((n.xmin-b.x)/f.x)),y:Math.max(0,Math.floor((b.y-n.ymax)/f.y))},I=Math.ceil((n.xmax-n.xmin)/f.x-.1),v=Math.ceil((n.ymax-n.ymin)/f.y-.1),S=c>0?x.pyramidBlockWidth:x.blockWidth,R=c>0?x.pyramidBlockHeight:x.blockHeight,T=1,_=Math.max(0,Math.floor(w.x/S)-T),M=Math.max(0,Math.floor(w.y/R)-T),C=Math.floor((w.x+I-1)/S)+T,k=Math.floor((w.y+v-1)/R)+T;for(let e=M;e<=k;e++)for(let t=_;t<=C;t++)g.add(`${c}/${e}/${t}`)}d.forEach(((e,t)=>{if(!g.has(t)){const e=d.get(t);(null==e||e.isResolved||e.isRejected)&&d.delete(t)}})),c.extent={xmin:n.xmin,ymin:n.ymin,xmax:n.xmax,ymax:n.ymax}}})),t.register("230S6",(function(t,n){e(t.exports,"default",(function(){return r}));class r{decreaseRefCount(e,t){const n=e+"/"+t,r=this._cachedBlocks;if(r.has(n)){const e=r.get(n);return e.refCount--,e.refCount<=0&&(r.delete(n),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const n=e+"/"+t,r=this._cachedBlocks;if(r.has(n)){const e=r.get(n);return e.ts=Date.now(),e.refCount++,r.delete(n),r.set(n,e),e.block}return null}putBlock(e,t,n,r){const i=this._cachedBlocks,s=e+"/"+t;if(i.has(s)){const e=i.get(s);e.ts=Date.now(),e.refCount++}else i.set(s,{block:n,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(e,t){const n=this._cachedBlocks,r=e+"/"+t;n.has(r)&&n.delete(r)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),n=Date.now();for(let r=0;r<t.length&&t[r][1].ts<=n-this._duration;r++)e.delete(t[r][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let n=0;n<t.length-this._size;n++)e.delete(t[n][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}}})),t.register("8Jx0B",(function(n,r){e(n.exports,"clip",(function(){return o})),e(n.exports,"snapToRaster",(function(){return l}));var i=t("zPXCh"),s=t("2WnyR"),a=t("1wOrp");async function o(e,n,r){if("extent"===r.type)return function(e,t,n){const{width:r,height:i}=e,s=new Uint8Array(r*i),o=t.width/r,l=t.height/i;if(n.width/o<.5||n.height/l<.5)return new(0,a.default)({pixelType:e.pixelType,width:r,height:i,mask:s,pixels:[...e.pixels]});const{xmin:u,xmax:c,ymin:f,ymax:d}=t,{xmin:h,xmax:p,ymin:m,ymax:y}=n,g=Math.max(u,h),x=Math.min(c,p),b=Math.max(f,m),w=Math.min(d,y),I=.5*o,v=.5*l;if(x-g<I||w-b<v||x<u+I||g>c-I||b>d-v||w<f+v)return new(0,a.default)({pixelType:e.pixelType,width:r,height:i,mask:s,pixels:[...e.pixels]});const S=Math.max(0,(g-u)/o),R=Math.min(r,Math.max(0,(x-u)/o)),T=Math.max(0,(d-w)/l),_=Math.min(i,Math.max(0,(d-b)/l)),M=Math.round(S),C=Math.round(R)-1,k=Math.round(T),F=Math.round(_)-1;if(M===C&&S%1>.5&&R%1<.5||k===F&&T%1>.5&&_%1<.5)return new(0,a.default)({pixelType:e.pixelType,width:r,height:i,mask:s,pixels:[...e.pixels]});if(0===M&&0===k&&C===r&&F===i)return e;const P=e.mask;for(let e=k;e<=F;e++)for(let t=M;t<=C;t++){const n=e*r+t;s[n]=P?P[n]:255}return new(0,a.default)({pixelType:e.pixelType,width:r,height:i,mask:s,pixels:[...e.pixels]})}(e,n,r);const{width:i,height:s}=e,o=new Uint8Array(i*s),{contains:l,intersects:u}=await t("7XBMm");return u(n,r)?"polyline"===r.type?function(e,t,n){const{width:r,height:i}=e,s=new Uint8Array(r*i),o=t.width/r,l=t.height/i,{xmin:u,ymax:c}=t,{paths:f}=n,d=e.mask;for(let e=0;e<f.length;e++){const t=f[e];for(let e=0;e<t.length-1;e++){const[n,a]=t[e],[f,h]=t[e+1];let p=Math.floor((c-a)/l),m=Math.floor((c-h)/l);if(m<p){const e=p;p=m,m=e}p=Math.max(0,p),m=Math.min(i-1,m);const y=(f-n)/(h-a);for(let e=p;e<=m;e++){const t=e===p?Math.max(a,h):(i+1-e)*l,c=e===m?Math.min(a,h):t-l;let g=h===a?Math.floor((n-u)/o):Math.floor((y*(t-a)+n-u)/o),x=h===a?Math.floor((f-u)/o):Math.floor((y*(c-a)+n-u)/o);if(x<g){const e=g;g=x,x=e}const b=e*r;g=Math.max(0,g),x=Math.min(r-1,x);for(let e=b+g;e<=b+x;e++)s[e]=d?d[e]:255}}}return new(0,a.default)({pixelType:e.pixelType,width:r,height:i,mask:s,pixels:[...e.pixels]})}(e,n,r):l(r,n)?e:function(e,t,n){if(!e)return e;const{width:r,height:i}=e,s=t.width/r,o=t.height/i,{xmin:l,ymax:u}=t;let c;if("extent"===n.type){const e=(n.xmin-l)/s,t=(n.xmax-l)/s,r=(u-n.ymax)/o,i=(u-n.ymin)/o;c=[[[e,r],[e,i],[t,i],[t,r],[e,r]]]}else c=n.rings.map((e=>e.map((([e,t])=>[(e-l)/s,(u-t)/o]))));const f=document.createElement("canvas");f.width=r,f.height=i;const d=f.getContext("2d");d.fillStyle="#f00",c.forEach((e=>{d.beginPath(),d.moveTo(e[0][0],e[0][1]);for(let t=0;t<e.length;t++)d.lineTo(e[t][0],e[t][1]);d.closePath(),d.fill()}));const h=d.getImageData(0,0,r,i).data,p=e.mask,m=r*i,y=new Uint8Array(m);for(let e=0;e<m;e++)p&&!p[e]||(y[e]=h[4*e+3]>127?255:0);return new(0,a.default)({pixelType:e.pixelType,width:r,height:i,mask:y,maskIsAlpha:!1,pixels:[...e.pixels]})}(e,n,r):new(0,a.default)({pixelType:e.pixelType,width:i,height:s,mask:o,maskIsAlpha:!1,pixels:[...e.pixels]})}function l(e,t,n,r=!0){const{spatialReference:a}=e,{x:o,y:l}=function(e,t){if(e.spatialReference.equals(t))return e;const n=(0,i.getMetersPerUnitForSR)(e.spatialReference),r=(0,i.getMetersPerUnitForSR)(t);if(n===r)return e;const s=n/r;return{x:e.x*s,y:e.y*s}}(n,a);let u,c,f;const d="extent"===t.type?t:t.extent;let{xmin:h,xmax:p,ymax:m,ymin:y}=d;const{xmin:g,ymax:x}=e.extent;return r?(h=g+(h>g?o*Math.round((h-g)/o):0),m=x-(m<x?l*Math.round((x-m)/l):0),p=g+(p>g?o*Math.round((p-g)/o):0),y=x-(y<x?l*Math.round((x-y)/l):0),u=new(0,s.default)({xmin:h,ymax:m,xmax:p,ymin:y,spatialReference:a}),c=Math.round(u.width/o),f=Math.round(u.height/l)):(c=Math.floor((p-h)/o+.8),f=Math.floor((m-y)/l+.8),h=g+(h>g?o*Math.floor((h-g)/o+.1):0),m=x-(m<x?l*Math.floor((x-m)/l+.1):0),p=h+c*o,y=m-f*l,u=new(0,s.default)({xmin:h,ymax:m,xmax:p,ymin:y,spatialReference:a})),{extent:u,width:c,height:f}}})),t.register("7XBMm",(function(e,n){e.exports=Promise.all([import("./"+t("kyEFX").resolve("1QyTU")),import("./"+t("kyEFX").resolve("dtw1j")),import("./"+t("kyEFX").resolve("8U6jL"))]).then((()=>t("4vo8h")))})),t.register("kXLjG",(function(n,r){e(n.exports,"default",(function(){return f}));var i=t("bPmsI"),s=t("kWElp"),a=t("d5nUM"),o=t("1cPdb"),l=t("eBsC6"),u=t("dDnyJ");const c=new Map;c.set("CRF",{desc:"Cloud Raster Format",constructor:s.default}),c.set("MRF",{desc:"Meta Raster Format",constructor:l.default}),c.set("TIFF",{desc:"GeoTIFF",constructor:u.default}),c.set("RasterTileServer",{desc:"Raster Tile Server",constructor:o.default}),c.set("JPG",{desc:"JPG Raster Format",constructor:a.default}),c.set("PNG",{desc:"PNG Raster Format",constructor:a.default}),c.set("GIF",{desc:"GIF Raster Format",constructor:a.default}),c.set("BMP",{desc:"BMP Raster Format",constructor:a.default});class f{static get supportedFormats(){const e=new Set;return c.forEach(((t,n)=>e.add(n))),e}static async open(e){const{url:t,ioConfig:n,sourceJSON:r}=e;let s=e.datasetFormat;null==s&&t.lastIndexOf(".")&&(s=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(s="RasterTileServer");const a={url:t,sourceJSON:r,datasetFormat:s,ioConfig:n??{bandIds:null,sampling:null}};let o,l;if(s&&this.supportedFormats.has(s)){if("CRF"===s&&!n?.enableCRF)throw new(0,i.default)("rasterfactory:open",`cannot open raster: ${t}`);return o=c.get(s).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(s)throw new(0,i.default)("rasterfactory:open","not a supported format "+s);const u=Array.from(c.keys());let f=0;const d=()=>(s=u[f++],s&&("CRF"!==s||n?.enableCRF)?(o=c.get(s).constructor,l=new o(a),l.open({signal:e.signal}).then((()=>l)).catch((()=>d()))):null);return d()}static register(e,t,n){c.has(e.toUpperCase())||c.set(e.toUpperCase(),{desc:t,constructor:n})}}})),t.register("kWElp",(function(n,r){e(n.exports,"default",(function(){return I}));var i=t("j6uz9");t("ixrNB");var s=t("bPmsI"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("8UmtQ"),u=t("cBr0g"),c=t("8tfgy"),f=t("hCr3P"),d=t("6KRcq"),h=t("4yz90"),p=t("kNc4A"),m=t("gEU1A"),y=t("jaaCV"),g=t("2WnyR"),x=t("dZxPT");const b=new Map;b.set("int16","esriFieldTypeSmallInteger"),b.set("int32","esriFieldTypeInteger"),b.set("int64","esriFieldTypeInteger"),b.set("float32","esriFieldTypeSingle"),b.set("float64","esriFieldTypeDouble"),b.set("text","esriFieldTypeString");let w=class extends d.default{async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(t))throw new(0,s.default)("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:n,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",n),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,n,r={}){const{transposeInfo:i}=this.rasterInfo.storageInfo,{transposedVariableName:s}=r,a=!(!i||!s),o=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(o<0)return null;const l=this._buildCacheFilePath(o,t,n,r.multidimensionalDefinition,s),u=this._getIndexRecordFromBundle(t,n,a),c=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!c)return null;const f=new Uint8Array(c.data),d=this._getTileEndAndContentType(f,u);if(0===d.recordSize)return null;const h=await this.request(l,{range:{from:d.position,to:d.position+d.recordSize},responseType:"array-buffer",signal:r.signal});if(!h)return null;const[p,m]=this._getTileSize(a);return this.decodePixelBlock(h.data,{width:p,height:m,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:r,colormap:i,blockWidth:s,blockHeight:a,firstPyramidLevel:o,maximumPyramidLevel:d}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),p=e.extent.spatialReference,m=e.geodataXform?.spatialReference,b=new(0,y.default)(p?.wkid||p?.wkt?p:m);let w=new(0,g.default)({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:b});const I=new(0,x.default)({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:b}),v=Math.round((w.xmax-w.xmin)/I.x),S=Math.round((w.ymax-w.ymin)/I.y),R=this._parseTransform(e.geodataXform),T=R?w:null;R&&(w=R.forwardTransform(w),I.x=(w.xmax-w.xmin)/v,I.y=(w.ymax-w.ymin)/S);const _=e.properties??{},M=e.format.toLowerCase().replace("cache/",""),C=new(0,x.default)(e.origin.x,e.origin.y,b);let k,F,P,N;if(i&&i.colors)for(k=[],F=0;F<i.colors.length;F++)P=i.colors[F],N=i.values?i.values[F]:F,k.push([N,255&P,P<<16>>>24,P<<8>>>24,P>>>24]);const D=e.LODInfos,O=[];for(F=0;F<D.levels.length;F++)O.push(new(0,l.default)({level:D.levels[F],resolution:D.resolutions[F],scale:96/.0254*D.resolutions[F]}));const E=new(0,f.default)({dpi:96,lods:O,format:M,origin:C,size:[s,a],spatialReference:b}),B={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},z=[{maxCol:Math.ceil(v/s)-1,maxRow:Math.ceil(S/a)-1,minCol:0,minRow:0}];let H=2;if(d>0)for(F=0;F<d;F++)z.push({maxCol:Math.ceil(v/H/s)-1,maxRow:Math.ceil(S/H/a)-1,minCol:0,minRow:0}),H*=2;const A=e.mdInfo;let J=null;if(A&&_._yxs){const e=_._yxs;J={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:B,rasterInfo:new(0,u.default)({width:v,height:S,pixelType:t,bandCount:n,extent:w,nativeExtent:T,transform:R,spatialReference:b,pixelSize:I,keyProperties:_,statistics:h,histograms:r,multidimensionalInfo:A,colormap:k,storageInfo:new(0,c.default)({blockWidth:s,blockHeight:a,pyramidBlockWidth:s,pyramidBlockHeight:a,origin:C,tileInfo:E,transposeInfo:J,firstPyramidLevel:o,maximumPyramidLevel:d,blockBoundary:z})})}}_parseTransform(e){if(!(0,p.isTransformSupported)(e))throw new(0,s.default)("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,p.readTransform)(e);if("identity"===t.type)return null;if("polynomial"!==t.type||!t.forwardCoefficients?.length||!t.inverseCoefficients?.length)throw new(0,s.default)("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),n=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,n]);let i;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":b.get(e.type),name:e.name,alias:e.alias||e.name})));const n=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:n})}}return!i&&r[1]&&(i=h.default.parse(r[1]).recordSet),m.default.fromJSON(i)}_buildCacheFilePath(e,t,n,r,i){const s=this._getPackageSize(!!i),a=Math.floor(t/s)*s,o=Math.floor(n/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(o);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,f=r?.[0];if(null==c||!f)return`${this.url}/_alllayers/${u}/${l}.bundle`;let d="_yxs";if(!i){d=c.variables.find((e=>e.name===f.variableName)).dimensions[0].values.indexOf(f.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d="0"+d;d="S"+d}const h=this._getVariableFolderName(i||f.variableName);return`${this.url}/_alllayers/${h}/${d}/${u}/${l}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&null!=t?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:n}=t;return e&&null!=n?n.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,n=!1){const r=this._getPackageSize(n),i=r*(e%r)+t%r;if(i<0)throw new Error("Invalid level / row / col");return 20+i*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const n=e.subarray(t,t+8);let r,i=0;for(r=0;r<5;r++)i|=(255&n[r])<<8*r;const s=0xffffffffff&i;for(i=0,r=5;r<8;r++)i|=(255&n[r])<<8*(r-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}};(0,i._)([(0,a.property)({readOnly:!0})],w.prototype,"storageInfo",void 0),(0,i._)([(0,a.property)({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),w=(0,i._)([(0,o.subclass)("esri.layers.support.rasterDatasets.CloudRaster")],w);const I=w})),t.register("4yz90",(function(n,r){e(n.exports,"default",(function(){return a}));var i=t("15HNn");function s(e){const t=e.fields,n=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return n.forEach((e=>{const t={};for(t[r]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:i,features:a}}class a{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),n=3&t.getUint8(0);if(3!==n)return{header:{version:n},recordSet:null};const r=t.getUint32(4,!0),a=t.getUint16(8,!0),o=t.getUint16(10,!0),l={version:n,recordCount:r,headerByteCount:a,recordByteCount:o};let u=32;const c=[],f=[];let d;if(3===n){for(;13!==t.getUint8(u);)d=String.fromCharCode(t.getUint8(u+11)).trim(),c.push({name:(0,i.bytesToUTF8)(new Uint8Array(e,u,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:t.getUint8(u+16)}),u+=32;if(u+=1,c.length>0)for(;f.length<r&&e.byteLength-u>o;){const n=[];32===t.getUint8(u)?(u+=1,c.forEach((t=>{if("C"===t.type)n.push((0,i.bytesToUTF8)(new Uint8Array(e,u,t.length)).trim());else if("N"===t.type)n.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,u,t.length)).trim(),10));else if("F"===t.type)n.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,u,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,u,t.length)).trim();n.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}u+=t.length})),f.push(n)):u+=o}}return{header:l,fields:c,records:f,recordSet:s({fields:c,records:f})}}}})),t.register("d5nUM",(function(n,r){e(n.exports,"default",(function(){return b}));var i=t("j6uz9");t("ixrNB");var s=t("bPmsI"),a=t("5HTPH"),o=t("lHg4e"),l=t("hTI69");t("gHCNy"),t("aX9sh");var u=t("qA6zg"),c=t("6KRcq"),f=t("aQxnL"),d=t("iWsHx"),h=t("gAtfu"),p=t("e6UOF"),m=t("8mRV3"),y=t("jaaCV"),g=t("2WnyR");let x=class extends c.default{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:n,statistics:r,histograms:i,transform:s}=await this._fetchAuxiliaryData(e);const a=!n;a&&(n=new(0,y.default)({wkid:3857})),i?.length&&null==r&&(r=(0,p.estimateStatisticsFromHistograms)(i));const{width:o,height:l}=t;let u=new(0,g.default)({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:n});const c=s?s.forwardTransform(u):u;let d=!0;if(s){const e=s.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(s=null,u=c)}const h=new(0,f.default)({data:{extent:c,nativeExtent:u,transform:s,pixelBlock:t,statistics:r,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await h.open(),h.data=null,this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,n,r={}){return this._inMemoryRaster.fetchRawTile(e,t,n,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),n=(0,h.getFormat)(t).toUpperCase();if("JPG"!==n&&"PNG"!==n&&"GIF"!==n&&"BMP"!==n)throw new(0,s.default)("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",n);const r=n.toLowerCase(),i="gif"===r||"bmp"===r||!(0,a.default)("ios"),o=await this.decodePixelBlock(t,{format:r,useCanvas:i,hasNoZlibMask:!0});if(null==o)throw new(0,s.default)("image-aux-raster:open","the data cannot be decoded");return o}async _fetchAuxiliaryData(e){const t=e?.signal,n=this.ioConfig.skipExtensions??[],r=n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),i=this.datasetFormat,s="JPG"===i?"jgw":"PNG"===i?"pgw":"BMP"===i?"bpw":null,a=s&&n.includes(s)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+s,{responseType:"text",signal:t}),l=await(0,o.eachAlways)([r,a]);if(t?.aborted)throw(0,o.createAbortError)();const u=(0,d.parsePAMInfo)(l[0].value?.data);if(!u.transform){const e=l[1].value?l[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;u.transform=6===e?.length?new(0,m.default)({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return u}};(0,i._)([(0,l.property)({type:String,json:{write:!0}})],x.prototype,"datasetFormat",void 0),x=(0,i._)([(0,u.subclass)("esri.layers.support.rasterDatasets.ImageAuxRaster")],x);const b=x})),t.register("aQxnL",(function(n,r){e(n.exports,"default",(function(){return y}));var i=t("j6uz9");t("ixrNB");var s=t("bPmsI"),a=t("lHg4e"),o=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var l=t("qA6zg"),u=t("cBr0g"),c=t("6KRcq"),f=t("2wUG0"),d=t("e6UOF"),h=t("2WnyR"),p=t("jaaCV");let m=class extends c.default{async open(e){await this.init();const t=this.data,{pixelBlock:n,statistics:r,histograms:i,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:f,pixelType:d}=n,m=t.extent??new(0,h.default)({xmin:-.5,ymin:.5,xmax:c-.5,ymax:f-.5,spatialReference:new(0,p.default)({wkid:3857})}),y=t.isPseudoSpatialReference??!t.extent,g={x:m.width/c,y:m.height/f},x=new(0,u.default)({width:c,height:f,pixelType:d,extent:m,nativeExtent:o,transform:l,pixelSize:g,spatialReference:m.spatialReference,bandCount:n.pixels.length,keyProperties:a||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(x,512,512),this._set("rasterInfo",x),this.updateTileInfo(),await this._buildInMemoryRaster(n,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,n,r={}){const i=this._pixelBlockTiles.get(`${e}/${t}/${n}`);return Promise.resolve(i)}async _buildInMemoryRaster(e,t,n){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,i=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},n):Promise.resolve((0,f.split)(e,t,r)),o=null!=this.rasterInfo.statistics,l=null!=this.rasterInfo.histograms,u=o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},n):Promise.resolve((0,d.estimateStatisticsHistograms)(e)),c=await(0,a.eachAlways)([i,u]);if(!c[0].value&&c[1].value)throw new(0,s.default)("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,o||(this.rasterInfo.statistics=c[1].value?.statistics),l||(this.rasterInfo.histograms=c[1].value?.histograms)}constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}};(0,i._)([(0,o.property)({type:String,json:{write:!0}})],m.prototype,"datasetFormat",void 0),(0,i._)([(0,o.property)()],m.prototype,"data",void 0),m=(0,i._)([(0,l.subclass)("esri.layers.support.rasterDatasets.InMemoryRaster")],m);const y=m})),t.register("iWsHx",(function(n,r){e(n.exports,"parseSpatialReference",(function(){return u})),e(n.exports,"parsePAMInfo",(function(){return f})),t("ixrNB");var i=t("aX9sh"),s=t("4pGrz"),a=t("8mRV3"),o=t("jaaCV");function l(e,t){if(!e||!t)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(t[r]);return n}function u(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new(0,o.default)({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const n=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),i=r>-1?r:e.indexOf("GEOGCS");if(-1===i)return null;const s=e.slice(i,e.lastIndexOf("]",n)+1).trim(),a=e.slice(n,e.lastIndexOf("]")).trim();t=c(s);const l=new(0,o.default)(t?{wkid:t}:{wkt:s}),u=c(a);return u&&(l.vcsWkid=u),l}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=c(e),new(0,o.default)(0!==t?{wkid:t}:{wkt:e})):null}function c(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=t[t.length-1].split(","),r=n[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function f(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if((0,s.isSameTagIgnoreNS)(e,"SRS")){if(!t.spatialReference){const n=(0,s.getElementValue)(e);t.spatialReference=u(n)}}else if((0,s.isSameTagIgnoreNS)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:n,transform:r}=function(e){const t=(0,s.getElement)(e,"GeodataXform"),n=u((0,s.getElementNumericValue)(t,"SpatialReference/WKID")||(0,s.getElementValue)(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=(0,s.getElementNumericValue)(t,"PolynomialOrder")??1,i=(0,s.getElementNumericValues)(t,"CoeffX/Double"),o=(0,s.getElementNumericValues)(t,"CoeffY/Double"),c=(0,s.getElementNumericValues)(t,"InverseCoeffX/Double"),f=(0,s.getElementNumericValues)(t,"InverseCoeffY/Double"),d=l(i,o),h=l(c,f);return{spatialReference:n,transform:d&&h&&d.length&&h.length?new(0,a.default)({spatialReference:n,polynomialOrder:r,forwardCoefficients:d,inverseCoefficients:h}):null}}(e);t.transform=r,t.spatialReference||(t.spatialReference=n)}else(0,s.getElements)(e,"MDI").forEach((e=>t.metadata[e.getAttribute("key")]=(0,s.getElementValue)(e)));else if((0,s.isSameTagIgnoreNS)(e,"PAMRasterBand")){const n=function(e){const t=(0,s.getElementNumericValue)(e,"NoDataValue"),n=(0,s.getElement)(e,"Histograms/HistItem"),r=(0,s.getElementNumericValue)(n,"HistMin"),i=(0,s.getElementNumericValue)(n,"HistMax"),a=(0,s.getElementNumericValue)(n,"BucketCount"),o=(0,s.getElementValue)(n,"HistCounts")?.split("|").map((e=>Number(e)));let l,u,c,f;(0,s.getElements)(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=t;break;case"STATISTICS_MAXIMUM":u=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":f=t}}));const d=(0,s.getElementNumericValue)(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:o?.length&&null!=r&&null!=i?{min:r,max:i,size:a||o.length,counts:o}:null,sourceBandIndex:d,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:f}:null}}(e);null!=n.sourceBandIndex&&null==t.rasterBands[n.sourceBandIndex]?t.rasterBands[n.sourceBandIndex]=n:t.rasterBands.push(n)}}));const n=t.rasterBands;if(n.length){const e=!!n[0].statistics;t.statistics=e?n.map((e=>e.statistics)).filter(i.isSome):null;const r=!!n[0].histogram;t.histograms=r?n.map((e=>e.histogram)).filter(i.isSome):null}return t}})),t.register("4pGrz",(function(t,n){function r(e,t){if(!e||!t)return[];let n=t;t.includes("/")?(n=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=[];if(t){const s=r(e,n);for(let e=0;e<s.length;e++)r(s[e],t).forEach((e=>i.push(e)));return i}const s=e.getElementsByTagNameNS("*",n);if(!s||0===s.length)return[];for(let e=0;e<s.length;e++)i.push(s[e]||s.item(e));return i}function i(e,t){if(!e||!t)return null;let n=t;t.includes("/")?(n=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=r(e,n);return s.length>0?t?i(s[0],t):s[0]:null}function s(e,t=null){const n=t?i(e,t):e;let r;return n?(r=n.textContent||n.nodeValue,r?r.trim():null):null}function a(e,t){return function(e,t){const n=r(e,t),i=[];let s;for(let e=0;e<n.length;e++)s=n[e].textContent||n[e].nodeValue,s&&(s=s.trim(),""!==s&&i.push(s));return i}(e,t).map((e=>Number(e)))}function o(e,t){const n=s(e,t);return Number(n)}function l(e,t){const n=e?.nodeName?.toLowerCase(),r=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===r}e(t.exports,"getElements",(function(){return r})),e(t.exports,"getElement",(function(){return i})),e(t.exports,"getElementValue",(function(){return s})),e(t.exports,"getElementNumericValues",(function(){return a})),e(t.exports,"getElementNumericValue",(function(){return o})),e(t.exports,"isSameTagIgnoreNS",(function(){return l}))})),t.register("1cPdb",(function(n,r){e(n.exports,"default",(function(){return v}));var i=t("j6uz9");t("ixrNB");var s=t("bPmsI"),a=t("1CpCt"),o=t("7dRCe"),l=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var u=t("qA6zg"),c=t("cBr0g"),f=t("8tfgy"),d=t("hCr3P"),h=t("iBRqv"),p=t("6KRcq"),m=t("2wUG0"),y=t("5uezt"),g=t("ctHSu"),x=t("jaaCV"),b=t("dZxPT"),w=t("2WnyR");let I=class extends p.default{async open(e){await this.init();const t=e&&e.signal,n=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});n.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=n.data;if(this.sourceJSON=r,!r)throw new(0,s.default)("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new(0,s.default)("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=r.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(r.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name?.slice(r.name.indexOf("/")+1)??"";const i=await this._fetchRasterInfo({signal:t});if(null==i)throw new(0,s.default)("image-server-raster:open","cannot initialize image service");const l="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:n,maxScale:r,minLOD:i,maxLOD:s}=t;if(null!=i&&null!=s)return d.default.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=i&&e<=s))});if(0!==n&&0!==r){const t=e=>Math.round(1e4*e)/1e4,i=n?t(n):1/0,s=r?t(r):-1/0;return d.default.fromJSON({...e,lods:e.lods.filter((e=>{const n=t(e.scale);return n<=i&&n>=s}))})}return d.default.fromJSON(e)}(r.tileInfo,r):d.default.fromJSON(r.tileInfo);(0,a.assertIsSome)(l);const[u,c]=this._computeMinMaxLOD(i,l),{extent:p,pixelSize:m}=i,y=.5/i.width*m.x,g=Math.max(m.x,m.y),{lods:x}=l;("Map"!==this.tileType&&0!==r.maxScale||Math.abs(m.x-m.y)>y||!x.some((e=>Math.abs(e.resolution-g)<y)))&&(m.x=m.y=u.resolution,i.width=Math.ceil((p.xmax-p.xmin)/m.x-.1),i.height=Math.ceil((p.ymax-p.ymin)/m.y-.1));const b=u.level-c.level,[w,I]=l.size,v=[],S=[];x.forEach(((e,t)=>{e.level>=c.level&&e.level<=u.level&&v.push({x:e.resolution,y:e.resolution}),t<x.length-1&&S.push(Math.round(10*e.resolution/x[t+1].resolution)/10)})),v.sort(((e,t)=>e.x-t.x));const R=this.computeBlockBoundary(p,w,I,l.origin,v,b),T=v.length>1?v.slice(1):null;let _;r.transposeInfo&&(_={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:i.keyProperties?._yxs.PacketSize??0});const M=S.length<=1||S.length>=3&&S.slice(0,S.length-1).every((e=>e===S[0]))?S[0]??2:Math.round(10/(c.resolution/u.resolution)**(-1/b))/10;if(i.storageInfo=new(0,f.default)({blockWidth:l.size[0],blockHeight:l.size[1],pyramidBlockWidth:l.size[0],pyramidBlockHeight:l.size[1],pyramidResolutions:T,pyramidScalingFactor:M,compression:l.format,origin:l.origin,firstPyramidLevel:1,maximumPyramidLevel:b,tileInfo:l,transposeInfo:_,blockBoundary:R}),this._fixGCSShift(i),this._set("rasterInfo",i),r.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:i.storageInfo.tileInfo,parsedUrl:(0,o.urlToObject)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new(0,h.TilemapCache)({layer:e})}}async fetchRawTile(e,t,n,r={}){const{storageInfo:i,extent:s}=this.rasterInfo,{transposeInfo:a}=i,o=null!=a&&!!r.transposedVariableName;if(this._slices&&!o&&null==r.sliceId)return null;const l=o?0:i.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${l}/${t}/${n}`,c=this._slices?o?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:f}=await this.request(u,{query:c,responseType:"array-buffer",signal:r.signal});if(!f)return null;const d=o?a.tileSize:i.tileInfo.size,h=await this.decodePixelBlock(f,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==h)return null;const p=i.blockBoundary[e];if("jpg"!==i.compression||n>p.minCol&&n<p.maxCol&&t>p.minRow&&t<p.maxRow)return h;const{origin:y,blockWidth:g,blockHeight:x}=i,{x:b,y:w}=this.getPyramidPixelSize(e),I=Math.round((s.xmin-y.x)/b)%g,v=Math.round((s.xmax-y.x)/b)%g||g,S=Math.round((y.y-s.ymax)/w)%x,R=Math.round((y.y-s.ymin)/w)%x||x,T=n===p.minCol?I:0,_=t===p.minRow?S:0,M=n===p.maxCol?v:g,C=t===p.maxRow?R:x;return(0,m.setValidBoundary)(h,{x:T,y:_},{width:M-T,height:C-_}),h}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let e=0;e<this._slices.length;e++){const n=this._slices[e].multidimensionalDefinition;if(n.length===t.length&&!n.some((e=>{const n=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!n||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const n=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),i=await Promise.all([n,r]);return i[0]&&i[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:i[0]||null,histograms:i[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let n=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===n)return null;let r=0;const{maximumPyramidLevel:i}=this.rasterInfo.storageInfo;let s=i-r+this._levelOffset;const a=n.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,n.row,n.col,t))break}catch{}if(s--,r++,n=this.identifyPixelLocation(a,r,t.datumTransformation),null===n)return null}return-1===s||null==n?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,n=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),r=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),i=x.default.fromJSON(t.spatialReference||e.spatialReference),s=new(0,b.default)({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:i});return new(0,c.default)({width:n,height:r,bandCount:3,extent:w.default.fromJSON(e),spatialReference:i,pixelSize:s,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:n}=e,r=(0,g.fetchServiceRasterInfo)(this.url,this.sourceJSON,{signal:n,query:this.ioConfig.customFetchParameters}),i=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:n}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,s=await Promise.all([r,i]);return this._slices=s[1],s[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:n}=e;t.xmin>-1&&t.xmax>181&&n?.wkid&&n.isGeographic&&(e.nativeExtent=e.extent,e.transform=new(0,y.default),e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:n}=e,r=.5/e.width*n.x,{lods:i}=t,s=t.lodAt(Math.max.apply(null,i.map((e=>e.level)))),a=t.lodAt(Math.min.apply(null,i.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=i[0].level,[s,a];if("Raster"===o)return[i.find((e=>e.resolution===n.x))??s,a];const{minScale:l,maxScale:u}=this.sourceJSON;let c=s;u>0&&(c=i.find((e=>Math.abs(e.scale-u)<r)),c||(c=i.filter((e=>e.scale>u)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??s));let f=a;return l>0&&(f=i.find((e=>Math.abs(e.scale-l)<r))??a,this._levelOffset=f.level-a.level),[c,f]}constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}};(0,i._)([(0,l.property)({type:String,json:{write:!0}})],I.prototype,"datasetFormat",void 0),(0,i._)([(0,l.property)()],I.prototype,"tileType",void 0),I=(0,i._)([(0,u.subclass)("esri.layers.support.rasterDatasets.ImageServerRaster")],I);const v=I})),t.register("eBsC6",(function(n,r){e(n.exports,"default",(function(){return v}));var i=t("j6uz9");t("ixrNB");var s=t("bPmsI"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("1wOrp"),u=t("cBr0g"),c=t("8tfgy"),f=t("6KRcq"),d=t("iWsHx"),h=t("4pGrz"),p=t("akKlB"),m=t("e6UOF"),y=t("jaaCV"),g=t("2WnyR"),x=t("dZxPT");const b=new Map;b.set("Int8","s8"),b.set("UInt8","u8"),b.set("Int16","s16"),b.set("UInt16","u16"),b.set("Int32","s32"),b.set("UInt32","u32"),b.set("Float32","f32"),b.set("Float64","f32"),b.set("Double64","f32");const w=new Map;w.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),w.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),w.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),w.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let I=class extends f.default{async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,n=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:r,files:i}=this._parseHeader(n.data);if(-1===this.ioConfig.skipExtensions?.indexOf("aux.xml")){const t=await this._fetchAuxiliaryData(e);null!=t&&(r.statistics=t.statistics??r.statistics,r.histograms=t.histograms,t.histograms&&null==r.statistics&&(r.statistics=(0,m.estimateStatisticsFromHistograms)(t.histograms)))}this._set("rasterInfo",r),this._files=i;const s=await this.request(i.index,{responseType:"array-buffer",signal:t});this._storageIndex=this._parseIndex(s.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:u,height:c}=this.rasterInfo,f=[],d=this._getBandSegmentCount();let h=0,p=-1;for(;h<this._storageIndex.length;){p++;const e=Math.ceil(u/a/l**p)-1,t=Math.ceil(c/o/l**p)-1;h+=(e+1)*(t+1)*d*4,f.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(e,t,n,r={}){const{blockWidth:i,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<n||o.minRow>t||o.minCol>n)return null;const{bandCount:u,pixelType:c}=this.rasterInfo,{ranges:f,actualTileWidth:d,actualTileHeight:h}=this._getTileLocation(e,t,n);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const e=new Uint8Array(i*s);return new(0,l.default)({width:i,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<m;g++)p&&!p.includes(g)||y.push(this.request(this._files.data,{range:{from:f[g].from,to:f[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),b=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),I=new Uint8Array(b);let v=0;for(g=0;g<m;g++)I.set(new Uint8Array(x[g].data),v),v+=x[g].data.byteLength;const S=w.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(I.buffer,{width:i,height:s,format:S,planes:p?.length||u,pixelType:c});if(null==R)return null;let{noDataValue:T}=this.rasterInfo;if(null!=T&&"lerc"!==S&&!R.mask&&(T=T[0],null!=T)){const e=R.width*R.height,t=new Uint8Array(e);if(Math.abs(T)>1e24)for(g=0;g<e;g++)Math.abs((R.pixels[0][g]-T)/T)>1e-6&&(t[g]=1);else for(g=0;g<e;g++)R.pixels[0][g]!==T&&(t[g]=1);R.mask=t}let _=0,M=0;if(d!==i||h!==s){let e=R.mask;if(e)for(g=0;g<s;g++)if(M=g*i,g<h)for(_=d;_<i;_++)e[M+_]=0;else for(_=0;_<i;_++)e[M+_]=0;else for(e=new Uint8Array(i*s),R.mask=e,g=0;g<h;g++)for(M=g*i,_=0;_<d;_++)e[M+_]=1}return R}_parseIndex(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,n,r,i,s,a;if(p.isPlatformLittleEndian){for(n=new Uint8Array(e),i=new ArrayBuffer(e.byteLength),r=new Uint8Array(i),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)r[4*s+a]=n[4*s+3-a];t=new Uint32Array(i)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return w.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,n){const{blockWidth:r,blockHeight:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let u,c,f,d=0,h=0;for(f=0;f<e;f++)h=s**f,u=Math.ceil(a/r/h),c=Math.ceil(o/i/h),d+=u*c;h=s**e,u=Math.ceil(a/r/h),c=Math.ceil(o/i/h),d+=t*u+n,d*=4*l;const p=this._storageIndex.subarray(d,d+4*l);let m=0,y=0;const g=[];for(let e=0;e<l;e++)m=p[4*e]*2**32+p[4*e+1],y=m+p[4*e+2]*2**32+p[4*e+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:n<u-1?r:Math.ceil(a/h)-r*(u-1),actualTileHeight:t<c-1?i:Math.ceil(o/h)-i*(c-1)}}_parseHeader(e){const t=(0,h.getElement)(e,"MRF_META/Raster");if(!t)throw new(0,s.default)("mrf:open","not a valid MRF format");const n=(0,h.getElement)(t,"Size"),r=parseInt(n.getAttribute("x"),10),i=parseInt(n.getAttribute("y"),10),a=parseInt(n.getAttribute("c"),10),o=((0,h.getElementValue)(t,"Compression")||"none").toLowerCase();if(!w.has(o))throw new(0,s.default)("mrf:open","currently does not support compression "+o);const l=(0,h.getElementValue)(t,"DataType")||"UInt8",f=b.get(l);if(null==f)throw new(0,s.default)("mrf:open","currently does not support pixel type "+l);const p=(0,h.getElement)(t,"PageSize"),m=parseInt(p.getAttribute("x"),10),I=parseInt(p.getAttribute("y"),10),v=(0,h.getElement)(t,"DataValues");let S,R;if(v&&(R=v.getAttribute("NoData"),null!=R&&(S=R.trim().split(" ").map((e=>parseFloat(e))))),(0,h.getElement)(e,"MRF_META/CachedSource"))throw new(0,s.default)("mrf:open","currently does not support MRF referencing other data files");const T=(0,h.getElement)(e,"MRF_META/GeoTags"),_=(0,h.getElement)(T,"BoundingBox");let M,C=!1;if(null!=_){const e=parseFloat(_.getAttribute("minx")),t=parseFloat(_.getAttribute("miny")),n=parseFloat(_.getAttribute("maxx")),r=parseFloat(_.getAttribute("maxy")),i=(0,h.getElementValue)(T,"Projection")||"";let s=y.default.WGS84;if("LOCAL_CS[]"!==i)if(i.toLowerCase().startsWith("epsg:")){const e=Number(i.slice(5));isNaN(e)||0===e||(s=new(0,y.default)({wkid:e}))}else s=(0,d.parseSpatialReference)(i)??y.default.WGS84;else C=!0,s=new(0,y.default)({wkid:3857});M=new(0,g.default)(e,t,n,r),M.spatialReference=s}else C=!0,M=new(0,g.default)({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:new(0,y.default)({wkid:3857})});const k=(0,h.getElement)(e,"MRF_META/Rsets"),F=parseInt(k&&k.getAttribute("scale")||"2",10),P=M.spatialReference,N=new(0,c.default)({origin:new(0,x.default)({x:M.xmin,y:M.ymax,spatialReference:P}),blockWidth:m,blockHeight:I,pyramidBlockWidth:m,pyramidBlockHeight:I,compression:o,pyramidScalingFactor:F}),D=new(0,x.default)({x:M.width/r,y:M.height/i,spatialReference:P}),O=new(0,u.default)({width:r,height:i,extent:M,isPseudoSpatialReference:C,spatialReference:P,bandCount:a,pixelType:f,pixelSize:D,noDataValue:S,storageInfo:N}),E=(0,h.getElementValue)(e,"datafile"),B=(0,h.getElementValue)(e,"IndexFile");return{rasterInfo:O,files:{mrf:this.url,index:B||this.url.replace(".mrf",".idx"),data:E||this.url.replace(".mrf",w.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return(0,d.parsePAMInfo)(t)}catch{return null}}constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}};(0,i._)([(0,a.property)()],I.prototype,"_files",void 0),(0,i._)([(0,a.property)()],I.prototype,"_storageIndex",void 0),(0,i._)([(0,a.property)({type:String,json:{write:!0}})],I.prototype,"datasetFormat",void 0),I=(0,i._)([(0,o.subclass)("esri.layers.support.rasterIO.MRFRaster")],I);const v=I})),t.register("dDnyJ",(function(n,r){e(n.exports,"default",(function(){return T}));var i=t("j6uz9");t("ixrNB");var s=t("aX9sh"),a=t("bPmsI"),o=t("hTI69");t("gHCNy"),t("5HTPH");var l=t("qA6zg"),u=t("cBr0g"),c=t("8tfgy"),f=t("6KRcq"),d=t("4yz90"),h=t("iWsHx"),p=t("apDAM"),m=t("iPOpR"),y=t("e6UOF"),g=t("8mRV3"),x=t("gEU1A"),b=t("jaaCV"),w=t("2WnyR"),I=t("dZxPT");const v=(e,t)=>e.get(t)?.values,S=(e,t)=>e.get(t)?.values?.[0];let R=class extends f.default{async open(e){await this.init();const t=e?e.signal:null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!n)throw new(0,a.default)("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:r,firstIFDPos:i,isBigTiff:s}=(0,p.parseSignature)(n),o=[];await this._readIFDs(o,n,r,i,0,s?8:4,t);const{imageInfo:l,rasterInfo:u}=this._parseIFDs(o),c=(0,p.getPyramidIFDs)(o),f=(0,p.getMaskIFDs)(o);if(this._headerInfo={littleEndian:r,isBigTiff:s,ifds:o,pyramidIFDs:c,maskIFDs:f,...l},this._set("rasterInfo",u),!l.isSupported)throw new(0,a.default)("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new(0,a.default)("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const d=o[0].get("PREDICTOR")?.values?.[0],h=o[0].get("SAMPLEFORMAT")?.values?.[0];if(3===h&&2===d)throw new(0,a.default)("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:m=[]}=this.ioConfig;if(!m.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,u)}m.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||(u.attributeTable=await this._fetchAuxiliaryTable(e),null!=u.attributeTable&&(u.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(e,t,n,r={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,n))return null;const i=await this._fetchRawTiffTile(e,t,n,!1,r);if(null!=i&&this._headerInfo.hasMaskBand){const s=await this._fetchRawTiffTile(e,t,n,!0,r);null!=s&&s.pixels[0]instanceof Uint8Array&&(i.mask=s.pixels[0])}return i}_parseIFDs(e){const t=(0,p.getImageInfo)(e),{width:n,height:r,tileWidth:i,tileHeight:s,planes:a,pixelType:o,compression:l,firstPyramidLevel:f,maximumPyramidLevel:d,pyramidBlockWidth:m,pyramidBlockHeight:y,tileBoundary:x,affine:R,metadata:T}=t,_=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let M=(0,h.parseSpatialReference)(_),C=!!t.isPseudoGeographic;null==M&&(C=!0,M=new(0,b.default)({wkid:3857}));const k=new(0,w.default)({...t.extent,spatialReference:M}),F=new(0,I.default)(k?{x:k.xmin,y:k.ymax,spatialReference:M}:{x:0,y:0}),P=new(0,c.default)({blockWidth:i,blockHeight:s,pyramidBlockWidth:m,pyramidBlockHeight:y,compression:l,origin:F,firstPyramidLevel:f,maximumPyramidLevel:d,blockBoundary:x}),N=new(0,I.default)({x:(k.xmax-k.xmin)/n,y:(k.ymax-k.ymin)/r,spatialReference:M}),D=T?{BandProperties:T.bandProperties,DataType:T.dataType}:{};let O=null;const E=S(e[0],"PHOTOMETRICINTERPRETATION"),B=v(e[0],"COLORMAP");if(E<=3&&B?.length>3&&B.length%3==0){O=[];const e=B.length/3;for(let t=0;t<e;t++)O.push([t,B[t]>>>8,B[t+e]>>>8,B[t+2*e]>>>8])}const z=new(0,u.default)({width:n,height:r,bandCount:a,pixelType:o,pixelSize:N,storageInfo:P,spatialReference:M,isPseudoSpatialReference:C,keyProperties:D,extent:k,colormap:O,statistics:T?T.statistics:null});return R?.length&&(z.nativeExtent=new(0,w.default)({xmin:-.5,ymin:.5-r,xmax:n-.5,ymax:.5,spatialReference:M}),z.transform=new(0,g.default)({polynomialOrder:1,forwardCoefficients:[R[2]+R[0]/2,R[5]-R[3]/2,R[0],R[3],-R[1],-R[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new(0,I.default)({x:(k.xmax-k.xmin)/n,y:(k.ymax-k.ymin)/r,spatialReference:M}),P.origin.x=-.5,P.origin.y=.5),{imageInfo:t,rasterInfo:z}}_processPAMInfo(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,y.estimateStatisticsFromHistograms)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const n=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new(0,I.default)({x:(n.xmax-n.xmin)/t.width,y:(n.ymax-n.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=n}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}async _readIFDs(e,t,n,r,i,s=4,a){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+i,to:r+i+this._bufferSize},responseType:"array-buffer",signal:a})).data,i=r+i,r=0);const o=await this._readIFD(t,n,r,i,m.default.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,n,o.nextIFD-i,i,s,a)}async _readIFD(e,t,n,r,i=m.default.TIFF_TAGS,a=4,o){if(!e)return null;const l=(0,p.parseIFD)(e,t,n,r,i,a);if(l.success){const n=[];if(l.ifd?.forEach((e=>{e.values||n.push(e)})),n.length>0){const i=n.map((e=>e.offlineOffsetSize)).filter(s.isSome),a=Math.min.apply(null,i.map((e=>e[0])));if(Math.min.apply(null,i.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:i}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:o});e=i,r=a,n.forEach((n=>(0,p.parseFieldValues)(e,t,n,r)))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const n=l.ifd.get("GEOKEYDIRECTORY"),i=n?.values;if(i&&i.length>4){const s=i[0]+"."+i[1]+"."+i[2],a=await this._readIFD(e,t,n.valueOffset+6-r,r,m.default.GEO_KEYS,2,o);n.data=a.ifd,n.data&&n.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==e.byteLength){const n=await this.request(this.url,{range:{from:r,to:r+l.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=n.data).byteLength<l.requiredBufferSize?null:this._readIFD(e,t,0,r,m.default.TIFF_TAGS,4,o)}}async _fetchRawTiffTile(e,t,n,r,i={}){const s=this._getTileLocation(e,t,n,r);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=s,c=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:i.signal}))),f=await Promise.all(c),d=f.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===f.length?f[0].data:new ArrayBuffer(d),p=[0],m=[0];if(f.length>1){const e=new Uint8Array(h);for(let t=0,n=0;t<f.length;t++){const r=f[t].data;e.set(new Uint8Array(r),n),p[t]=n,n+=r.byteLength,m[t]=r.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let b,w,I;if(o!==y||l!==g){let e=x.mask;if(e)for(b=0;b<g;b++)if(I=b*y,b<l)for(w=o;w<y;w++)e[I+w]=0;else for(w=0;w<y;w++)e[I+w]=0;else for(e=new Uint8Array(y*g),x.mask=e,b=0;b<l;b++)for(I=b*y,w=0;w<o;w++)e[I+w]=1}return x}_getTileLocation(e,t,n,r=!1){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),{_headerInfo:o}=this;if(!o)return null;const l=r?o.maskIFDs[a]:0===a?o?.ifds[0]:o?.pyramidIFDs[a-1];if(!l)return null;const u=(0,p.isBSQConfig)(l,o),c=v(l,"TILEOFFSETS");if(void 0===c)return null;const f=v(l,"TILEBYTECOUNTS"),{minRow:d,minCol:h,maxRow:m,maxCol:y}=s[a];if(t>m||n>y||t<d||n<h)return null;const g=S(l,"IMAGEWIDTH"),x=S(l,"IMAGELENGTH"),b=S(l,"TILEWIDTH"),w=S(l,"TILELENGTH"),I=[];if(u){const{bandCount:e}=this.rasterInfo;for(let r=0;r<e;r++){const e=r*(m+1)*(y+1)+t*(y+1)+n;I[r]={from:c[e],to:c[e]+f[e]-1}}}else{const e=t*(y+1)+n;I.push({from:c[e],to:c[e]+f[e]-1})}for(let e=0;e<I.length;e++)if(null==I[e].from||!I[e].to)return null;return{ranges:I,ifd:l,actualTileWidth:n===y&&g%b||b,actualTileHeight:t===m&&x%w||w}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return(0,h.parsePAMInfo)(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),n=d.default.parse(t);return n?.recordSet?x.default.fromJSON(n.recordSet):null}catch{return null}}constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}};(0,i._)([(0,o.property)()],R.prototype,"_files",void 0),(0,i._)([(0,o.property)()],R.prototype,"_headerInfo",void 0),(0,i._)([(0,o.property)()],R.prototype,"_bufferSize",void 0),(0,i._)([(0,o.property)({type:String,json:{write:!0}})],R.prototype,"datasetFormat",void 0),R=(0,i._)([(0,l.subclass)("esri.layers.support.rasterDatasets.TIFFRaster")],R);const T=R})),t.register("kTdXv",(function(n,r){e(n.exports,"default",(function(){return h}));var i=t("j6uz9"),s=t("4jlRt"),a=t("hO0an"),o=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var l=t("8gk9b"),u=t("qA6zg");const c=new(0,s.JSONMap)({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),f=new(0,s.JSONMap)({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let d=class extends a.JSONSupport{set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}constructor(e){super(e),this.type="class-breaks-definition",this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null}};(0,i._)([(0,l.enumeration)({classBreaksDef:"class-breaks-definition"})],d.prototype,"type",void 0),(0,i._)([(0,o.property)({json:{write:!0}})],d.prototype,"breakCount",void 0),(0,i._)([(0,o.property)({json:{write:!0}})],d.prototype,"classificationField",void 0),(0,i._)([(0,o.property)({type:String,json:{read:c.read,write:c.write}})],d.prototype,"classificationMethod",void 0),(0,i._)([(0,o.property)({json:{write:!0}})],d.prototype,"normalizationField",void 0),(0,i._)([(0,o.property)({json:{read:f.read,write:f.write}})],d.prototype,"normalizationType",void 0),(0,i._)([(0,o.property)({value:null,json:{write:!0}})],d.prototype,"standardDeviationInterval",null),(0,i._)([(0,o.property)({value:null,json:{write:!0}})],d.prototype,"definedInterval",null),d=(0,i._)([(0,u.subclass)("esri.rest.support.ClassBreaksDefinition")],d);const h=d})),t.register("3iKpt",(function(n,r){e(n.exports,"createGenerateRendererClassBreaks",(function(){return a}));const i=t("6TszD").default.getLogger("esri.rest.support.generateRendererUtils");function s(e,t){return Number(e.toFixed(t))}function a(e){const{normalizationTotal:t}=e;return{classBreaks:o(e),normalizationTotal:t}}function o(e){const t=e.definition,{classificationMethod:n,normalizationType:r,definedInterval:i}=t,a=t.breakCount??1,o=[];let d=e.values;if(0===d.length)return[];d=d.sort(((e,t)=>e-t));const h=d[0],p=d[d.length-1];if("equal-interval"===n)if(d.length>=a){const e=(p-h)/a;let t=h;for(let n=1;n<a;n++){const i=s(h+n*e,6);o.push({minValue:t,maxValue:i,label:l(t,i,r)}),t=i}o.push({minValue:t,maxValue:p,label:l(t,p,r)})}else d.forEach((e=>{o.push({minValue:e,maxValue:e,label:l(e,e,r)})}));else if("natural-breaks"===n){const t=u(d),n=e.valueFrequency||t.valueFrequency,i=function(e,t,n){const r=e.length,i=[];n>r&&(n=r);for(let e=0;e<n;e++)i.push(Math.round(e*r/n-1));i.push(r-1);let s=c(i,e,t,n);return function(e,t,n,r,i,s){let a=0,o=0,l=0,u=0,c=!0;for(let d=0;d<2&&c;d++){0===d&&(c=!1);for(let d=0;d<s-1;d++)for(;n[d+1]+1!==n[d+2];){n[d+1]=n[d+1]+1;const s=f(d,n,r,i);l=s.sbMean,a=s.sbSdcm;const h=f(d+1,n,r,i);if(u=h.sbMean,o=h.sbSdcm,!(a+o<t[d]+t[d+1])){n[d+1]=n[d+1]-1;break}t[d]=a,t[d+1]=o,e[d]=l,e[d+1]=u,c=!0}for(let d=s-1;d>0;d--)for(;n[d]!==n[d-1]+1;){n[d]=n[d]-1;const s=f(d-1,n,r,i);l=s.sbMean,a=s.sbSdcm;const h=f(d,n,r,i);if(u=h.sbMean,o=h.sbSdcm,!(a+o<t[d-1]+t[d])){n[d]=n[d]+1;break}t[d-1]=a,t[d]=o,e[d-1]=l,e[d]=u,c=!0}}return c}(s.mean,s.sdcm,i,e,t,n)&&(s=c(i,e,t,n)),i}(t.uniqueValues,n,a);let m=h;for(let e=1;e<a;e++)if(t.uniqueValues.length>e){const n=s(t.uniqueValues[i[e]],6);o.push({minValue:m,maxValue:n,label:l(m,n,r)}),m=n}o.push({minValue:m,maxValue:p,label:l(m,p,r)})}else if("quantile"===n)if(d.length>=a&&h!==p){let e=h,t=Math.ceil(d.length/a),n=0;for(let i=1;i<a;i++){let s=t+n-1;s>d.length&&(s=d.length-1),s<0&&(s=0),o.push({minValue:e,maxValue:d[s],label:l(e,d[s],r)}),e=d[s],n+=t,t=Math.ceil((d.length-n)/(a-i))}o.push({minValue:e,maxValue:p,label:l(e,p,r)})}else{let e=-1;for(let t=0;t<d.length;t++){const n=d[t];n!==e&&(e=n,o.push({minValue:e,maxValue:n,label:l(e,n,r)}),e=n)}}else if("standard-deviation"===n){const e=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t/=e.length,t}(d),t=function(e,t){let n=0;for(let r=0;r<e.length;r++){const i=e[r];n+=(i-t)*(i-t)}return n/=e.length,Math.sqrt(n)}(d,e);if(0===t)o.push({minValue:d[0],maxValue:d[0],label:l(d[0],d[0],r)});else{const n=function(e,t,n,r,i){let s=Math.max(r-e,t-r)/i/n;return s=s>=1?1:s>=.5?.5:.25,s}(h,p,a,e,t)*t;let i=0,u=h;for(let t=a;t>=1;t--){const a=s(e-(t-.5)*n,6);o.push({minValue:u,maxValue:a,label:l(u,a,r)}),u=a,i++}let c=s(e+.5*n,6);o.push({minValue:u,maxValue:c,label:l(u,c,r)}),u=c,i++;for(let t=1;t<=a;t++)c=i===2*a?p:s(e+(t+.5)*n,6),o.push({minValue:u,maxValue:c,label:l(u,c,r)}),u=c,i++}}else if("defined-interval"===n){if(!i)return o;const e=d[0],t=d[d.length-1],n=Math.ceil((t-e)/i);let a=e;for(let t=1;t<n;t++){const n=s(e+t*i,6);o.push({minValue:a,maxValue:n,label:l(a,n,r)}),a=n}o.push({minValue:a,maxValue:t,label:l(a,t,r)})}return o}function l(e,t,n){let r=null;return r=e===t?n&&"percent-of-total"===n?e+"%":e.toString():n&&"percent-of-total"===n?e+"% - "+t+"%":e+" - "+t,r}function u(e){const t=[],n=[];let r=Number.MIN_VALUE,i=1,s=-1;for(let a=0;a<e.length;a++){const o=e[a];o===r?(i++,n[s]=i):null!==o&&(t.push(o),r=o,i=1,n.push(i),s++)}return{uniqueValues:t,valueFrequency:n}}function c(e,t,n,r){let i=[],s=[],a=[],o=0;const l=[],u=[];for(let i=0;i<r;i++){const r=f(i,e,t,n);l.push(r.sbMean),u.push(r.sbSdcm),o+=u[i]}let c,d=o,h=!0;for(;h||o<d;){h=!1,i=[];for(let t=0;t<r;t++)i.push(e[t]);for(let n=0;n<r;n++)for(let i=e[n]+1;i<=e[n+1];i++)if(c=t[i],n>0&&i!==e[n+1]&&Math.abs(c-l[n])>Math.abs(c-l[n-1]))e[n]=i;else if(n<r-1&&e[n]!==i-1&&Math.abs(c-l[n])>Math.abs(c-l[n+1])){e[n+1]=i-1;break}d=o,o=0,s=[],a=[];for(let i=0;i<r;i++){s.push(l[i]),a.push(u[i]);const r=f(i,e,t,n);l[i]=r.sbMean,u[i]=r.sbSdcm,o+=u[i]}}if(o>d){for(let t=0;t<r;t++)e[t]=i[t],l[t]=s[t],u[t]=a[t];o=d}return{mean:l,sdcm:u}}function f(e,t,n,r){let s=0,a=0;for(let i=t[e]+1;i<=t[e+1];i++){const e=r[i];s+=n[i]*e,a+=e}a<=0&&i.warn("Exception in Natural Breaks calculation");const o=s/a;let l=0;for(let i=t[e]+1;i<=t[e+1];i++)l+=r[i]*(n[i]-o)**2;return{sbMean:o,sbSdcm:l}}})),t.register("jNwbb",(function(t,n){function r(e,t){const{attributeTable:n,bandCount:r}=e;return!(null!=n||(i=e,!["u8","s8"].includes(i.pixelType)||null==i.statistics?.[0]?.min||null==i.statistics[0]?.max||1!==i.bandCount))||!(null==n||r>1)&&(!t||null!=n.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())));var i}function i(e){const{bandCount:t,dataType:n,pixelType:r}=e;return"elevation"===n||"generic"===n&&1===t&&("s16"===r||"s32"===r||"f32"===r||"f64"===r)}function s(e,t=!1){const{bandCount:n,colormap:r,pixelType:i}=e;return 1===n&&(!!r?.length||!t&&"u8"===i)}function a(e,t=!1){const{attributeTable:n,bandCount:r}=e;return 1===r&&(!t||null!=n||null!=e.histograms)}function o(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}function l(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}e(t.exports,"isUVRendererSupported",(function(){return r})),e(t.exports,"isShadedReliefRendererSupported",(function(){return i})),e(t.exports,"isColormapRendererSupported",(function(){return s})),e(t.exports,"isClassBreaksSupported",(function(){return a})),e(t.exports,"isVectorFieldRendererSupported",(function(){return o})),e(t.exports,"isFlowRendererSupported",(function(){return l}))}));
//# sourceMappingURL=ImageryTileLayer.a5ae639e.js.map
