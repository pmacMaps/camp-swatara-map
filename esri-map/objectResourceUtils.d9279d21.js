!function(){function e(e,t,i,r){Object.defineProperty(e,t,{get:i,set:r,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("4aQus",(function(i,r){e(i.exports,"VertexArrayObject",(function(){return f}));var n=t("jHOLN"),s=t("7qybv"),o=t("kkxEC"),h=t("8JzMA"),a=t("7yLcd");const u=n.default.getLogger("esri.views.webgl.VertexArrayObject");let f=class{get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce(((e,t)=>e+this._buffers[t].byteLength),null!=this._indexBuffer?this._indexBuffer.byteLength:0)}get layout(){return this._layout}get locations(){return this._locations}get memoryEstimate(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*o.typedArrayStaticSize}dispose(){if(this._context){var e;this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const t in this._buffers)null===(e=this._buffers[t])||void 0===e||e.dispose(),delete this._buffers[t];this._indexBuffer=(0,s.disposeMaybe)(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&u.warn("Leaked WebGL VAO")}disposeVAOOnly(){if(this._glName){var e,t;(null===(e=this._context)||void 0===e||null===(t=e.capabilities)||void 0===t?void 0:t.vao).deleteVertexArray(this._glName),this._glName=null}this._context.instanceCounter.decrement(h.ResourceType.VertexArrayObject,this),this._context=(0,s.nullifyNonNullableForDispose)(this._context)}initialize(){if(this._initialized)return;const e=this._context.capabilities.vao;if(e){const t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t}this._initialized=!0}bind(){this.initialize();const e=this._context.capabilities.vao;e?e.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:e,_layout:t,_indexBuffer:i}=this;e||u.error("Vertex buffer dictionary is empty!");const r=this._context.gl;for(const i in e){const r=e[i];r||u.error("Vertex buffer is uninitialized!");const n=t[i];n||u.error("Vertex element descriptor is empty!"),(0,a.bindVertexBufferLayout)(this._context,this._locations,r,n)}null!=i&&(this._context.capabilities.vao?r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName):this._context.bindBuffer(i))}unbind(){this.initialize();const e=this._context.capabilities.vao;e?e.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:e,_layout:t}=this;e||u.error("Vertex buffer dictionary is empty!");for(const i in e){const r=e[i];r||u.error("Vertex buffer is uninitialized!");const n=t[i];(0,a.unbindVertexBufferLayout)(this._context,this._locations,r,n)}null!=this._indexBuffer&&this._context.unbindBuffer(this._indexBuffer.bufferType)}constructor(e,t,i,r,n=null){this._context=e,this._locations=t,this._layout=i,this._buffers=r,this._indexBuffer=n,this._glName=null,this._initialized=!1,e.instanceCounter.increment(h.ResourceType.VertexArrayObject,this)}}})),t.register("iRJeW",(function(i,r){e(i.exports,"BufferObject",(function(){return l}));var n=t("lNwWH"),s=t("jHOLN"),o=t("7qybv"),h=t("kkxEC"),a=t("kGNC4"),u=t("7O1P4"),f=t("8JzMA");const c=s.default.getLogger("esri.views.webgl.BufferObject");class l{static createIndex(e,t,i){return new l(e,f.BufferType.ELEMENT_ARRAY_BUFFER,t,i)}static createVertex(e,t,i){return new l(e,f.BufferType.ARRAY_BUFFER,t,i)}static createUniform(e,t,i){if(e.type!==u.ContextType.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new l(e,f.BufferType.UNIFORM_BUFFER,t,i)}static createPixelPack(e,t=f.Usage.STREAM_READ,i){if(e.type!==u.ContextType.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const r=new l(e,f.BufferType.PIXEL_PACK_BUFFER,t);return i&&r.setSize(i),r}static createPixelUnpack(e,t=f.Usage.STREAM_DRAW,i){if(e.type!==u.ContextType.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new l(e,f.BufferType.PIXEL_UNPACK_BUFFER,t,i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteLength(){return this.bufferType===f.BufferType.ELEMENT_ARRAY_BUFFER?this._indexType===f.DataType.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===f.BufferType.ELEMENT_ARRAY_BUFFER||this.bufferType===f.BufferType.ARRAY_BUFFER}dispose(){var e;(null===(e=this._context)||void 0===e?void 0:e.gl)?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(f.ResourceType.BufferObject,this),this._context=(0,o.nullifyNonNullableForDispose)(this._context)):this._glName&&c.warn("Leaked WebGL buffer object")}setSize(e,t=null){if(e<=0&&c.error("Buffer size needs to be positive!"),this.bufferType===f.BufferType.ELEMENT_ARRAY_BUFFER&&null!=t)switch(this._indexType=t,t){case f.DataType.UNSIGNED_SHORT:e*=2;break;case f.DataType.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===f.BufferType.ELEMENT_ARRAY_BUFFER&&((0,h.isUint16Array)(e)&&(t/=2,this._indexType=f.DataType.UNSIGNED_SHORT),(0,h.isUint32Array)(e)&&(t/=4,this._indexType=f.DataType.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;null!=t?r.bufferData(this.bufferType,t,this.usage):r.bufferData(this.bufferType,e,this.usage),(0,a.checkWebGLError)(r),this._isVAOAware&&this._context.bindVAO(i)}setSubData(e,t,i,r){if(!e)return;(t<0||t*e.BYTES_PER_ELEMENT>=this.byteLength)&&c.error("offset is out of range!"),i>=r&&c.error("end must be bigger than start!"),(t+(r-i))*e.BYTES_PER_ELEMENT>this.byteLength&&c.error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;if(this._context.type===u.ContextType.WEBGL2)s.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,i,r-i);else{const n=0===i&&r===e.length?e:e.subarray(i,r);s.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,n)}(0,a.checkWebGLError)(s),this._isVAOAware&&this._context.bindVAO(n)}getSubData(e,t=0,i,r){if(this._context.type!==u.ContextType.WEBGL2)return void c.error("Get buffer subdata is supported in WebGL2 only!");if(i<0||r<0)return void c.error("Problem getting subdata: offset and length were less than zero!");const s=function(e){return(0,n.isArrayLike)(e)}(e)?e.BYTES_PER_ELEMENT:1;if(s*((null!=i?i:0)+(null!=r?r:0))>e.byteLength)return void c.error("Problem getting subdata: offset and length exceeded destination size!");t+s*(null!=r?r:0)>this.byteLength&&c.warn("Potential problem getting subdata: requested data exceeds buffer size!");const o=this._context.gl;this._context.bindBuffer(this,f.BufferType.COPY_READ_BUFFER),o.getBufferSubData(f.BufferType.COPY_READ_BUFFER,t,e,i,r),this._context.unbindBuffer(f.BufferType.COPY_READ_BUFFER)}async getSubDataAsync(e,t=0,i,r){this._context.type===u.ContextType.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(e,t,i,r)):c.error("Get buffer subdata is supported in WebGL2 only!")}constructor(e,t,i,r){this._context=e,this.bufferType=t,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(f.ResourceType.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,a.checkWebGLError)(this._context.gl),r&&this.setData(r)}}})),t.register("72d6A",(function(i,r){e(i.exports,"FramebufferObject",(function(){return d})),t("2VlWd");var n=t("jHOLN"),s=t("7qybv"),o=t("iRJeW"),h=t("kGNC4"),a=t("7O1P4"),u=t("8JzMA"),f=t("hjBtD"),c=t("kM85I"),l=t("8aBT4");const _=n.default.getLogger("esri.views.webgl.FramebufferObject");class d{dispose(){var e,t;if(0===this._colorAttachments.size&&!this._glName)return;const i=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((e,t)=>{var i;return null===(i=this.detachColorTexture(t))||void 0===i?void 0:i.dispose()})),null===(e=this.detachDepthStencilBuffer())||void 0===e||e.dispose(),null===(t=this.detachDepthStencilTexture())||void 0===t||t.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(i),this._context.instanceCounter.decrement(u.ResourceType.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(u.ColorAttachment.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthBuffer||this._stencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){var e;const t=this._colorAttachments.get(u.ColorAttachment.COLOR_ATTACHMENT0);var i;return null!==(i=null==t||null===(e=t.descriptor)||void 0===e?void 0:e.width)&&void 0!==i?i:0}get height(){var e;const t=this._colorAttachments.get(u.ColorAttachment.COLOR_ATTACHMENT0);var i;return null!==(i=null==t||null===(e=t.descriptor)||void 0===e?void 0:e.height)&&void 0!==i?i:0}get gpuMemoryUsage(){var e,t;return[...this._colorAttachments].reduce(((e,[t,i])=>e+i.gpuMemoryUsage),null!==(t=null===(e=this.depthStencilAttachment)||void 0===e?void 0:e.gpuMemoryUsage)&&void 0!==t?t:0)}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&T(t)?t:null}attachColorTexture(e,t=u.ColorAttachment.COLOR_ATTACHMENT0){var i;if(!e)return;this._validateColorAttachmentPoint(t);const r=e.descriptor;this._validateTextureDescriptor(r),null===(i=this.detachColorTexture(t))||void 0===i||i.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=u.ColorAttachment.COLOR_ATTACHMENT0){const t=this._colorAttachments.get(e);if(t)return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e)),this._colorAttachments.delete(e),t}setColorTextureTarget(e,t=u.ColorAttachment.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(t);i&&this._framebufferTexture2D(i.glName,t,e)}attachDepthStencil(e){if(e)switch(e.type){case f.GLObjectType.Texture:return this._attachDepthStencilTexture(e);case f.GLObjectType.RenderBuffer:return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){var t;if(null==e)return;const i=e.descriptor;i.pixelFormat!==u.PixelFormat.DEPTH_STENCIL&&i.pixelFormat!==u.PixelFormat.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),i.dataType!==u.PixelType.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(i),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,u.DepthStencilAttachment)),null===(t=this._depthStencilTexture)||void 0===t||t.dispose(),this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;return e&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,u.DepthStencilAttachment)),this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){var t;if(null==e)return;const i=e.descriptor;if(i.internalFormat!==u.RenderbufferFormat.DEPTH_STENCIL&&i.internalFormat!==u.RenderbufferFormat.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),this._validateRenderBufferDescriptor(i),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,r=this._getGLAttachmentPoint(i);t.framebufferRenderbuffer(u.FramebufferTarget.FRAMEBUFFER,r,t.RENDERBUFFER,e.glName)}null===(t=this._depthBuffer)||void 0===t||t.dispose(),this._depthBuffer=e}detachDepthStencilBuffer(){const e=this._depthBuffer;if(e&&this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,i=this._getGLAttachmentPoint(e.descriptor);t.framebufferRenderbuffer(u.FramebufferTarget.FRAMEBUFFER,i,t.RENDERBUFFER,null),e.dispose()}return this._depthBuffer=null,e}copyToTexture(e,t,i,r,n,s,o){(e<0||t<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const h=o.descriptor;o.descriptor.target!==u.TextureType.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==(null==h?void 0:h.width)||null==(null==h?void 0:h.height)||e+i>this.width||t+r>this.height||n+i>h.width||s+r>h.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const a=this._context,f=a.bindTexture(o,l.Texture.TEXTURE_UNIT_FOR_UPDATES);a.setActiveTexture(l.Texture.TEXTURE_UNIT_FOR_UPDATES),a.bindFramebuffer(this),a.gl.copyTexSubImage2D(u.TextureType.TEXTURE_2D,0,n,s,e,t,i,r),a.bindTexture(f,l.Texture.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,i,r,n,s,o){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,i,r,n,s,o)}async readPixelsAsync(e,t,i,r,n,s,f){if(this._context.type!==a.ContextType.WEBGL2)return(0,h.webglDebugEnabled)()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(e,t,i,r,n,s,f);const c=this._context.gl,l=o.BufferObject.createPixelPack(this._context,u.Usage.STREAM_READ,f.byteLength);this._context.bindBuffer(l),this._context.bindFramebuffer(this),c.readPixels(e,t,i,r,n,s,0),this._context.unbindBuffer(u.BufferType.PIXEL_PACK_BUFFER),await l.getSubDataAsync(f),l.dispose()}resize(e,t){var i,r,n;if(this.width===e&&this.height===t)return;const s={width:e,height:t};b(s,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((e=>e.resize(s.width,s.height))),null===(i=this._depthStencilTexture)||void 0===i||i.resize(s.width,s.height),this._initialized&&(b(s,this._context.parameters.maxRenderbufferSize),null===(r=this._depthBuffer)||void 0===r||r.resize(s.width,s.height),null===(n=this._stencilBuffer)||void 0===n||n.resize(s.width,s.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(e=u.FramebufferTarget.FRAMEBUFFER){const t=this._context.gl;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const i=t.createFramebuffer();t.bindFramebuffer(e,i),this._colorAttachments.forEach(((t,i)=>this._framebufferTexture2D(t.glName,i,p(t),e)));const r=this._depthBuffer||this._stencilBuffer;if(r){const i=this._getGLAttachmentPoint(r.descriptor);t.framebufferRenderbuffer(e,i,t.RENDERBUFFER,r.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,t.DEPTH_STENCIL_ATTACHMENT,p(this._depthStencilTexture),e);(0,h.webglDebugEnabled)()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(e,t=u.ColorAttachment.COLOR_ATTACHMENT0,i=u.TextureType.TEXTURE_2D,r=u.FramebufferTarget.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(r,t,i,e,n)}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthBuffer){if(this._initialized){this._context.bindFramebuffer(this);const t=this._getGLAttachmentPoint(this._depthBuffer.descriptor);e.framebufferRenderbuffer(u.FramebufferTarget.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthBuffer=(0,s.disposeMaybe)(this._depthBuffer)}this._stencilBuffer&&(this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(u.FramebufferTarget.FRAMEBUFFER,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,null)),this._stencilBuffer=(0,s.disposeMaybe)(this._stencilBuffer)),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,s.disposeMaybe)(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==u.TextureType.TEXTURE_2D&&e.target!==u.TextureType.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),b(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderBufferDescriptor(e){b(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(e){switch(e.internalFormat){case u.RenderbufferFormat.DEPTH_COMPONENT16:case u.RenderbufferFormat.DEPTH_COMPONENT24:case u.RenderbufferFormat.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case u.RenderbufferFormat.DEPTH24_STENCIL8:case u.RenderbufferFormat.DEPTH32F_STENCIL8:case u.RenderbufferFormat.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case u.RenderbufferFormat.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(-1===d._MAX_COLOR_ATTACHMENTS){const e=this._context.capabilities.drawBuffers;if(e){const t=this._context.gl;d._MAX_COLOR_ATTACHMENTS=t.getParameter(e.MAX_COLOR_ATTACHMENTS)}else d._MAX_COLOR_ATTACHMENTS=1}const t=e-u.ColorAttachment.COLOR_ATTACHMENT0;t+1>d._MAX_COLOR_ATTACHMENTS&&n.default.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${d._MAX_COLOR_ATTACHMENTS} color attachments`)}constructor(e,t,i=null){this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthBuffer=null,this._stencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(u.ResourceType.FramebufferObject,this);const r=T(t)?t:new(0,l.Texture)(this._context,t);if(this._colorAttachments.set(u.ColorAttachment.COLOR_ATTACHMENT0,r),this._validateTextureDescriptor(r.descriptor),this._validateColorAttachmentPoint(u.ColorAttachment.COLOR_ATTACHMENT0),null!=i)if(function(e){return T(e)||null!=e&&"pixelFormat"in e}(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=T(i)?i:new(0,l.Texture)(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const e=function(e){return null!=e&&"type"in e&&e.type===f.GLObjectType.RenderBuffer}(i)?i:new(0,c.Renderbuffer)(this._context,i),t=e.descriptor;t.internalFormat===u.RenderbufferFormat.STENCIL_INDEX8?this._stencilBuffer=e:this._depthBuffer=e,this._validateRenderBufferDescriptor(t)}}}function T(e){return null!=e&&"type"in e&&e.type===f.GLObjectType.Texture}function b(e,t){const i=Math.max(e.width,e.height);if(i>t){_.warn(`Resizing FBO attachment size ${e.width}x${e.height} to device limit ${t}`);const r=t/i;return e.width=Math.round(e.width*r),e.height=Math.round(e.height*r),!1}return!0}function p(e){return e.descriptor.target===u.TextureType.TEXTURE_CUBE_MAP?u.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X:u.TextureType.TEXTURE_2D}d._MAX_COLOR_ATTACHMENTS=-1})),t.register("kM85I",(function(i,r){e(i.exports,"Renderbuffer",(function(){return u}));var n=t("7qybv"),s=t("7O1P4"),o=t("8JzMA"),h=t("hjBtD"),a=t("4aTM0");class u{get descriptor(){return this._descriptor}get samples(){const e=this._descriptor.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}get gpuMemoryUsage(){return(0,a.estimateMemory)(this._descriptor)}resize(e,t){const i=this._descriptor;if(i.width===e&&i.height===t)return;i.width=e,i.height=t;const r=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(o.ResourceType.Renderbuffer,this),this._context=(0,n.nullifyNonNullableForDispose)(this._context))}constructor(e,t){this._context=e,this._descriptor=t,this.type=h.GLObjectType.RenderBuffer,this._context.instanceCounter.increment(o.ResourceType.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:r,height:n,internalFormat:a,multisampled:u}=t;if(u){if(this._context.type!==s.ContextType.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,a,r,n)}else i.renderbufferStorage(i.RENDERBUFFER,a,r,n)}}})),t.register("4aTM0",(function(i,r){e(i.exports,"RenderbufferDescriptor",(function(){return s})),e(i.exports,"estimateMemory",(function(){return o}));var n=t("7yLcd");class s{constructor(e,t,i=t){this.internalFormat=e,this.width=t,this.height=i,this.multisampled=!1,this.samples=1}}function o(e){return e.width<=0||e.height<=0||null==e.internalFormat?0:e.width*e.height*(0,n.getBytesPerElementFormat)(e.internalFormat)}}))}();
//# sourceMappingURL=objectResourceUtils.d9279d21.js.map
