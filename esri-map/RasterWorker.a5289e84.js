!function(){function t(t,e,n,i){Object.defineProperty(t,e,{get:n,set:i,enumerable:!0,configurable:!0})}var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("idX6c",(function(n,i){t(n.exports,"default",(function(){return x}));var l,r=e("7eJjO"),o=e("kyj08"),s=e("1XAcN"),a=e("flPLJ"),h=e("jHOLN"),u=e("iho5X"),c=e("ba18L"),f=e("fcwIv"),p=e("59wMb"),d=e("43seT");let m=l=class extends s.JSONSupport{static createEmptyBand(t,e){return new(l.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return null===(t=this.pixels)||void 0===t?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new(0,o.default)("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");var e;this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(null!==(e=t.statistics)&&void 0!==e?e:new(0,p.SimpleBandStatistics))}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,d.getPixelValueRange)(t),i=this.pixels,r=this.width*this.height,o=i.length;let s,a,h;const u=[];for(let c=0;c<o;c++){h=l.createEmptyBand(t,r),s=i[c];for(let t=0;t<r;t++)a=s[t],h[t]=a>n?n:a<e?e:a;u.push(h)}this.pixels=u,this.pixelType=t}extractBands(t){var e;const{pixels:n,statistics:i}=this;if(null==t||0===t.length||!n||0===n.length)return this;const r=n.length,o=t.some((t=>t>=n.length)),s=r===t.length&&!t.some(((t,e)=>t!==e));if(o||s)return this;const a=(null===(e=this.bandMasks)||void 0===e?void 0:e.length)===r?t.map((t=>this.bandMasks[t])):void 0;let{mask:h,validPixelCount:u}=this;const{width:c,height:f}=this;if(a){if(1===a.length)h=a[0];else{const t=c*f;h=new Uint8Array(t).fill(255);for(let e=0;e<a.length;e++){const n=a[e];for(let e=0;e<t;e++)n[e]||(h[e]=0)}}u=h.filter((t=>!!t)).length}return new l({pixelType:this.pixelType,width:c,height:f,mask:h,bandMasks:a,validPixelCount:u,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>n[t])),statistics:i&&t.map((t=>i[t]))})}clone(){const t=new l({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=l.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,a.clone)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:l}=this;if(!t||!l||!l.length)return void h.default.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let r,o,s,a;r=o=s=l[0],l.length>=3?(o=l[1],s=l[2]):2===l.length&&(o=l[1]);const u=new Uint32Array(t),c=this.width*this.height;if(r.length===c)if(null!=e&&e.length===c)if(n)for(a=0;a<c;a++){const t=e[a];if(t){const e=t/255;u[a]=i?t<<24|s[a]*e<<16|o[a]*e<<8|r[a]*e:t<<24|s[a]<<16|o[a]<<8|r[a]}}else for(a=0;a<c;a++)e[a]&&(u[a]=-16777216|s[a]<<16|o[a]<<8|r[a]);else for(a=0;a<c;a++)u[a]=-16777216|s[a]<<16|o[a]<<8|r[a];else h.default.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||!e||!e.length)return void h.default.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let r=1,o=0,s=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(o=Math.min(o,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;s=Math.max(s,e)}r=255/s}else{let t=255;"s8"===l?(o=-128,t=127):"u16"===l?t=65535:"s16"===l?(o=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(o=-2147483648,t=2147483647):"f32"===l?(o=-34e38,t=34e38):"f64"===l&&(o=-Number.MAX_VALUE,t=Number.MAX_VALUE),r=255/(t-o)}const a=new Uint32Array(t),u=this.width*this.height;let c,f,p,d,m;if(c=f=p=e[0],c.length!==u)return h.default.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===u)for(d=0;d<u;d++)n[d]&&(a[d]=-16777216|(p[d]-o)*r<<16|(f[d]-o)*r<<8|(c[d]-o)*r);else for(d=0;d<u;d++)a[d]=-16777216|(p[d]-o)*r<<16|(f[d]-o)*r<<8|(c[d]-o)*r;else if(null!=n&&n.length===u)for(d=0;d<u;d++)m=(c[d]-o)*r,n[d]&&(a[d]=-16777216|m<<16|m<<8|m);else for(d=0;d<u;d++)m=(c[d]-o)*r,a[d]=-16777216|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return h.default.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,r,o;i=l=r=e[0],e.length>=3?(l=e[1],r=e[2]):2===e.length&&(l=e[1]);const s=this.width*this.height;if(i.length!==s)return h.default.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(null!=n&&n.length===s)for(o=0;o<s;o++)t[a++]=i[o],t[a++]=l[o],t[a++]=r[o],t[a++]=1&n[o];else for(o=0;o<s;o++)t[a++]=i[o],t[a++]=l[o],t[a++]=r[o],t[a++]=1}_calculateBandStatistics(t,e){let n=1/0,i=-1/0;const l=t.length;let r,o=0;if(null!=e)for(r=0;r<l;r++)e[r]&&(o=t[r],n=o<n?o:n,i=o>i?o:i);else for(r=0;r<l;r++)o=t[r],n=o<n?o:n,i=o>i?o:i;return new(0,p.SimpleBandStatistics)(n,i)}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}};(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"width",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"height",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"pixelType",void 0),(0,r._)([(0,c.cast)("pixelType")],m.prototype,"castPixelType",null),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"validPixelCount",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"mask",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"maskIsAlpha",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"pixels",void 0),(0,r._)([(0,u.property)()],m.prototype,"premultiplyAlpha",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"statistics",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"depthCount",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"noDataValues",void 0),(0,r._)([(0,u.property)({json:{write:!0}})],m.prototype,"bandMasks",void 0),m=l=(0,r._)([(0,f.subclass)("esri.layers.support.PixelBlock")],m);const x=m})),e.register("59wMb",(function(e,n){t(e.exports,"SimpleBandStatistics",(function(){return i}));class i{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}}})),e.register("alctY",(function(n,i){t(n.exports,"NoDataInterpretation",(function(){return l})),t(n.exports,"MissingBandAction",(function(){return r})),t(n.exports,"MAX_MAP_SIZE_GPU",(function(){return h})),t(n.exports,"isValidPixelBlock",(function(){return u})),t(n.exports,"compositeBands",(function(){return c})),t(n.exports,"createColormapLUT",(function(){return f})),t(n.exports,"colorize",(function(){return p})),t(n.exports,"lookupPixels",(function(){return d})),t(n.exports,"lookupBandValues",(function(){return m})),t(n.exports,"remapColor",(function(){return x})),t(n.exports,"remap",(function(){return g})),t(n.exports,"mask",(function(){return M})),t(n.exports,"createRemapLUT",(function(){return A})),t(n.exports,"createMaskLUT",(function(){return v})),t(n.exports,"mosaicPixelData",(function(){return b})),t(n.exports,"mosaic",(function(){return P})),t(n.exports,"setValidBoundary",(function(){return T})),t(n.exports,"split",(function(){return F})),t(n.exports,"getLocalArithmeticNorthRotations",(function(){return D})),t(n.exports,"approximateTransform",(function(){return R}));var l,r,o,s=e("idX6c"),a=e("43seT");(o=l||(l={}))[o.matchAny=0]="matchAny",o[o.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(r||(r={}));const h=6;function u(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function c(t){var e,n;if(!(null==t?void 0:t.length)||t.some((t=>!u(t))))return null;if(1===t.length)return null!==(n=null===(e=t[0])||void 0===e?void 0:e.clone())&&void 0!==n?n:null;const i=t,{width:l,height:r,pixelType:o}=i[0];if(i.some((t=>t.width!==l||t.height!==r)))return null;const a=i.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;a.length&&(h=new Uint8Array(l*r),h.set(a[0]),a.length>1&&k(a.slice(1),h));const c=[];i.forEach((({pixels:t})=>c.push(...t)));const f=i.map((({statistics:t})=>t)).filter((t=>null==t?void 0:t.length)),p=[];return f.forEach((t=>p.push(...t))),new(0,s.default)({pixelType:o,width:l,height:r,mask:h,pixels:c,statistics:p.length?p:null})}function f(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),r=new Uint8Array(4*l),o=[];let s,a=0,h=0;const u=5===n[0].length;if(l>65536)return n.forEach((t=>{o[t[0]-i]=u?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:o,offset:i,alphaSpecified:u};if(t.fillUnspecified)for(s=n[h],a=s[0]-i;a<l;a++)r[4*a]=s[1],r[4*a+1]=s[2],r[4*a+2]=s[3],r[4*a+3]=u?s[4]:255,a===s[0]-i&&(s=h===n.length-1?s:n[++h]);else for(a=0;a<n.length;a++)s=n[a],h=4*(s[0]-i),r[h]=s[1],r[h+1]=s[2],r[h+2]=s[3],r[h+3]=u?s[4]:255;return{indexedColormap:r,offset:i,alphaSpecified:u}}function p(t,e){if(!u(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const r=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:o,indexed2DColormap:s,offset:a,alphaSpecified:h}=e;let c=0;const f=i[0],p=new Uint8Array(f.length),d=new Uint8Array(f.length),m=new Uint8Array(f.length);let x,g=0;if(o){const t=o.length-1;if(null!=l)for(c=0;c<r;c++)l[c]&&(g=4*(f[c]-a),g<a||g>t?l[c]=0:(p[c]=o[g],d[c]=o[g+1],m[c]=o[g+2],l[c]=o[g+3]));else{for(l=new Uint8Array(r),c=0;c<r;c++)g=4*(f[c]-a),g<a||g>t?l[c]=0:(p[c]=o[g],d[c]=o[g+1],m[c]=o[g+2],l[c]=o[g+3]);n.mask=l}}else if(s)if(null!=l)for(c=0;c<r;c++)l[c]&&(x=s[f[c]],p[c]=x[0],d[c]=x[1],m[c]=x[2],l[c]=x[3]);else{for(l=new Uint8Array(r),c=0;c<r;c++)x=s[f[c]],p[c]=x[0],d[c]=x[1],m[c]=x[2],l[c]=x[3];n.mask=l}return n.pixels=[p,d,m],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function d(t,e){if(!u(t))return null;const{pixels:n,mask:i}=t,l=n.length;let r=e.lut;const{offset:o}=e;r&&1===r[0].length&&(r=n.map((()=>r)));const a=[],h=e.outputPixelType||"u8";for(let t=0;t<l;t++){const e=m(n[t],i,r[t],o||0,h);a.push(e)}const c=new(0,s.default)({width:t.width,height:t.height,pixels:a,mask:i,pixelType:h});return c.updateStatistics(),c}function m(t,e,n,i,l){const r=t.length,o=s.default.createEmptyBand(l,r);if(e)for(let l=0;l<r;l++)e[l]&&(o[l]=n[t[l]-i]);else for(let e=0;e<r;e++)o[e]=n[t[e]-i];return o}function x(t,e){if(!u(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,r=e.length,o=Math.floor(r/2),s=e[Math.floor(o)],a=i[0];let h,c,f,p,d,m,x=!1;const g=new Uint8Array(l),y=new Uint8Array(l),w=new Uint8Array(l);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(l),k.fill(M?255:1),n.mask=k),d=0;d<l;d++)if(k[d]){for(h=a[d],x=!1,m=o,c=s,f=0,p=r-1;p-f>1;){if(h===c.value){x=!0;break}h>c.value?f=m:p=m,m=Math.floor((f+p)/2),c=e[Math.floor(m)]}x||(h===e[f].value?(c=e[f],x=!0):h===e[p].value?(c=e[p],x=!0):h<e[f].value?(x=!1,c=null):h>e[f].value&&(h<e[p].value?(c=e[f],x=!0):p===r-1?(x=!1,c=null):(c=e[p],x=!0))),x?(g[d]=c.mappedColor[0],y[d]=c.mappedColor[1],w[d]=c.mappedColor[2],k[d]=c.mappedColor[3]):g[d]=y[d]=w[d]=k[d]=0}return n.pixels=[g,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function g(t,e){if(!u(t))return null;const{width:n,height:i}=t,{inputRanges:l,outputValues:r,outputPixelType:o,noDataRanges:h,allowUnmatched:c,isLastInputRangeInclusive:f}=e,p=t.pixels[0],d=s.default.createEmptyBand(o,p.length),m=t.mask,x=new Uint8Array(n*i);m?x.set(m):x.fill(255);const g=t.pixelType.startsWith("f")?1e-6:0,y=l.map((t=>t-g));y[0]=l[0],y[y.length-1]=l[l.length-1]+(f?1e-6:0);const w=l.length/2,[k,M]=(0,a.getPixelValueRange)(o);for(let t=0;t<i;t++)for(let e=0;e<n;e++){const i=t*n+e;if(x[i]){const t=p[i];let e=!1;for(let n=w-1;n>=0;n--)if(t===y[2*n]||t>y[2*n]&&t<y[2*n+1]){d[i]=r[n],e=!0;break}e||(c?d[i]=t>M?M:t<k?k:t:x[i]=0)}}const A=null==h?void 0:h.length;if(A)for(let t=0;t<i;t++)for(let e=0;e<n;e++){const i=t*n+e;if(!m||m[i]){const t=p[i];for(let e=0;e<A;e+=2)if(t>=h[e]&&t<=h[e+1]){d[i]=0,x[i]=0;break}}}return new(0,s.default)({width:n,height:i,pixelType:o,pixels:[d],mask:x})}function y(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,r=1===(null==n?void 0:n.length)?n[0]:null,o=!!(null==e?void 0:e.length);for(let n=0;n<t.length;n++)if(i[n]){const s=t[n];if(o){let t=!1;for(let n=0;n<e.length;n+=2)if(s>=e[n]&&s<=e[n+1]){t=!0;break}t||(i[n]=0)}i[n]&&(s===r||(null==l?void 0:l.has(s)))&&(i[n]=0)}}function w(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function k(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function M(t,e){if(!u(t))return null;const{width:n,height:i,pixels:l}=t,r=n*i,o=new Uint8Array(r);t.mask?o.set(t.mask):o.fill(255);const a=l.length,{includedRanges:h,noDataValues:c,outputPixelType:f,matchAll:p,lookups:d}=e;if(d){const t=[];for(let e=0;e<a;e++){const n=d[e],i=m(l[e],o,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?o.set(t[0]):p?w(t,o):k(t,o)}else if(p){const t=[];for(let e=0;e<a;e++){const n=new Uint8Array(r);n.set(o),y(l[e],null==h?void 0:h.slice(2*e,2*e+2),null==c?void 0:c[e],n),t.push(n)}1===t.length?o.set(t[0]):w(t,o)}else for(let t=0;t<a;t++)y(l[t],null==h?void 0:h.slice(2*t,2*t+2),null==c?void 0:c[t],o);return new(0,s.default)({width:n,height:i,pixelType:f,pixels:l,mask:o})}function A(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:l,noDataRanges:r,isLastInputRangeInclusive:o,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const u=e.includes("16")?65536:256,c=e.includes("s")?-u/2:0,f=s.default.createEmptyBand(h,u),p=new Uint8Array(u);l&&p.fill(255);const[d,m]=(0,a.getPixelValueRange)(h);if((null==n?void 0:n.length)&&(null==i?void 0:i.length)){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],o&&(e[e.length-1]=n[n.length-1]);for(let t=0;t<e.length;t++){const n=i[t]>m?m:i[t]<d?d:i[t],l=Math.ceil(e[2*t]-c),r=Math.floor(e[2*t+1]-c);for(let t=l;t<=r;t++)f[t]=n,p[t]=255}}if(null==r?void 0:r.length)for(let t=0;t<r.length;t++){const e=Math.ceil(r[2*t]-c),n=Math.floor(r[2*t+1]-c);for(let t=e;t<=n;t++)p[t]=0}return{lut:f,offset:c,mask:p}}function v(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,r=new Uint8Array(i);if(e)for(let t=0;t<e.length;t++){const n=Math.ceil(e[2*t]-l),i=Math.floor(e[2*t+1]-l);for(let t=n;t<=i;t++)r[t]=255}else r.fill(255);if(n)for(let t=0;t<n.length;t++)r[n[t]-l]=0;return{lut:r,offset:l}}function b(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(!n||null==n.pixelBlock)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,r=.01*Math.min(i,l),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),s=Math.min.apply(null,o.map((t=>t.extent.xmin))),a=Math.min.apply(null,o.map((t=>t.extent.ymin))),h=Math.max.apply(null,o.map((t=>t.extent.xmax))),u=Math.max.apply(null,o.map((t=>t.extent.ymax))),c={x:Math.round((e.xmin-s)/i),y:Math.round((u-e.ymax)/l)},f={width:Math.round((h-s)/i),height:Math.round((u-a)/l)},p={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(f.width/n.pixelBlock.width)*Math.round(f.height/n.pixelBlock.height)!==o.length||c.x<0||c.y<0||f.width<p.width||f.height<p.height?null:{extent:e,pixelBlock:P(o.map((t=>t.pixelBlock)),f,{clipOffset:c,clipSize:p})}}function U(t,e,n,i,l,r){const{width:o,height:s}=n.block,{x:a,y:h}=n.offset,{width:u,height:c}=n.mosaic,f=function(t,e,n,i,l,r,o,s){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:r<=i*e?0:r<i*e+e?r-i*e:e,xmax:l+o<=n*t?0:l+o<n*t+t?l+o-n*t:t,ymax:r+s<=i*e?0:r+s<i*e+e?r+s-i*e:e}}(o,s,i,l,a,h,u,c);let p=0,d=0;if(r){var m;const t=r.hasGCSSShiftTransform?360:null!==(m=r.halfWorldWidth)&&void 0!==m?m:0,e=o*r.resolutionX,n=r.startX+i*e;n<t&&n+e>t?d=r.rightPadding:n>=t&&(p=r.leftMargin-r.rightPadding,d=0)}if(f.xmax-=d,"number"!=typeof e)for(let n=f.ymin;n<f.ymax;n++){const r=(l*s+n-h)*u+(i*o-a)+p,c=n*o;for(let n=f.xmin;n<f.xmax;n++)t[r+n]=e[c+n]}else for(let n=f.ymin;n<f.ymax;n++){const r=(l*s+n-h)*u+(i*o-a)+p;for(let n=f.xmin;n<f.xmax;n++)t[r+n]=e}}function P(t,e,n={}){const{clipOffset:i,clipSize:l,alignmentInfo:r,blockWidths:o}=n;if(o)return function(t,e,n){const i=t.find((t=>null!=t));if(null==i)return null;const l=t.some((t=>null==t||!!t.mask)),{width:r,height:o}=e,a=l?new Uint8Array(r*o):null,{blockWidths:h}=n,c=[],f=i.getPlaneCount(),p=s.default.getPixelArrayConstructor(i.pixelType);if(l)for(let e=0,n=0;e<t.length;n+=h[e],e++){const i=t[e];if(!u(i))continue;const l=i.mask;for(let t=0;t<o;t++)for(let o=0;o<h[e];o++)a[t*r+o+n]=null==l?255:l[t*i.width+o]}const d=t.some((t=>null!=t&&t.bandMasks&&t.bandMasks.length>1)),m=d?[]:void 0,x=r*o;for(let e=0;e<f;e++){const n=new p(x),i=d?new Uint8Array(x):void 0;for(let l=0,s=0;l<t.length;s+=h[l],l++){const a=t[l];if(!u(a))continue;const c=a.pixels[e];if(null!=c){for(let t=0;t<o;t++)for(let e=0;e<h[l];e++)n[t*r+e+s]=c[t*a.width+e];if(i){var g,y;const t=null!==(y=null===(g=a.bandMasks)||void 0===g?void 0:g[e])&&void 0!==y?y:a.mask;for(let e=0;e<o;e++)for(let n=0;n<h[l];n++)i[e*r+n+s]=t?t[e*a.width+n]:255}}}c.push(n),m&&i&&m.push(i)}const w=new(0,s.default)({width:r,height:o,mask:a,bandMasks:m,pixels:c,pixelType:i.pixelType});return w.updateStatistics(),w}(t,e,{blockWidths:o});const a=t.find((t=>u(t)));if(null==a)return null;const h=l?l.width:e.width,c=l?l.height:e.height,f=a.width,p=a.height,d=e.width/f,m=e.height/p,x={offset:i||{x:0,y:0},mosaic:l||e,block:{width:f,height:p}},g=a.pixelType,y=s.default.getPixelArrayConstructor(g),w=a.pixels.length,k=[];let M,A;for(let e=0;e<w;e++){A=new y(h*c);for(let n=0;n<m;n++)for(let i=0;i<d;i++){const l=t[n*d+i];u(l)&&(M=l.pixels[e],U(A,M,x,i,n,r))}k.push(A)}const v=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),b=t.some((t=>null!=t&&t.bandMasks&&t.bandMasks.length>1)),P=v?new Uint8Array(h*c):void 0,T=b?[]:void 0;if(P){for(let e=0;e<m;e++)for(let n=0;n<d;n++){const i=t[e*d+n],l=null!=i?i.mask:null;U(P,null!=l?l:i?255:0,x,n,e,r)}if(T)for(let e=0;e<w;e++){const n=new Uint8Array(h*c);for(let i=0;i<m;i++)for(let l=0;l<d;l++){var I,B;const o=t[i*d+l],s=null!==(B=null==o||null===(I=o.bandMasks)||void 0===I?void 0:I[e])&&void 0!==B?B:null==o?void 0:o.mask;U(n,null!=s?s:o?255:0,x,l,i,r)}T.push(n)}}const S=new(0,s.default)({width:h,height:c,pixels:k,pixelType:g,bandMasks:T,mask:P});return S.updateStatistics(),S}function T(t,e,n){if(!u(t))return null;const{width:i,height:l}=t,r=e.x,o=e.y,s=n.width+r,a=n.height+o;if(r<0||o<0||s>i||a>l)return t;if(0===r&&0===o&&s===i&&a===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const h=t.mask;for(let t=0;t<l;t++){const e=t*i;for(let n=0;n<i;n++)h[e+n]=t<o||t>=a||n<r||n>=s?0:1}return t.updateStatistics(),t}function I(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let r=l.next();for(;!r.done;)i=t.get(r.value),i>e&&(n=r.value,e=i),r=l.next();return n}function B(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function S(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function _(t,e,n){let{x:i,y:l}=e;const{width:r,height:o}=n;if(0===i&&0===l&&o===t.height&&r===t.width)return t;const{width:a,height:h}=t,c=Math.max(0,l),f=Math.max(0,i),p=Math.min(i+r,a),d=Math.min(l+o,h);if(p<0||d<0||!u(t))return null;i=Math.max(0,-i),l=Math.max(0,-l);const{pixels:m}=t,x=r*o,g=m.length,y=[];for(let e=0;e<g;e++){const n=m[e],o=s.default.createEmptyBand(t.pixelType,x);for(let t=c;t<d;t++){const e=t*a;let s=(t+l-c)*r+i;for(let t=f;t<p;t++)o[s++]=n[e+t]}y.push(o)}const w=new Uint8Array(x),k=t.mask;for(let t=c;t<d;t++){const e=t*a;let n=(t+l-c)*r+i;for(let t=f;t<p;t++)w[n++]=k?k[e+t]:1}const M=new(0,s.default)({width:n.width,height:n.height,pixelType:t.pixelType,pixels:y,mask:w});return M.updateStatistics(),M}function V(t,e=!0){if(!u(t))return null;const{pixels:n,width:i,height:l,mask:r,pixelType:o}=t,a=[],h=Math.round(i/2),c=Math.round(l/2),f=l-1,p=i-1;for(let t=0;t<n.length;t++){const r=n[t],u=s.default.createEmptyBand(o,h*c);let d=0;for(let t=0;t<l;t+=2)for(let n=0;n<i;n+=2){const l=r[t*i+n];if(e){const e=n===p?l:r[t*i+n+1],o=t===f?l:r[t*i+n+i],s=n===p?o:t===f?e:r[t*i+n+i+1];u[d++]=(l+e+o+s)/4}else u[d++]=l}a.push(u)}let d=null;if(null!=r){d=new Uint8Array(h*c);let t=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const o=r[n*i+l];if(e){const e=l===p?o:r[n*i+l+1],s=n===f?o:r[n*i+l+i],a=l===p?s:n===f?e:r[n*i+l+i+1];d[t++]=o*e*s*a?1:0}else d[t++]=o}}return new(0,s.default)({width:h,height:c,pixelType:o,pixels:a,mask:d})}function F(t,e,n){if(!u(t))return null;const{width:i,height:l}=e;let{width:r,height:o}=t;const s=new Map,a={x:0,y:0},h=null==n?1:1+n;let c=t;for(let t=0;t<h;t++){const n=Math.ceil(r/i),u=Math.ceil(o/l);for(let r=0;r<u;r++){a.y=r*l;for(let l=0;l<n;l++){a.x=l*i;const n=_(c,a,e);s.set(`${t}/${r}/${l}`,n)}}t<h-1&&(c=V(c)),r=Math.round(r/2),o=Math.round(o/2)}return s}function C(t,e,n,i,l=0){const{width:r,height:o}=t,{width:s,height:a}=e,h=i.cols,u=i.rows,c=Math.ceil(s/h-.1/h),f=Math.ceil(a/u-.1/u);let p,d,m,x,g,y,w;const k=c*h,M=k*f*u,A=new Float32Array(M),v=new Float32Array(M),b=new Uint32Array(M),U=new Uint32Array(M);let P,T,I=0;for(let t=0;t<f;t++)for(let e=0;e<c;e++){p=12*(t*c+e),d=n[p],m=n[p+1],x=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let n=0;n<u;n++){I=(t*u+n)*k+e*h,T=(n+.5)/u;for(let t=0;t<n;t++)P=(t+.5)/h,A[I+t]=(d*P+m*T+x)*r+l,v[I+t]=(g*P+y*T+w)*o+l,b[I+t]=Math.floor(A[I+t]),U[I+t]=Math.floor(v[I+t])}p+=6,d=n[p],m=n[p+1],x=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let n=0;n<u;n++){I=(t*u+n)*k+e*h,T=(n+.5)/u;for(let t=n;t<h;t++)P=(t+.5)/h,A[I+t]=(d*P+m*T+x)*r+l,v[I+t]=(g*P+y*T+w)*o+l,b[I+t]=Math.floor(A[I+t]),U[I+t]=Math.floor(v[I+t])}}return{offsets_x:A,offsets_y:v,offsets_xi:b,offsets_yi:U,gridWidth:k}}function D(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:r,gridWidth:o}=C(t,t,n,{rows:i[0],cols:i[1]}),{width:s,height:a}=t,h=new Float32Array(s*a),u=180/Math.PI;for(let t=0;t<a;t++)for(let e=0;e<s;e++){const n=t*o+e,i=0===t?n:n-o,c=t===a-1?n:n+o,f=l[i]-l[c],p=r[c]-r[i];if(isNaN(f)||isNaN(p))h[t*s+e]=90;else{let n=Math.atan2(p,f)*u;n=(360+n)%360,h[t*s+e]=n}}return h}function R(t,e,n,i,l="nearest"){if(!u(t))return null;"majority"===l&&(t=function(t){if(!u(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,r=l[0],o=e.pixels[0],s=t.mask;for(let t=2;t<i-1;t++){const e=new Map;for(let i=t-2;i<t+2;i++)for(let t=0;t<4;t++){const l=i*n+t;S(e,r[l],s?s[l]:1)}o[t*n]=I(e),o[t*n+1]=o[t*n+2]=o[t*n];let i=3;for(;i<n-1;i++){let l=(t-2)*n+i+1;S(e,r[l],s?s[l]:1),l=(t-1)*n+i+1,S(e,r[l],s?s[l]:1),l=t*n+i+1,S(e,r[l],s?s[l]:1),l=(t+1)*n+i+1,S(e,r[l],s?s[l]:1),l=(t-2)*n+i-3,B(e,r[l],s?s[l]:1),l=(t-1)*n+i-3,B(e,r[l],s?s[l]:1),l=t*n+i-3,B(e,r[l],s?s[l]:1),l=(t+1)*n+i-3,B(e,r[l],s?s[l]:1),o[t*n+i]=I(e)}o[t*n+i+1]=o[t*n+i]}for(let t=0;t<n;t++)o[t]=o[n+t]=o[2*n+t],o[(i-1)*n+t]=o[(i-2)*n+t];return e.updateStatistics(),e}(t));const{pixels:r,mask:o,bandMasks:a,pixelType:h}=t,c=t.width,f=t.height,p=s.default.getPixelArrayConstructor(h),d=r.length,{width:m,height:x}=e;let g=!1;for(let t=0;t<n.length;t+=3)-1===n[t]&&-1===n[t+1]&&-1===n[t+2]&&(g=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=C({width:c,height:f},e,n,i,"majority"===l?.5:0);let v;const b=(t,e,n,i)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let r=0;r<x;r++){v=r*A;for(let o=0;o<m;o++){if(y[v]<0||w[v]<0)t[r*m+o]=0;else if(i)t[r*m+o]=e[k[v]+M[v]*c];else{const i=Math.floor(y[v]),s=Math.floor(w[v]),a=Math.ceil(y[v]),h=Math.ceil(w[v]),u=y[v]-i,f=w[v]-s;if(!n||n[i+s*c]&&n[a+s*c]&&n[i+h*c]&&n[a+h*c]){const n=(1-u)*e[i+s*c]+u*e[a+s*c],p=(1-u)*e[i+h*c]+u*e[a+h*c];t[r*m+o]=(1-f)*n+f*p+l}else t[r*m+o]=e[k[v]+M[v]*c]}v++}}},U=[];let P;const T=(null==a?void 0:a.length)===d,_=[];for(let t=0;t<d;t++){if(T){const e=new Uint8Array(m*x);b(e,a[t],a[t],!0),_.push(e)}P=new p(m*x),b(P,r[t],T?a[t]:o,"nearest"===l||"majority"===l),U.push(P)}const V=new(0,s.default)({width:m,height:x,pixelType:h,pixels:U,bandMasks:T?_:void 0});if(null!=o)V.mask=new Uint8Array(m*x),b(V.mask,o,o,!0);else if(g){V.mask=new Uint8Array(m*x);for(let t=0;t<m*x;t++)V.mask[t]=y[t]<0||w[t]<0?0:1}return V.updateStatistics(),V}})),e.register("2hwKJ",(function(n,i){t(n.exports,"unitKebabDict",(function(){return h})),t(n.exports,"getUnitConversionFactor",(function(){return u})),t(n.exports,"uvComponentToVector",(function(){return f})),t(n.exports,"convertToLocalDirections",(function(){return d})),t(n.exports,"convertVectorFieldData",(function(){return m})),t(n.exports,"convertVectorFieldUnit",(function(){return x})),t(n.exports,"snapImageToSymbolTile",(function(){return g})),t(n.exports,"createVFMeshScalar",(function(){return I})),t(n.exports,"createVFMesh",(function(){return B})),t(n.exports,"sampleVectorField",(function(){return S}));var l=e("79ASa"),r=e("idX6c"),o=e("alctY");const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const a=180/Math.PI,h=new(0,l.JSONMap)({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function u(t,e){return s.get(t)/s.get(e)||1}function c(t){return(450-t)%360}function f(t,e="geographic"){const[n,i]=t,l=Math.sqrt(n*n+i*i);let r=Math.atan2(i,n)*a;return r=(360+r)%360,"geographic"===e&&(r=c(r)),[l,r]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=c(n)),n%=360;const i=t[0];return[i*Math.cos(n/a),i*Math.sin(n/a)]}function d(t,e,n,i="geographic"){if(!(0,o.isValidPixelBlock)(t)||null==n)return t;const l="vector-magdir"===e?t.clone():m(t,e),r=l.pixels[1];for(let t=0;t<r.length;t++)r[t]="geographic"===i?(r[t]+n[t]+270)%360:(r[t]+360-n[t])%360;return"vector-magdir"===e?l:m(l,"vector-magdir")}function m(t,e,n="geographic",i=1){if(!(0,o.isValidPixelBlock)(t))return t;const{pixels:l,width:s,height:a}=t,h=s*a,u=l[0],c=l[1],d=t.pixelType.startsWith("f")?t.pixelType:"f32",m=r.default.createEmptyBand(d,h),x=r.default.createEmptyBand(d,h);let g=0;for(let t=0;t<a;t++)for(let t=0;t<s;t++)"vector-uv"===e?([m[g],x[g]]=f([u[g],c[g]],n),m[g]*=i):([m[g],x[g]]=p([u[g],c[g]],n),m[g]*=i,x[g]*=i),g++;const y=new(0,r.default)({pixelType:d,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[m,x]});return y.updateStatistics(),y}function x(t,e,n=1){if(1===n||!(0,o.isValidPixelBlock)(t))return t;const i=t.clone(),{pixels:l,width:r,height:s}=i,a=l[0],h=l[1];let u=0;for(let t=0;t<s;t++)for(let t=0;t<r;t++)"vector-uv"===e?(a[u]*=n,h[u]*=n):a[u]*=n,u++;return i.updateStatistics(),i}function g(t,e,n,i,l){if(null==l||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const r=l.xmin,o=l.ymax,s=(t.xmax-t.xmin)/e*i,a=(t.ymax-t.ymin)/n*i,h=(s+a)/2;return t.xmin=r+Math.floor((t.xmin-r)/s)*s,t.xmax=r+Math.ceil((t.xmax-r)/s)*s,t.ymin=o+Math.floor((t.ymin-o)/a)*a,t.ymax=o+Math.ceil((t.ymax-o)/a)*a,{extent:t,width:Math.round(t.width/s),height:Math.round(t.height/a),resolution:h}}const y=w(0,0,0);function w(t=0,e=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,r=13*l,o=-7*l,s=-2*l,a=-16*l,h=21.75,[u,c]=M(0,e+r,n,h),[f,p]=M(t-5.5,e+o,n,h),[d,m]=M(t+5.5,e+o,n,h),[x,g]=M(t-1.5,e+s,n,h),[y,w]=M(t+1.5,e+s,n,h),[k,A]=M(t-1.5,e+a,n,h),[v,b]=M(t+1.5,e+a,n,h);return[u,c,f,p,x,g,y,w,d,m,k,A,v,b]}function k(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=n?-1:1,l=5*i,r=20*i,o=25*i,s=45,a=2*i,h=n?1:-1,u=5*h;let[c,f]=[0+u,0-r],[p,d]=[c+2*h,f],[m,x]=[p-0*h,d+a],[g,y]=[0-u,0-o],[w,k]=[g+0*h,y-a],A=Math.ceil(t/5),v=Math.floor(A/10);A-=8*v;const b=[],U=[];for(let t=0;t<A/2;t++,v--){v<=0&&A%2==1&&t===(A-1)/2&&(g=0,w=g+0*h,y=(y+f)/2,k=y-a);const[n,i]=M(g,y,e,s);if(v>0){const[t,l]=M(p,y,e,s),[r,o]=M(c,f,e,s);b.push(t),b.push(l),b.push(n),b.push(i),b.push(r),b.push(o)}else{const[t,l]=M(p,d,e,s),[r,o]=M(m,x,e,s),[a,h]=M(w,k,e,s);U.push(n),U.push(i),U.push(a),U.push(h),U.push(r),U.push(o),U.push(t),U.push(l)}y+=l,f+=l,d+=l,x+=l,k+=l}const[P,T]=M(0+u,0+r,e,s),I=7*h,[B,S]=M(0+I,0+r,e,s),[_,V]=M(0+u,0-o,e,s),[F,C]=M(0+I,0-o,e,s);return{pennants:b,barbs:U,shaft:[P,T,B,S,_,V,F,C]}}function M(t,e,n,i=1){const l=Math.sqrt(t*t+e*e)/i,r=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+r-n)%(2*Math.PI)]}const A=[0,1,3,6,10,16,21,27,33,40,47,55,63],v=[0,.5,1,1.5,2],b=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function U(t,e,n,i){const l=u(i||"knots",n);let r;for(r=1;r<e.length;r++)if(r===e.length-1){if(t<e[r]*l)break}else if(t<=e[r]*l)break;return Math.min(r-1,e.length-2)}function P(t,e,n,i,l){let r=0;switch(e){case"beaufort_kn":r=U(t,A,"knots",n);break;case"beaufort_km":r=U(t,A,"kilometer-per-hour",n);break;case"beaufort_ft":r=U(t,A,"feet-per-second",n);break;case"beaufort_m":r=U(t,A,"meter-per-second",n);break;case"classified_arrow":r=U(t,null!=l?l:[],i,n);break;case"ocean_current_m":r=U(t,v,"meter-per-second",n);break;case"ocean_current_kn":r=U(t,b,"knots",n)}return r}const T=[];function I(t,e){let n=0,i=0;const{width:l,height:r,mask:o}=t,s=t.pixels[0],a=[],c=[],f=u(h.fromJSON(e.inputUnit),"knots"),p="wind_speed"===e.style?5:Number.MAX_VALUE;for(let t=0;t<r;t++)for(let e=0;e<l;e++){const h=s[t*l+e]*f;if((!o||o[t*l+e])&&h<p){for(let i=0;i<4;i++)a[n++]=(e+.5)/l,a[n++]=(t+.5)/r,a[n++]=i<2?-.5:.5,a[n++]=i%2==0?-.5:.5,a[n++]=0,a[n++]=h;const o=4*(n/24-1);c[i++]=o,c[i++]=o+1,c[i++]=o+2,c[i++]=o+1,c[i++]=o+2,c[i++]=o+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(c)}}function B(t,e){return"simple_scalar"===e.style?I(t,e):"wind_speed"===e.style?function(t,e){if(0===T.length)for(let t=0;t<30;t++)T.push(k(5*t,0,!e.invertDirection));const n=u(h.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:r}=t,o=t.pixels[0],s=t.pixels[1],a=[],c=[];let f=0,p=0;for(let t=0;t<l;t++)for(let e=0;e<i;e++){const h=t*i+e,u=o[h]*n;if((!r||r[t*i+e])&&u>=5){const n=(s[h]+360)%360/180*Math.PI,{pennants:r,barbs:o,shaft:d}=T[Math.min(Math.floor(u/5),29)];if(r.length+o.length===0)continue;let m=a.length/6;const x=(e+.5)/i,g=(t+.5)/l;for(let t=0;t<r.length;t+=2)a[f++]=x,a[f++]=g,a[f++]=r[t],a[f++]=r[t+1]+n,a[f++]=0,a[f++]=u;for(let t=0;t<o.length;t+=2)a[f++]=x,a[f++]=g,a[f++]=o[t],a[f++]=o[t+1]+n,a[f++]=0,a[f++]=u;for(let t=0;t<d.length;t+=2)a[f++]=x,a[f++]=g,a[f++]=d[t],a[f++]=d[t+1]+n,a[f++]=0,a[f++]=u;for(let t=0;t<r.length/6;t++)c[p++]=m,c[p++]=m+1,c[p++]=m+2,m+=3;for(let t=0;t<o.length/8;t++)c[p++]=m,c[p++]=m+1,c[p++]=m+2,c[p++]=m+1,c[p++]=m+2,c[p++]=m+3,m+=4;c[p++]=m+0,c[p++]=m+1,c[p++]=m+2,c[p++]=m+1,c[p++]=m+3,c[p++]=m+2,m+=4}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(c)}}(t,e):function(t,e){const{style:n,inputUnit:i,outputUnit:l,breakValues:r}=e,o=h.fromJSON(i),s=h.fromJSON(l);let a=0,u=0;const{width:c,height:f,mask:p}=t,d=t.pixels[0],m=t.pixels[1],x=null!=p?p.filter((t=>t>0)).length:c*f,g=new Float32Array(42*x),k=new Uint32Array(15*x),M=e.invertDirection?w(0,0,0,!1):y;for(let t=0;t<f;t++)for(let e=0;e<c;e++){const i=t*c+e;if(!p||p[t*c+e]){const l=(m[i]+360)%360/180*Math.PI,h=P(d[i],n,o,s,r);for(let n=0;n<M.length;n+=2)g[a++]=(e+.5)/c,g[a++]=(t+.5)/f,g[a++]=M[n],g[a++]=M[n+1]+l,g[a++]=h,g[a++]=d[i];const p=7*(a/42-1);k[u++]=p,k[u++]=p+1,k[u++]=p+2,k[u++]=p+0,k[u++]=p+4,k[u++]=p+3,k[u++]=p+0,k[u++]=p+2,k[u++]=p+3,k[u++]=p+2,k[u++]=p+5,k[u++]=p+3,k[u++]=p+5,k[u++]=p+6,k[u++]=p+3}}return{vertexData:g,indexData:k}}(t,e)}function S(t,e,n,i=[0,0],l=.5){const{width:o,height:s,mask:a}=t,[h,u]=t.pixels,[c,d]=i,m=Math.round((o-c)/n),x=Math.round((s-d)/n),g=m*x,y=new Float32Array(g),w=new Float32Array(g),k=new Uint8Array(g),M="vector-uv"===e;for(let t=0;t<x;t++)for(let e=0;e<m;e++){let i=0;const r=t*m+e,x=Math.max(0,t*n+d),g=Math.max(0,e*n+c),A=Math.min(s,x+n),v=Math.min(o,g+n);for(let t=x;t<A;t++)for(let e=g;e<v;e++){const n=t*o+e;if(!a||a[n]){i++;const t=M?[h[n],u[n]]:[h[n],(360+u[n])%360],[e,l]=M?t:p(t);y[r]+=e,w[r]+=l}}if(i>=(A-x)*(v-g)*(1-l)){k[r]=1;const[t,e]=f([y[r]/i,w[r]/i]);y[r]=t,w[r]=e}else k[r]=0,y[r]=0,w[r]=0}const A=new(0,r.default)({width:m,height:x,pixels:[y,w],mask:k});return A.updateStatistics(),A}})),e.register("k8DEI",(function(n,i){t(n.exports,"createFlowMesh",(function(){return f})),t(n.exports,"loadImagery",(function(){return m})),e("2ILM8");var l=e("2VlWd"),r=e("jHOLN"),o=e("iVfa0"),s=e("10vEZ"),a=e("hvORu"),h=e("eY5Yp"),u=e("gINRd");const c=r.default.getLogger("esri.views.2d.engine.flow.dataUtils");async function f(t,e,n,i){const r=performance.now(),o=function(t,e){const n=function(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),r=new Array(2*l+1);let o=0;for(let t=-l;t<=l;t++){const e=Math.exp(-t*t/(i*i));r[t+l]=e,o+=e}for(let t=-l;t<=l;t++)r[t+l]/=o;const s=new Float32Array(t.length);for(let i=0;i<n;i++)for(let n=0;n<e;n++){let o=0,a=0;for(let s=-l;s<=l;s++){if(n+s<0||n+s>=e)continue;const h=r[s+l];o+=h*t[2*(i*e+(n+s))],a+=h*t[2*(i*e+(n+s))+1]}s[2*(i*e+n)]=o,s[2*(i*e+n)+1]=a}const a=new Float32Array(t.length);for(let t=0;t<e;t++)for(let i=0;i<n;i++){let o=0,h=0;for(let a=-l;a<=l;a++){if(i+a<0||i+a>=n)continue;const u=r[a+l];o+=u*s[2*((i+a)*e+t)],h+=u*s[2*((i+a)*e+t)+1]}a[2*(i*e+t)]=o,a[2*(i*e+t)+1]=h}return a}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),r=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(r<0||r>=e.height)return[0,0];const o=t-l,s=i-r,a=l,h=r,u=l<e.width-1?l+1:l,c=r<e.height-1?r+1:r,f=n[2*(h*e.width+a)],p=n[2*(h*e.width+u)],d=n[2*(c*e.width+a)],m=n[2*(c*e.width+u)],x=n[2*(h*e.width+a)+1],g=n[2*(h*e.width+u)+1];return[(f*(1-s)+d*s)*(1-o)+(p*(1-s)+m*s)*o,(x*(1-s)+n[2*(c*e.width+a)+1]*s)*(1-o)+(g*(1-s)+n[2*(c*e.width+u)+1]*s)*o]}:(t,i)=>{const l=Math.round(t),r=Math.round(i);return l<0||l>=e.width||r<0||r>=e.height?[0,0]:[n[2*(r*e.width+l)],n[2*(r*e.width+l)+1]]}}(e,n),h=performance.now(),u=function(t,e,n,i){const l=[],r=new(0,a.default),o=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*o),h=Math.round(i*o),u=new Int32Array(s*h);for(let t=0;t<u.length;t++)u[t]=-1;const c=[];for(let e=0;e<i;e+=t.lineSpacing)for(let i=0;i<n;i+=t.lineSpacing)c.push({x:i,y:e,sort:r.getFloat()});c.sort(((t,e)=>t.sort-e.sort));for(const{x:n,y:i}of c)if(r.getFloat()<t.density){const r=p(t,e,n,i,l.length,u,s,h,o);if(r.length<2)continue;l.push(r)}return l}(e,o,n.width,n.height),f=performance.now(),d=function(t,e){const n=new(0,a.default),i=t.reduce(((t,e)=>t+e.length),0),l=new Float32Array(4*i),r=new Array(t.length);let o=0,s=0;for(const i of t){const t=o;for(const t of i)l[4*o]=t.x,l[4*o+1]=t.y,l[4*o+2]=t.t,l[4*o+3]=t.speed,o++;r[s++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:r}}(u,!0),m=performance.now(),x="Streamlines"===t?function(t,e){const n=9,{lineVertices:i,lineDescriptors:l}=t;let r=0,o=0;for(const t of l)r+=2*t.numberOfVertices,o+=6*(t.numberOfVertices-1);const s=new Float32Array(r*n),a=new Uint32Array(o);let h=0,u=0;function c(){a[u++]=h-2,a[u++]=h,a[u++]=h-1,a[u++]=h,a[u++]=h+1,a[u++]=h-1}function f(t,e,i,l,r,o,a,u){const c=h*n;let f=0;s[c+f++]=t,s[c+f++]=e,s[c+f++]=1,s[c+f++]=i,s[c+f++]=o,s[c+f++]=a,s[c+f++]=l/2,s[c+f++]=r/2,s[c+f++]=u,h++,s[c+f++]=t,s[c+f++]=e,s[c+f++]=-1,s[c+f++]=i,s[c+f++]=o,s[c+f++]=a,s[c+f++]=-l/2,s[c+f++]=-r/2,s[c+f++]=u,h++}for(const t of l){const{totalTime:n,timeSeed:l}=t;let r=null,o=null,s=null,a=null,h=null,u=null;for(let p=0;p<t.numberOfVertices;p++){const d=i[4*(t.startVertex+p)],m=i[4*(t.startVertex+p)+1],x=i[4*(t.startVertex+p)+2],g=i[4*(t.startVertex+p)+3];let y=null,w=null,k=null,M=null;if(p>0){y=d-r,w=m-o;const t=Math.sqrt(y*y+w*w);if(y/=t,w/=t,p>1){let t=y+h,n=w+u;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*y+n*w),e);t*=l,n*=l,k=-n,M=t}else k=-w,M=y;null!==k&&null!==M&&(f(r,o,s,k,M,n,l,g),c())}r=d,o=m,s=x,h=y,u=w,a=g}f(r,o,s,-u,h,n,l,a)}return{vertexData:s,indexData:a}}(d,10):function(t){const e=16,n=1,i=2,{lineVertices:l,lineDescriptors:r}=t;let o=0,s=0;for(const t of r){const e=t.numberOfVertices-1;o+=4*e*2,s+=6*e*2}const a=new Float32Array(o*e),h=new Uint32Array(s);let u,c,f,p,d,m,x,g,y,w,k,M,A,v,b=0,U=0;function P(){h[U++]=b-8,h[U++]=b-7,h[U++]=b-6,h[U++]=b-7,h[U++]=b-5,h[U++]=b-6,h[U++]=b-4,h[U++]=b-3,h[U++]=b-2,h[U++]=b-3,h[U++]=b-1,h[U++]=b-2}function T(t,l,r,o,s,h,u,c,f,p,d,m,x,g){const y=b*e;let w=0;for(const e of[n,i])for(const n of[1,2,3,4])a[y+w++]=t,a[y+w++]=l,a[y+w++]=r,a[y+w++]=o,a[y+w++]=u,a[y+w++]=c,a[y+w++]=f,a[y+w++]=p,a[y+w++]=e,a[y+w++]=n,a[y+w++]=x,a[y+w++]=g,a[y+w++]=s/2,a[y+w++]=h/2,a[y+w++]=d/2,a[y+w++]=m/2,b++}function I(t,e){let n=y+k,i=w+M;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const r=y*n+w*i;n/=r,i/=r;let o=k+A,s=M+v;const a=Math.sqrt(o*o+s*s);o/=a,s/=a;const h=k*o+M*s;o/=h,s/=h,T(u,c,f,p,-i,n,d,m,x,g,-s,o,t,e),P()}function B(t,e,n,i,l,r){if(y=k,w=M,k=A,M=v,null==y&&null==w&&(y=k,w=M),null!=d&&null!=m){A=t-d,v=e-m;const n=Math.sqrt(A*A+v*v);A/=n,v/=n}null!=y&&null!=w&&I(l,r),u=d,c=m,f=x,p=g,d=t,m=e,x=n,g=i}function S(t,e){y=k,w=M,k=A,M=v,null==y&&null==w&&(y=k,w=M),null!=y&&null!=w&&I(t,e)}for(const t of r){u=null,c=null,f=null,p=null,d=null,m=null,x=null,g=null,y=null,w=null,k=null,M=null,A=null,v=null;const{totalTime:e,timeSeed:n}=t;for(let i=0;i<t.numberOfVertices;i++)B(l[4*(t.startVertex+i)],l[4*(t.startVertex+i)+1],l[4*(t.startVertex+i)+2],l[4*(t.startVertex+i)+3],e,n);S(e,n)}return{vertexData:a,indexData:h}}(d),g=performance.now();return(0,l.default)("esri-2d-profiler")&&(c.info("I.1","_createFlowFieldFromData (ms)",Math.round(h-r)),c.info("I.2","_getStreamlines (ms)",Math.round(f-h)),c.info("I.3","createAnimatedLinesData (ms)",Math.round(m-f)),c.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(g-m)),c.info("I.5","createFlowMesh (ms)",Math.round(g-r)),c.info("I.6","Mesh size (bytes)",x.vertexData.buffer.byteLength+x.indexData.buffer.byteLength)),await Promise.resolve(),(0,s.throwIfAborted)(i),x}function p(t,e,n,i,l,r,o,s,a){const h=[];let u=n,c=i,f=0,[p,d]=e(u,c);p*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(p*p+d*d);let x,g;h.push({x:u,y:c,t:f,speed:m});for(let n=0;n<t.verticesPerLine;n++){let[n,i]=e(u,c);n*=t.velocityScale,i*=t.velocityScale;const p=Math.sqrt(n*n+i*i);if(p<t.minSpeedThreshold)return h;const d=n/p,m=i/p;if(u+=d*t.segmentLength,c+=m*t.segmentLength,f+=t.segmentLength/p,Math.acos(d*x+m*g)>t.maxTurnAngle)return h;if(t.collisions){const t=Math.round(u*a),e=Math.round(c*a);if(t<0||t>o-1||e<0||e>s-1)return h;const n=r[e*o+t];if(-1!==n&&n!==l)return h;r[e*o+t]=l}h.push({x:u,y:c,t:f,speed:p}),x=d,g=m}return h}function d(t,e){const n=e.pixels,{width:i,height:l}=e,r=new Float32Array(i*l*2),s=e.mask||new Uint8Array(i*l*2);if(e.mask||s.fill(255),"vector-uv"===t)for(let t=0;t<i*l;t++)r[2*t]=n[0][t],r[2*t+1]=-n[1][t];else if("vector-magdir"===t)for(let t=0;t<i*l;t++){const e=n[0][t],i=(0,o.deg2rad)(n[1][t]),l=Math.cos(i-Math.PI/2),s=Math.sin(i-Math.PI/2);r[2*t]=l*e,r[2*t+1]=s*e}return{data:r,mask:s,width:i,height:l}}async function m(t,e,n,i,r,o){const s=performance.now(),a=(0,h.getInfo)(e.spatialReference);if(!a){const a=await x(t,e,n,i,r,o);return(0,l.default)("esri-2d-profiler")&&c.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-s)),(0,l.default)("esri-2d-profiler")&&c.info("I.9","Number of parts",1),a}const[f,p]=a.valid,d=p-f,m=Math.ceil(e.width/d),g=e.width/m,y=Math.round(n/m);let w=e.xmin;const k=[],M=performance.now();for(let n=0;n<m;n++){const n=new(0,u.default)({xmin:w,xmax:w+g,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});k.push(x(t,n,y,i,r,o)),w+=g}const A=await Promise.all(k);(0,l.default)("esri-2d-profiler")&&c.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-M)),(0,l.default)("esri-2d-profiler")&&c.info("I.9","Number of parts",A.length);const v={data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i};let b=0;for(const t of A){for(let e=0;e<t.height;e++)for(let i=0;i<t.width;i++)b+i>=n||(v.data[2*(e*n+b+i)]=t.data[2*(e*t.width+i)],v.data[2*(e*n+b+i)+1]=t.data[2*(e*t.width+i)+1],v.mask[e*n+b+i]=t.mask[e*t.width+i]);b+=t.width}return(0,l.default)("esri-2d-profiler")&&c.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-s)),v}async function x(t,e,n,i,l,r){const o={requestProjectedLocalDirections:!0,signal:r};if(null!=l&&(o.timeExtent=l),"imagery"===t.type){await t.load({signal:r});const l=t.rasterInfo.dataType,s=await t.fetchImage(e,n,i,o);return s&&null!=s.pixelData&&null!=s.pixelData.pixelBlock?d(l,s.pixelData.pixelBlock):{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}}await t.load({signal:r});const s=t.rasterInfo.dataType,a=await t.fetchPixels(e,n,i,o);return a&&null!=a.pixelBlock?d(s,a.pixelBlock):{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}}}))}();
//# sourceMappingURL=RasterWorker.a5289e84.js.map
