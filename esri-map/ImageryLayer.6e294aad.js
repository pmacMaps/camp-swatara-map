!function(){function e(e,t,r,i){Object.defineProperty(e,t,{get:r,set:i,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("hIQZ6",(function(r,i){var n;n=r.exports,Object.defineProperty(n,"__esModule",{value:!0,configurable:!0}),e(r.exports,"default",(function(){return N}));var a=t("7eJjO"),s=t("3MVX3"),o=t("7qybv"),l=t("8NioF"),u=t("10vEZ"),p=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var c=t("fcwIv"),d=t("kced1"),m=t("4LDxK"),y=t("oCYs9"),f=t("aLy89"),h=t("gIXJ2"),g=t("cv2jJ"),v=t("5N5S1"),R=t("9bAYR"),b=t("13Qxf"),S=t("3GzOb"),w=t("2t08e"),_=t("gRgX5"),x=t("iaMRW"),I=t("37qRo");let F=class extends((0,h.BlendLayer)((0,w.TemporalLayer)((0,b.RefreshableLayer)((0,S.ScaleRangeLayer)((0,v.OperationalLayer)((0,R.PortalLayer)((0,y.ArcGISImageService)((0,g.CustomParametersMixin)((0,f.ArcGISService)((0,l.MultiOriginJSONMixin)(m.default))))))))))){normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.isSome)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.throwIfAbortError).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const n="vector-field"===(null===(i=this.renderer)||void 0===i?void 0:i.type);t[r]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let n=!1,a=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const s=new Set;n&&s.add("raster.itempixelvalue");for(const e of t){const t=e.name.toLowerCase();s.has(t)||t.includes("raster.servicepixelvalue.")||i.add(e.name)}return a&&i.add("raster.magnitude").add("raster.direction"),(0,I.createPopupTemplate)({fields:t,title:r},{...e,visibleFieldNames:i})}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(null==e?void 0:e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return(0,x.serviceSupportsSpatialReference)(this,e)}constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}};(0,a._)([(0,p.property)(_.legendEnabled)],F.prototype,"legendEnabled",void 0),(0,a._)([(0,p.property)({type:["show","hide"]})],F.prototype,"listMode",void 0),(0,a._)([(0,p.property)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],F.prototype,"isReference",void 0),(0,a._)([(0,p.property)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],F.prototype,"operationalLayerType",void 0),(0,a._)([(0,d.writer)("web-map","operationalLayerType")],F.prototype,"writeOperationalLayerType",null),(0,a._)([(0,p.property)(_.popupEnabled)],F.prototype,"popupEnabled",void 0),(0,a._)([(0,p.property)({type:s.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],F.prototype,"popupTemplate",void 0),(0,a._)([(0,p.property)({readOnly:!0})],F.prototype,"defaultPopupTemplate",null),(0,a._)([(0,p.property)({readOnly:!0,json:{read:!1}})],F.prototype,"type",void 0),F=(0,a._)([(0,c.subclass)("esri.layers.ImageryLayer")],F);const N=F})),t.register("oCYs9",(function(r,i){e(r.exports,"ArcGISImageService",(function(){return se}));var n=t("7eJjO");t("2ILM8");var a=t("bsvXr"),s=t("3uTA1"),o=t("9pNSx"),l=t("kyj08"),u=t("79ASa"),p=t("flPLJ"),c=t("jHOLN"),d=t("7qybv"),m=t("10vEZ"),y=t("lKPaD"),f=t("kYueh"),h=t("kDa5L"),g=t("iJAIC"),v=t("iho5X"),R=t("eB8sj"),b=t("fcwIv"),S=t("kced1"),w=t("gRgX5"),_=t("d3QQf"),x=t("lRRkV"),I=t("buMuJ"),F=t("4nMX7"),N=t("7aqvn"),T=t("4wYsD"),D=t("idX6c"),C=t("5Lo1P"),P=t("EvgSL"),O=t("d0bii"),V=t("1399j"),j=t("9m6jq"),M=t("2G55A"),A=t("2hwKJ"),J=t("hlKjZ"),L=t("frUQM"),q=t("jDbIP");t("2VlWd"),t("eSq8i");var E=t("3UMgP");t("5vzSQ"),t("eY5Yp"),t("akQYU");var z=t("gINRd");t("Pe3X5"),t("eaHvJ"),t("d1Fqh");var k=t("fTq43");t("95Tg0"),t("5On35"),t("acan7");var H=t("f4h86"),U=t("cRlei");t("dLARP"),t("crcVj"),t("lYvo2");var Q=t("8iXHs"),B=t("1d1jX");t("8g8vH"),t("7D30I");var G=t("61FIV"),W=t("hkbLU"),X=t("jhL3I"),K=t("lcqcF"),Z=t("bTXe6"),Y=t("7Z6eW"),$=t("4Rnpy"),ee=t("k8DEI"),te=t("j40xv");const re=c.default.getLogger("esri.layers.mixins.ArcGISImageService"),ie=(0,u.strict)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),ne=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ae=(0,v.ensureRange)(g.ensureNumber,{min:0,max:255});const se=e=>{let t=class extends e{initialize(){this._set("exportImageServiceParameters",new(0,x.ExportImageServiceParameters)({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?T.default.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,d.isSome)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,d.isSome)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new(0,F.default)(this.fields):null}set format(e){e&&ne.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=T.default.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?T.default.fromJSON(r):this._isMosaicRuleSupported(t)?T.default.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new(0,T.default)({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ae(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,f.urlToObject)(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){var i,n;const a=null==t||null===(i=t.layerDefinition)||void 0===i||null===(n=i.drawingInfo)||void 0===n?void 0:n.renderer,o=(0,s.read)(a,r);return null==o?null:("vector-field"===o.type&&t.symbolTileSize&&!a.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),(0,N.isSupportedRendererType)(o)||re.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),o)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new(0,I.default)({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new(0,I.default)({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new(0,I.default)({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,p.clone)(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&(0,d.isSome)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),(0,d.isSome)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new(0,I.default)({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(n.push(new(0,I.default)({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new(0,I.default)({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){const t=a.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=(0,p.clone)(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=P.default.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?P.default.fromJSON({rasterFunctionDefinition:t.renderingRule}):P.default.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?te.default.fromJSON(r):null}readPixelType(e){return ie.fromJSON(e)||e}writePixelType(e,t,r){((0,d.isNone)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ie.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:a}=this;if(n){i&&(this.symbolizer.bind(),await n.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await n.symbolize({bandIds:a,...e},t);r={extent:e.extent,pixelBlock:s}}else r={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:a,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new(0,l.default)("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,g.ensureClass)(X.default,e).clone(),(0,q.computeAngles)(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new(0,l.default)("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,g.ensureClass)(Y.default,e).clone(),(0,q.computePixelSpaceLocations)(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new(0,l.default)("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,g.ensureClass)(K.default,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),(0,q.computeHistograms)(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new(0,l.default)("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,g.ensureClass)(K.default,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),(0,q.computeStatisticsHistograms)(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return(0,d.isSome)(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new(0,l.default)("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return(0,m.when)(n).then((n=>{n&&(this.rasterInfo=n);const a={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(a)}))}fetchKeyProperties(e){return(0,o.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new(0,l.default)("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,o.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>H.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return(0,W.getCatalogItemRasterInfo)(this.parsedUrl.path,e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,o.default)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(await(0,o.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?(0,o.default)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},s=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},u=(0,o.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=(n.xmin+n.xmax)/2,c=(n.ymax-n.ymin)/6,d=n.ymin+c,m=[];for(let e=0;e<5;e++)m.push({x:p,y:d+c*e});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},f=(0,o.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(y),...t}).then((e=>e.data)).catch((()=>({}))),h=await Promise.all([a,u,f]);let g=h[0].ipxf;if(null==g){var v,R,b;const e=null===(v=i.geodataXform)||void 0===v?void 0:v.xf_0;"topup"===(null==e||null===(R=e.name)||void 0===R?void 0:R.toLowerCase())&&6===(null==e||null===(b=e.coefficients)||void 0===b?void 0:b.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const S=z.default.fromJSON(h[1]&&h[1].geometries&&h[1].geometries[0]);S&&(S.spatialReference=new(0,te.default)({wkid:0,imageCoordinateSystem:i}));const w=h[2].geometries?h[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],_=w.length;if(_<3)return{ics:i,icsToPixelTransform:g,icsExtent:S,northDirection:null};let x=0,I=0,F=0,N=0;for(let e=0;e<_;e++)x+=w[e].x,I+=w[e].y,F+=w[e].x*w[e].x,N+=w[e].x*w[e].y;const T=(_*N-x*I)/(_*F-x*x);let D=0;const C=w[4].x>w[0].x,P=w[4].y>w[0].y;return T===1/0?D=P?90:270:0===T?D=C?0:180:T>0?D=C?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(D=P?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:g,icsExtent:S,northDirection:D}}async generateRasterInfo(e,t){var r;if((!e||"none"===(null==e||null===(r=e.functionName)||void 0===r?void 0:r.toLowerCase())||this._isVectorFieldResampleFunction(e))&&(0,d.isSome)(this.serviceRasterInfo))return this.serviceRasterInfo;const i=function(e){var t;if(!e)return null;const r=null===(t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi))||void 0===t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const n=this._generateRasterInfo(e,t);this._functionRasterInfos[i]=n;try{return await n}catch{return this._functionRasterInfos[i]=null,null}}getExportImageServiceParameters(e,t,r,i){var n;e=e.clone().shiftCentralMeridian();const a=(0,q.getImageSpatialReferenceQueryParameter)(e.spatialReference,this.parsedUrl.path);(0,d.isSome)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const s=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=s;let{renderingRule:u}=s;const p=null===(n=this.renderingRule)||void 0===n?void 0:n.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if((null==o?void 0:o.length)&&this._hasRenderingRule(this.renderingRule)&&!p&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;s.bandIds=void 0}else s.bandIds=null==o?void 0:o.join(",");l instanceof Array&&l.length>0&&(s.noData=l.join(","));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;s.mosaicRule=m&&JSON.stringify(m),s.renderingRule=this._getRenderingRuleString(P.default.fromJSON(u));const y={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?y.time=""+e:null==e&&null==t||(y.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...s,...y}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new(0,l.default)("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,g.ensureClass)($.default,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),(0,q.getSamples)(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new(0,l.default)("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,g.ensureClass)(Z.default,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;if(n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=(0,d.unwrap)(t)}return r&&null==e.raster&&(e.raster=r),(0,q.identify)(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new(0,U.default);return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,E.executeQueryJSON)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,B.executeForIds)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Q.executeForCount)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new(0,l.default)("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let s=!1,o=null,u=null;const p="raster.servicepixelvalue",c=this.rasterFunctionNamesIndex;if((0,d.isSome)(e.outFields)&&(s=e.outFields.some((e=>!e.toLowerCase().includes(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(p)&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));o=t.map((e=>new(0,P.default)({functionName:e[0]}))),u=t.map((e=>e[1])),0===o.length?this.renderingRule?(o.push(this.renderingRule),u.push(this.renderingRule.functionName)):o=null:this.renderingRule&&!o.some((e=>e.functionName===this.renderingRule.functionName))&&(o.push(this.renderingRule),u.push(this.renderingRule.functionName))}const m=(0,d.isNone)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),y=e.timeExtent||this.timeExtent,f=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y),h=this._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:f,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:o,pixelSize:r,returnCatalogItems:s,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete h.f;const g=new(0,Z.default)(h);try{var v,R;await this.generateRasterInfo(this.renderingRule);const r=await(0,q.identify)(this.url,g,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}),n=e.outFields,o=r.value.toLowerCase().includes("nodata");if(!s||m||!(null==r||null===(v=r.catalogItems)||void 0===v?void 0:v.features.length)||!a&&o)return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:n});const l=this.objectIdField||"ObjectId",p=r.catalogItems.features,c=p.map((e=>{var t;return null===(t=e.attributes)||void 0===t?void 0:t[l]})),y=new(0,U.default)({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),f=await this.queryRasters(y);return(null==f||null===(R=f.features)||void 0===R?void 0:R.length)&&f.features.forEach((t=>{p.forEach((r=>{r.attributes[l]===t.attributes[l]&&(r.geometry=new(0,k.default)(t.geometry),(0,d.isSome)(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:n})}catch{throw new(0,l.default)("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,o.default)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),i=(0,o.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),n=await Promise.all([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):(0,ee.createFlowMesh)(e.meshType,e.simulationSettings,e.flowData,(0,d.isSome)(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),(0,d.isSome)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=(0,d.isSome)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):(0,G.fetchServiceRasterInfo)(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,i,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),re.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.own((0,y.watch)((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))})));const{serviceRasterInfo:t}=this;(0,d.isSome)(t)&&t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){var r;const i=this.timeInfo;if((0,d.isNone)(e)||(0,d.isNone)(this.multidimensionalInfo)||(0,d.isNone)(t)||(0,d.isNone)(null==i?void 0:i.startField))return e;const{startField:n}=i,a=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===n))))?n:"StdTime";if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null===(r=e.multidimensionalDefinition)||void 0===r?void 0:r.filter((e=>e.dimensionName!==a)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const s=e.multidimensionalDefinition.filter((e=>e.dimensionName===a)),o=(0,d.isSome)(t.start)?t.start.getTime():null,l=(0,d.isSome)(t.end)?t.end.getTime():null,u=null==o||null==l||o===l,p=u?[o||l]:[[o,l]],c=this.version>=10.8;if(s.length)s.forEach((e=>{e.dimensionName===a&&(c?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=u,e.values=p))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=a,e.isSlice=u,e.values=p})):e.multidimensionalDefinition.push(new(0,_.default)({variableName:"",dimensionName:a,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,d.isNone)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new(0,l.default)("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,d.isSome)(e)?(0,g.ensureClass)(U.default,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new(0,V.default);this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||(0,J.getSupportedRendererTypes)(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await(0,o.default)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null===(t=r.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new(0,l.default)("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null===(t=e.fields)||void 0===t?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null===(t=e.fields)||void 0===t?void 0:t.length)>1);return r||i}_isVectorFieldResampleFunction(e){if((0,d.isNone)(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===(null==t?void 0:t.toLowerCase()),n=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){var t,r;if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=(0,J.getDefaultBandCombination)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,J.createDefaultRenderer)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null===(t=this.mosaicRule)||void 0===t||null===(r=t.multidimensionalDefinition)||void 0===r?void 0:r[0].variableName}));const i=(0,J.normalizeRendererJSON)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new(0,L.default)({rendererJSON:i,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,d.isSome)(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){(0,d.isSome)(null==e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,M.decode)(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:null===(r=(await(0,o.default)(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)||void 0===r?void 0:r.rasterFunctionInfos:null;var r}async _requestArrayBuffer(e){var t;const{imageProps:r,requestAsImageElement:i,signal:n}=e;if(i&&!this.pixelFilter&&(null===(t=r.format)||void 0===t?void 0:t.indexOf("png"))>-1)return{imageElement:(await(0,o.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n})).data,params:r};const a=this._initJobHandler(),s=(0,o.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),u=(await Promise.all([s,a]))[0].data,p=r.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,M.getFormat)(u)),!c)throw new(0,l.default)("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const d={signal:n},m="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,M.decode)(u,{useCanvas:!0,...r},d):this._decodePixelBlock(u,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:p},d);return{pixelData:{pixelBlock:await m,extent:r.extent},params:r}}_generateRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return(0,G.generateRasterInfo)(this.parsedUrl.path,e,r)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null===(t=this._defaultServiceMosaicRule)||void 0===t?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,j.getDefaultMultidimensionalDefinition)(e);if((0,d.isSome)(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new(0,T.default);const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",m="string"==typeof r&&r.toLowerCase().includes("nodata"),y=[];if(r&&!u&&!m){const e={};e[c]=0,p=[r],u=[new(0,a.default)(this.fullExtent,null,e)]}if(!u)return[];let f,h,g;this._updateResponseFieldNames(u,o),m&&!n&&(u=[]);for(let e=0;e<u.length;e++){if(f=u[e],null!=r){if(h=p[e],g=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.includes(this.renderingRule.functionName)?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===h.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",a="Raster.ServicePixelValue";f.attributes[t]=h,f.attributes[a]=g,this._updateFeatureWithMagDirValues(f,h);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&(0,d.isSome)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?s?h:r:g;this.renderingRule||(o=s?h:r),this._updateFeatureWithRasterAttributeTableValues(f,o)}if(f.sourceLayer=f.layer=this,s&&this._updateFeatureWithDomainValues(f),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];f.attributes[t]=l[e]}y.push(u[e])}return y}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,d.isSome)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const n=r.fields,a=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),s=a&&a[0];if(!s)return;const o=i.filter((e=>e.attributes[s]===(null!=t?parseInt(t,10):null)));o&&o[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=o[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),a=new(0,D.default)({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new(0,z.default)(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:(0,A.uvComponentToVector)([a.pixels[0][0],a.pixels[1][0]]);e.attributes["Raster.Magnitude"]=s[0],e.attributes["Raster.Direction"]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;(0,d.isNone)(r)||e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let r=e.toJSON();var t;return r=null!==(t=r.rasterFunctionDefinition)&&void 0!==t?t:r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,a=t.includes("image"),s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:a,supportsExportImage:a,supportsIdentify:a,supportsMeasure:t.includes("mensuration")&&o,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&a,supportsProject:r>=10.3&&a,supportsComputeStatisticsHistograms:r>=10.4&&a,supportsQueryBoundary:r>=10.6&&a,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!!(null==i?void 0:i.supportsStatistics),supportsOrderBy:!!(null==i?void 0:i.supportsOrderBy),supportsDistinct:!!(null==i?void 0:i.supportsDistinct),supportsPagination:!!(null==i?void 0:i.supportsPagination),supportsStandardizedQueriesOnly:!!(null==i?void 0:i.useStandardizedQueries),supportsPercentileStatistics:!!(null==i?void 0:i.supportsPercentileStatistics),supportsCentroid:!!(null==i?void 0:i.supportsReturningGeometryCentroid),supportsDistance:!!(null==i?void 0:i.supportsQueryWithDistance),supportsExtent:!!(null==i?void 0:i.supportsReturningQueryExtent),supportsGeometryProperties:!!(null==i?void 0:i.supportsReturningGeometryProperties),supportsHavingClause:!!(null==i?void 0:i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(null==i?void 0:i.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}};return(0,n._)([(0,v.property)()],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,v.property)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,v.property)({dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"_defaultServiceMosaicRule",void 0),(0,n._)([(0,R.reader)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),(0,n._)([(0,v.property)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"_serviceSourceType",void 0),(0,n._)([(0,R.reader)("_serviceSourceType",["serviceSourceType","fields"])],t.prototype,"readServiceSourceType",null),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,n._)([(0,R.reader)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,n._)([(0,v.property)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),(0,n._)([(0,v.property)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,v.property)({readOnly:!0}),(0,h.aliasOf)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),(0,n._)([(0,v.property)({type:[g.Integer],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,R.reader)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,v.property)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,R.reader)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,v.property)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,S.writer)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,v.property)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,S.writer)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,v.property)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,v.property)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,v.property)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,v.property)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,v.property)({readOnly:!0,type:[I.default]})],t.prototype,"fields",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n._)([(0,v.property)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,R.reader)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,v.property)({type:z.default})],t.prototype,"fullExtent",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,v.property)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,v.property)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,v.property)({type:String,json:{type:C.interpolationKebab.jsonValues,read:C.interpolationKebab.read,write:C.interpolationKebab.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,v.property)()],t.prototype,"minScale",void 0),(0,n._)([(0,R.reader)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,v.property)()],t.prototype,"maxScale",void 0),(0,n._)([(0,R.reader)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,v.property)({type:T.default})],t.prototype,"mosaicRule",null),(0,n._)([(0,R.reader)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,S.writer)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,v.property)({readOnly:!0}),(0,h.aliasOf)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,v.property)({json:{type:g.Integer}})],t.prototype,"noData",void 0),(0,n._)([(0,S.writer)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,v.property)({type:String,json:{type:C.noDataInterpretationKebab.jsonValues,read:C.noDataInterpretationKebab.read,write:C.noDataInterpretationKebab.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,v.property)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,R.reader)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,v.property)({})],t.prototype,"geometryType",void 0),(0,n._)([(0,v.property)({})],t.prototype,"typeIdField",void 0),(0,n._)([(0,v.property)({})],t.prototype,"types",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n._)([(0,v.property)({readOnly:!0}),(0,h.aliasOf)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),(0,n._)([(0,v.property)({readOnly:!0}),(0,h.aliasOf)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),(0,n._)([(0,v.property)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,v.property)()],t.prototype,"raster",void 0),(0,n._)([(0,v.property)()],t.prototype,"viewId",void 0),(0,n._)([(0,v.property)({types:s.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:s.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,n._)([(0,R.reader)("renderer")],t.prototype,"readRenderer",null),(0,n._)([(0,S.writer)("renderer")],t.prototype,"writeRenderer",null),(0,n._)([(0,v.property)()],t.prototype,"symbolizer",void 0),(0,n._)([(0,v.property)(w.opacity)],t.prototype,"opacity",void 0),(0,n._)([(0,v.property)({readOnly:!0}),(0,h.aliasOf)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n._)([(0,v.property)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,v.property)({type:P.default})],t.prototype,"renderingRule",null),(0,n._)([(0,R.reader)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),(0,n._)([(0,S.writer)("renderingRule")],t.prototype,"writeRenderingRule",null),(0,n._)([(0,v.property)()],t.prototype,"serviceDataType",void 0),(0,n._)([(0,v.property)({readOnly:!0,type:te.default})],t.prototype,"spatialReference",void 0),(0,n._)([(0,R.reader)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,v.property)({json:{type:ie.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,R.reader)("pixelType")],t.prototype,"readPixelType",null),(0,n._)([(0,S.writer)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,v.property)({constructOnly:!0,type:O.default})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,v.property)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,v.property)(w.url)],t.prototype,"url",void 0),(0,n._)([(0,v.property)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,R.reader)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,b.subclass)("esri.layers.mixins.ArcGISImageService")],t),t}})),t.register("lRRkV",(function(r,i){e(r.exports,"ExportImageServiceParameters",(function(){return y}));var n=t("7eJjO"),a=t("1XAcN"),s=t("kDa5L");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("iho5X"),l=t("fcwIv"),u=t("kced1"),p=t("7aqvn"),c=t("4wYsD"),d=t("5Lo1P"),m=t("EvgSL");let y=class extends a.JSONSupport{writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){var e;return"vector-field"===(null===(e=this.layer.renderer)||void 0===e?void 0:e.type)?"lerc":this.layer.format}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new(0,c.default)({where:r})),t}get renderingRule(){var e;const t=this.layer;let r=t.renderingRule;const i=t.pixelFilter,n=!t.format||t.format.includes("jpg")||t.format.includes("png");return r=this._addResampleRasterFunction(r),n&&!i&&"vector-field"!==(null===(e=t.renderer)||void 0===e?void 0:e.type)&&(r=this.combineRendererWithRenderingRule()),r}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:n}=t;return n&&(0,p.isSupportedRendererType)(n)?(0,p.combineRenderingRules)((0,p.convertRendererToRenderingRule)(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null===(e=r.keyProperties)||void 0===e?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6,convertToRFT:!!(null==i?void 0:i.rasterFunctionDefinition)}),i):i}_addResampleRasterFunction(e){var t;if("vector-field"!==(null===(t=this.layer.renderer)||void 0===t?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;let i=new(0,m.default)({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return i=(null==e?void 0:e.rasterFunctionDefinition)?new(0,m.default)({rasterFunctionDefinition:(0,p.convertRenderingRuleToRFT)(i)}):i,(0,p.combineRenderingRules)(i,e)}constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}};(0,n._)([(0,o.property)()],y.prototype,"layer",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,u.writer)("adjustAspectRatio")],y.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,o.property)({json:{write:!0}}),(0,s.aliasOf)("layer.bandIds")],y.prototype,"bandIds",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"compression",void 0),(0,n._)([(0,o.property)({json:{write:!0}}),(0,s.aliasOf)("layer.compressionQuality")],y.prototype,"compressionQuality",void 0),(0,n._)([(0,u.writer)("compressionQuality")],y.prototype,"writeCompressionQuality",null),(0,n._)([(0,o.property)({json:{write:!0}}),(0,s.aliasOf)("layer.compressionTolerance")],y.prototype,"compressionTolerance",void 0),(0,n._)([(0,u.writer)("compressionTolerance")],y.prototype,"writeCompressionTolerance",null),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"format",null),(0,n._)([(0,o.property)({type:String,json:{read:{reader:d.interpolationKebab.read},write:{writer:d.interpolationKebab.write}}}),(0,s.aliasOf)("layer.interpolation")],y.prototype,"interpolation",void 0),(0,n._)([(0,o.property)({json:{write:!0}}),(0,s.aliasOf)("layer.noData")],y.prototype,"noData",void 0),(0,n._)([(0,o.property)({type:String,json:{read:{reader:d.noDataInterpretationKebab.read},write:{writer:d.noDataInterpretationKebab.write}}}),(0,s.aliasOf)("layer.noDataInterpretation")],y.prototype,"noDataInterpretation",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"pixelType",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"lercVersion",void 0),(0,n._)([(0,u.writer)("lercVersion")],y.prototype,"writeLercVersion",null),(0,n._)([(0,o.property)({type:Number})],y.prototype,"version",null),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"mosaicRule",null),(0,n._)([(0,o.property)({json:{write:!0}})],y.prototype,"renderingRule",null),y=(0,n._)([(0,l.subclass)("esri.layers.mixins.ExportImageServiceParameters")],y)})),t.register("7aqvn",(function(r,i){e(r.exports,"isSupportedRendererType",(function(){return m})),e(r.exports,"combineRenderingRules",(function(){return y})),e(r.exports,"convertRenderingRuleToRFT",(function(){return h})),e(r.exports,"convertRendererToRenderingRule",(function(){return g}));var n=t("flPLJ"),a=t("EvgSL"),s=t("lLFtZ"),o=t("g46yT"),l=t("g18KN"),u=t("2rUeJ");const p={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},c={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},d=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function m(e){return d.has(e.type)}function y(e,t){if(!e||!t)return(0,n.clone)(e||t);const r=(0,n.clone)(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),f(r.rasterFunctionDefinition.arguments,t)}else"none"!==t.functionName.toLowerCase()&&(v(r.functionArguments).Raster=t);return r}function f(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&f(e[r].arguments,t))}function h(e){const t=(0,n.clone)(s.schema[e.functionName+"Function"]),r=e.functionArguments;for(const e in r)"raster"===e.toLowerCase()?(t.arguments[e]=h(r[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=_(r[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=r[e];return t}function g(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=t.convertToRFT,i=new(0,a.default);i.functionName="Stretch";const n=R[l.stretchTypeJSONDict.toJSON(e.stretchType)],s="u8",u={StretchType:n,Statistics:w(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(u.Min=e.outputMin),null!=e.outputMax&&(u.Max=e.outputMax),n===R.standardDeviation?(u.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=s):n===R.percentClip?(u.MinPercent=e.minPercent,u.MaxPercent=e.maxPercent,i.outputPixelType=s):n===R.minMax?i.outputPixelType=s:n===R.sigmoid&&(u.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=u,i.variableName="Raster",e.colorRamp){const n=e.colorRamp,s=new(0,a.default);if(r)s.functionArguments={ColorRamp:(0,o.getRFxArgColorRampValue)(n)};else{const r=(0,o.getColorRampName)(n);if(r)s.functionArguments={colorRamp:r};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){var p;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null===(p=t.colorRamps)||void 0===p?void 0:p.length)&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,o.convertColorRampToColormap)(n,256)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=i,r?new(0,a.default)({rasterFunctionDefinition:h(s)}):s}return r?new(0,a.default)({rasterFunctionDefinition:h(i)}):i}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],s=[],o=1e-6,{pixelType:l,rasterAttributeTable:u}=t,p=u&&u.features,c=S(u);if(p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let n;i.a&&p.forEach((a=>{n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([a.attributes[c],i.r,i.g,i.b])}))}));const r=l?b(s,l):s,i=new(0,a.default);return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=r,i.variableName="Raster",t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:h(i)}):i}e.classBreakInfos.forEach(((e,t)=>{const a=e.symbol&&e.symbol.color;a.a?(0===t?r.push(e.minValue,e.maxValue+o):r.push(e.minValue+o,e.maxValue+o),i.push(t),s.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)}));const d=l?b(s,l):s,m=new(0,a.default);m.functionName="Remap",m.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},m.variableName="Raster";const y=new(0,a.default);return y.functionName="Colormap",y.functionArguments={Colormap:d,Raster:m},t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:h(y)}):y}(e,t);case"unique-value":return function(e,t){var r,i;const n=[],{pixelType:s,rasterAttributeTable:o}=t,l=o&&o.features,u=S(o),p=null===(r=e.defaultSymbol)||void 0===r||null===(i=r.color)||void 0===i?void 0:i.toRgb(),c=e.uniqueValueInfos;if(c)if(l){const t=new Map;c.forEach((e=>{var r;const i=e.value,n=null===(r=e.symbol.color)||void 0===r?void 0:r.toRgb();null!=i&&n&&t.set(String(i),n)}));const r=e.field;l.forEach((({attributes:e})=>{const i=String(e[r]),a=e[u];if(t.has(i)){const e=t.get(i);n.push([a,...e])}else p&&n.push([a,...p])}))}else for(let e=0;e<c.length;e++){const t=c[e],r=t.symbol.color,i=+t.value;if(null==r?void 0:r.a){if(isNaN(i))return null;n.push([i,r.r,r.g,r.b])}}const d=s&&n.length>0?b(n,s):n,m=new(0,a.default);return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=d,m.variableName="Raster",t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:h(m)}):m}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,n=i?b(r,i):r,s=new(0,a.default);return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:h(s)}):s}(e,t);case"vector-field":return function(e,t){const r=new(0,a.default);r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:n}=t,s="vector-uv"===i;let o,l;n&&2===n.length&&(o=n.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),l=n.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==o&&null!==o||(o=0,l=1);const p="arithmetic"===e.rotationType?1:2,d="flow-from"===e.flowRepresentation?0:1,m=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new(0,u.default),y={magnitudeBandID:o,directionBandID:l,isUVComponents:s,referenceSystem:p,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:c[e.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};return r.functionArguments=y,t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:h(r)}):r}(e,t);case"raster-shaded-relief":return function(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType)return new(0,a.default);const i=new(0,a.default);i.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,l={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(l.Azimuth=e.azimuth,l.Altitude=e.altitude),3===s&&(l.PSPower=e.pixelSizePower,l.PSZFactor=e.pixelSizeFactor),i.functionArguments=l,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?l.ColorRamp=(0,o.getRFxArgColorRampValue)(e.colorRamp):l.Colormap=(0,o.convertColorRampToColormap)(e.colorRamp,256)),r?new(0,a.default)({rasterFunctionDefinition:h(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function v(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?v(t.functionArguments):e}const R={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function b(e,t){const r=p[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function S(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function w(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}function _(e){const t=[],r=[];return e.forEach((e=>{t.push(e[0]),r.push((0,o.rgbaConvertTo32Bit)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:r}}})),t.register("EvgSL",(function(r,i){e(r.exports,"default",(function(){return b}));var n=t("7eJjO"),a=t("1XAcN"),s=t("flPLJ"),o=t("iho5X");t("iJAIC");var l,u=t("bSafx"),p=t("eB8sj"),c=t("fcwIv"),d=t("kced1");const m=new Set(["raster","raster2","dem","fillraster"]),y=new Set(["rasters"]),f=e=>e&&e.rasterFunction?R.fromJSON(e):e,h=e=>e&&e instanceof R?e.toJSON():e,g=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,v=e=>g(e)?new R(e):e;let R=l=class extends a.JSONSupport{set functionArguments(e){if(e){const t=Object.keys(e);if(t.some((t=>m.has(t.toLowerCase())&&g(e[t])))||t.some((t=>y.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some((e=>g(e)))))){e=(0,s.clone)(e);for(const r of t)m.has(r.toLowerCase())?e[r]=v(e[r]):y.has(r.toLowerCase())&&Array.isArray(e[r])&&(e[r]=e[r].map((e=>v(e))))}}this._set("functionArguments",e)}readFunctionArguments(e){return(e=>{if(null==e)return null;e=(0,s.clone)(e);const t={};for(const r of Object.keys(e))m.has(r.toLowerCase())?t[r]=f(e[r]):y.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(f):t[r]=e[r];return t})(e)}writeFunctionArguments(e,t,r){const i={};for(const t of Object.keys(e))m.has(t.toLowerCase())?i[t]=h(e[t]):y.has(t.toLowerCase())&&Array.isArray(e[t])?i[t]=e[t].map(h):i[t]=h(e[t]);t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunctionDefinition?t.rasterFunctionDefinition.name:t.rasterFunction)}clone(){return new l({functionName:this.functionName,functionArguments:(0,s.clone)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,s.clone)(this.rasterFunctionDefinition)})}constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}};(0,n._)([(0,o.property)({json:{type:Object,name:"rasterFunctionArguments"}})],R.prototype,"functionArguments",null),(0,n._)([(0,p.reader)("functionArguments")],R.prototype,"readFunctionArguments",null),(0,n._)([(0,d.writer)("functionArguments")],R.prototype,"writeFunctionArguments",null),(0,n._)([(0,o.property)({json:{type:String,write:{target:"rasterFunction"}}})],R.prototype,"functionName",void 0),(0,n._)([(0,p.reader)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],R.prototype,"readFunctionName",null),(0,n._)([(0,u.enumeration)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,o.property)({json:{default:"unknown"}})],R.prototype,"outputPixelType",void 0),(0,n._)([(0,o.property)({type:String,json:{read:!0,write:!0}})],R.prototype,"variableName",void 0),(0,n._)([(0,o.property)({type:Object,json:{name:"rasterFunctionDefinition"}})],R.prototype,"rasterFunctionDefinition",void 0),R=l=(0,n._)([(0,c.subclass)("esri.layers.support.RasterFunction")],R);const b=R})),t.register("lLFtZ",(function(t,r){e(t.exports,"schema",(function(){return i}));const i={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}}})),t.register("4wYsD",(function(r,i){e(r.exports,"default",(function(){return b}));var n,a=t("7eJjO"),s=t("79ASa"),o=t("1XAcN"),l=t("flPLJ"),u=t("iho5X"),p=t("ba18L"),c=t("eB8sj"),d=t("fcwIv"),m=t("iJAIC"),y=t("d1Fqh"),f=t("d3QQf"),h=t("EvgSL");const g=(0,s.strict)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),v=(0,s.strict)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let R=n=class extends o.JSONSupport{readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return v.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=r||(i?g.toJSON(i):null);return g.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new n({ascending:this.ascending,itemRenderingRule:(0,l.clone)(this.itemRenderingRule),lockRasterIds:(0,l.clone)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,l.clone)(this.multidimensionalDefinition),objectIds:(0,l.clone)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,l.clone)(this.viewpoint),where:this.where})}constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}};(0,a._)([(0,u.property)({type:Boolean,json:{write:!0}})],R.prototype,"ascending",void 0),(0,a._)([(0,c.reader)("ascending",["ascending","sortAscending"])],R.prototype,"readAscending",null),(0,a._)([(0,u.property)({type:h.default,json:{write:!0}})],R.prototype,"itemRenderingRule",void 0),(0,a._)([(0,u.property)({type:[m.Integer],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],R.prototype,"lockRasterIds",void 0),(0,a._)([(0,u.property)({type:String,json:{type:v.jsonValues,write:{target:"mosaicMethod",writer:v.write}}})],R.prototype,"method",void 0),(0,a._)([(0,c.reader)("method",["mosaicMethod","defaultMosaicMethod"])],R.prototype,"readMethod",null),(0,a._)([(0,u.property)({type:[f.default],json:{write:!0}})],R.prototype,"multidimensionalDefinition",void 0),(0,a._)([(0,u.property)({type:[m.Integer],json:{name:"fids",write:!0}})],R.prototype,"objectIds",void 0),(0,a._)([(0,u.property)({json:{type:g.jsonValues,read:{reader:g.read},write:{target:"mosaicOperation",writer:g.write}}})],R.prototype,"operation",void 0),(0,a._)([(0,c.reader)("operation",["mosaicOperation","mosaicOperator"])],R.prototype,"readOperation",null),(0,a._)([(0,u.property)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],R.prototype,"sortField",void 0),(0,a._)([(0,u.property)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],R.prototype,"sortValue",void 0),(0,a._)([(0,p.cast)("sortValue")],R.prototype,"castSortValue",null),(0,a._)([(0,u.property)({type:y.default,json:{write:!0}})],R.prototype,"viewpoint",void 0),(0,a._)([(0,u.property)({type:String,json:{write:!0}})],R.prototype,"where",void 0),R=n=(0,a._)([(0,d.subclass)("esri.layers.support.MosaicRule")],R);const b=R})),t.register("jDbIP",(function(r,i){e(r.exports,"computeAngles",(function(){return f})),e(r.exports,"getImageSpatialReferenceQueryParameter",(function(){return w})),e(r.exports,"computePixelSpaceLocations",(function(){return h})),e(r.exports,"computeStatisticsHistograms",(function(){return g})),e(r.exports,"computeHistograms",(function(){return v})),e(r.exports,"getSamples",(function(){return R})),e(r.exports,"identify",(function(){return b})),t("2ILM8");var n=t("9pNSx"),a=t("7qybv"),s=t("5On35"),o=t("dsJ7q"),l=t("6aoS0"),u=t("52LHj"),p=t("dye7z"),c=t("khDzj"),d=t("j40xv");function m(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null==t.end||r.includes(t.end)||r.push(t.end),e.time=r.join(",")}}async function y(e,t,r){const i=(0,o.parseUrl)(e),n=t.geometry?[t.geometry]:[],l=await(0,s.normalizeCentralMeridian)(n),u=t.toJSON();m(u);const p=l&&l[0];(0,a.isSome)(p)&&(u.geometry=p.toJSON());const c=(0,o.encode)({...i.query,f:"json",...u});return(0,o.asValidOptions)(c,r)}async function f(e,t,r){var i;const s=t.toJSON();(0,a.isSome)(s.angleName)&&(s.angleName=s.angleName.join(",")),(0,a.isSome)(t.point)&&(null===(i=t.point.spatialReference)||void 0===i?void 0:i.imageCoordinateSystem)&&(s.point.spatialReference=S(t.point.spatialReference)),(0,a.isSome)(t.spatialReference)&&t.spatialReference.imageCoordinateSystem&&(s.spatialReference=w(t.spatialReference));const u=(0,o.parseUrl)(e),p=(0,o.encode)({...u.query,f:"json",...s}),c=(0,o.asValidOptions)(p,r),{data:m}=await(0,n.default)(`${u.path}/computeAngles`,c);return m.spatialReference=m.spatialReference?null!=m.spatialReference.geodataXform?new(0,d.default)({wkid:0,imageCoordinateSystem:m.spatialReference}):d.default.fromJSON(m.spatialReference):null,"NaN"===m.north&&(m.north=null),"NaN"===m.up&&(m.up=null),new(0,l.default)(m)}async function h(e,t,r){var i;const a=t.toJSON(),{geometries:s}=t;for(let e=0;e<s.length;e++)(null===(i=s[e].spatialReference)||void 0===i?void 0:i.imageCoordinateSystem)&&(a.geometries.geometries[e].spatialReference=S(s[e].spatialReference));const l=(0,o.parseUrl)(e),u=(0,o.encode)({...l.query,f:"json",...a}),c=(0,o.asValidOptions)(u,r),{data:d}=await(0,n.default)(`${l.path}/computePixelLocation`,c);return p.default.fromJSON(d)}async function g(e,t,r){const i=await y(e,t,r),a=(0,o.parseUrl)(e),{data:s}=await(0,n.default)(`${a.path}/computeStatisticsHistograms`,i),{statistics:l}=s;return(null==l?void 0:l.length)&&l.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:l,histograms:s.histograms}}async function v(e,t,r){const i=await y(e,t,r),a=(0,o.parseUrl)(e),{data:s}=await(0,n.default)(`${a.path}/computeHistograms`,i);return{histograms:s.histograms}}async function R(e,t,r){var i,l,u;const p=t.toJSON();m(p),(null===(i=p.outFields)||void 0===i?void 0:i.length)&&(p.outFields=p.outFields.join(","));const d=null===(l=await(0,s.normalizeCentralMeridian)(t.geometry))||void 0===l?void 0:l[0];(0,a.isSome)(d)&&(p.geometry=d.toJSON());const y=(0,o.parseUrl)(e),f=(0,o.encode)({...y.query,f:"json",...p}),h=(0,o.asValidOptions)(f,r),{data:g}=await(0,n.default)(`${y.path}/getSamples`,h),v=null==g||null===(u=g.samples)||void 0===u?void 0:u.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return c.default.fromJSON({samples:v})}async function b(e,t,r){const i=(0,o.parseUrl)(e),l=t.geometry?[t.geometry]:[];return(0,s.normalizeCentralMeridian)(l).then((e=>{const s=t.toJSON(),l=e&&e[0];(0,a.isSome)(l)&&(s.geometry=JSON.stringify(l.toJSON()));const u=(0,o.encode)({...i.query,f:"json",...s}),p=(0,o.asValidOptions)(u,r);return(0,n.default)(i.path+"/identify",p)})).then((e=>u.default.fromJSON(e.data)))}function S(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function w(e,t){const r=S(e),{icsid:i,icsns:n,wkid:a}=r;return null!=i?null==n||(null==t?void 0:t.toLowerCase().includes("/"+n.toLowerCase()+"/"))?`0:${i}`:JSON.stringify(r):a?a.toString():JSON.stringify(r)}})),t.register("6aoS0",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("7eJjO");t("2ILM8");var a=t("1XAcN"),s=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("fcwIv"),l=t("j40xv");let u=class extends a.JSONSupport{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,n._)([(0,s.property)({type:Number,json:{write:!0}})],u.prototype,"north",void 0),(0,n._)([(0,s.property)({type:Number,json:{write:!0}})],u.prototype,"up",void 0),(0,n._)([(0,s.property)({type:l.default,json:{write:!0}})],u.prototype,"spatialReference",void 0),u=(0,n._)([(0,o.subclass)("esri.rest.support.ImageAngleResult")],u);const p=u})),t.register("52LHj",(function(r,i){e(r.exports,"default",(function(){return c}));var n=t("7eJjO"),a=t("1XAcN"),s=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("fcwIv"),l=t("d1Fqh"),u=t("f4h86");let p=class extends a.JSONSupport{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,s.property)({type:u.default,json:{write:!0}})],p.prototype,"catalogItems",void 0),(0,n._)([(0,s.property)({type:l.default,json:{write:!0}})],p.prototype,"location",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"name",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"objectId",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"processedValues",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"properties",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"value",void 0),p=(0,n._)([(0,o.subclass)("esri.rest.support.ImageIdentifyResult")],p);const c=p})),t.register("dye7z",(function(r,i){e(r.exports,"default",(function(){return u}));var n=t("7eJjO"),a=t("1XAcN"),s=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("fcwIv");let l=class extends a.JSONSupport{constructor(){super(...arguments),this.geometries=null}};(0,n._)([(0,s.property)({json:{write:!0}})],l.prototype,"geometries",void 0),l=(0,n._)([(0,o.subclass)("esri.rest.support.ImagePixelLocationResult")],l);const u=l})),t.register("khDzj",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("7eJjO"),a=t("1XAcN"),s=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("fcwIv"),l=t("cLKUq");let u=class extends a.JSONSupport{constructor(){super(...arguments),this.samples=null}};(0,n._)([(0,s.property)({type:[l.default],json:{write:!0}})],u.prototype,"samples",void 0),u=(0,n._)([(0,o.subclass)("esri.rest.support.ImageSampleResult")],u);const p=u})),t.register("cLKUq",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("7eJjO"),a=t("1XAcN"),s=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("fcwIv"),l=t("d1Fqh");let u=class extends a.JSONSupport{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"attributes",void 0),(0,n._)([(0,s.property)({type:l.default,json:{write:!0}})],u.prototype,"location",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"locationId",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"rasterId",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"resolution",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"pixelValue",void 0),u=(0,n._)([(0,o.subclass)("esri.rest.support.ImageSample")],u);const p=u})),t.register("8iXHs",(function(r,i){e(r.exports,"executeForCount",(function(){return o}));var n=t("dsJ7q"),a=t("j6c7r"),s=t("cRlei");async function o(e,t,r){const i=(0,n.parseUrl)(e);return(0,a.executeQueryForCount)(i,s.default.from(t),{...r}).then((e=>e.data.count))}})),t.register("1d1jX",(function(r,i){e(r.exports,"executeForIds",(function(){return o}));var n=t("dsJ7q"),a=t("j6c7r"),s=t("cRlei");async function o(e,t,r){const i=(0,n.parseUrl)(e);return(0,a.executeQueryForIds)(i,s.default.from(t),{...r}).then((e=>e.data.objectIds))}})),t.register("hkbLU",(function(r,i){e(r.exports,"getCatalogItemRasterInfo",(function(){return p}));var n=t("9pNSx"),a=t("gINRd"),s=t("d1Fqh"),o=t("d0bii"),l=t("cQADC"),u=t("dsJ7q");async function p(e,t,r){var i,p;const c=(0,u.parseUrl)(e),d=(0,u.encode)({...c.query,f:"json"}),m=(0,u.asValidOptions)(d,r),y=`${c.path}/${t}/info`,f=(0,n.default)(`${y}`,m),h=(0,n.default)(`${y}/keyProperties`,m),g=await Promise.allSettled([f,h]),v="fulfilled"===g[0].status?g[0].value.data:null,R="fulfilled"===g[1].status?g[1].value.data:null;let b=null;(null===(i=v.statistics)||void 0===i?void 0:i.length)&&(b=v.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const S=a.default.fromJSON(v.extent),w=Math.ceil(S.width/v.pixelSizeX-.1),_=Math.ceil(S.height/v.pixelSizeY-.1),x=S.spatialReference,I=new(0,s.default)({x:v.pixelSizeX,y:v.pixelSizeY,spatialReference:x}),F=(null===(p=v.histograms)||void 0===p?void 0:p.length)?v.histograms:null,N=new(0,l.default)({origin:v.origin,blockWidth:v.blockWidth,blockHeight:v.blockHeight,firstPyramidLevel:v.firstPyramidLevel,maximumPyramidLevel:v.maxPyramidLevel});return new(0,o.default)({width:w,height:_,bandCount:v.bandCount,extent:S,spatialReference:x,pixelSize:I,pixelType:v.pixelType.toLowerCase(),statistics:b,histograms:F,keyProperties:R,storageInfo:N})}})),t.register("jhL3I",(function(r,i){e(r.exports,"default",(function(){return y}));var n=t("7eJjO");t("2ILM8");var a,s=t("1XAcN"),o=t("flPLJ"),l=t("iho5X"),u=t("iJAIC"),p=t("fcwIv"),c=t("d1Fqh"),d=t("j40xv");let m=a=class extends s.JSONSupport{clone(){return new a((0,o.clone)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}};(0,n._)([(0,l.property)({type:[String],json:{name:"angleName",write:!0}})],m.prototype,"angleNames",void 0),(0,n._)([(0,l.property)({type:c.default,json:{write:!0}})],m.prototype,"point",void 0),(0,n._)([(0,l.property)({type:d.default,json:{write:!0}})],m.prototype,"spatialReference",void 0),(0,n._)([(0,l.property)({type:u.Integer,json:{write:!0}})],m.prototype,"rasterId",void 0),m=a=(0,n._)([(0,p.subclass)("esri.rest.support.ImageAngleParameters")],m);const y=m})),t.register("lcqcF",(function(r,i){e(r.exports,"default",(function(){return v}));var n=t("7eJjO"),a=t("2ILM8"),s=t("9DeZf"),o=t("1XAcN"),l=t("flPLJ"),u=t("iho5X");t("iJAIC");var p,c=t("fcwIv"),d=t("kced1"),m=t("79LpT"),y=t("4wYsD"),f=t("EvgSL"),h=t("d1Fqh");let g=p=class extends o.JSONSupport{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,m.getJsonType)(e),t[r]=e.toJSON())}clone(){return new p((0,l.clone)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}};(0,n._)([(0,u.property)({types:a.geometryTypes,json:{read:m.fromJSON}})],g.prototype,"geometry",void 0),(0,n._)([(0,d.writer)("geometry")],g.prototype,"writeGeometry",null),(0,n._)([(0,u.property)({type:y.default,json:{write:!0}})],g.prototype,"mosaicRule",void 0),(0,n._)([(0,u.property)({type:f.default,json:{write:!0}})],g.prototype,"renderingRule",void 0),(0,n._)([(0,u.property)({type:h.default,json:{write:!0}})],g.prototype,"pixelSize",void 0),(0,n._)([(0,u.property)({json:{write:!0}})],g.prototype,"raster",void 0),(0,n._)([(0,u.property)({type:s.default,json:{read:{source:"time"},write:{target:"time"}}})],g.prototype,"timeExtent",void 0),g=p=(0,n._)([(0,c.subclass)("esri.rest.support.ImageHistogramParameters")],g);const v=g})),t.register("bTXe6",(function(r,i){e(r.exports,"default",(function(){return v}));var n=t("7eJjO"),a=t("9DeZf"),s=t("1XAcN"),o=t("flPLJ"),l=t("7qybv"),u=t("iho5X");t("iJAIC");var p,c=t("fcwIv"),d=t("kced1"),m=t("d1Fqh"),y=t("79LpT"),f=t("4wYsD"),h=t("EvgSL");let g=p=class extends s.JSONSupport{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,y.getJsonType)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=f.default.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=h.default.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=(0,l.isSome)(e.start)?e.start.getTime():null,n=(0,l.isSome)(e.end)?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:`${i}`:null}}clone(){return new p((0,o.clone)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}};(0,n._)([(0,u.property)({json:{write:!0}})],g.prototype,"geometry",void 0),(0,n._)([(0,d.writer)("geometry")],g.prototype,"writeGeometry",null),(0,n._)([(0,u.property)({type:f.default,json:{write:!0}})],g.prototype,"mosaicRule",null),(0,n._)([(0,d.writer)("mosaicRule")],g.prototype,"writeMosaicRule",null),(0,n._)([(0,u.property)({type:h.default,json:{write:!0}})],g.prototype,"renderingRule",null),(0,n._)([(0,d.writer)("renderingRule")],g.prototype,"writeRenderingRule",null),(0,n._)([(0,u.property)({type:[h.default],json:{write:!0}})],g.prototype,"renderingRules",void 0),(0,n._)([(0,d.writer)("renderingRules")],g.prototype,"writeRenderingRules",null),(0,n._)([(0,u.property)({type:m.default,json:{write:!0}})],g.prototype,"pixelSize",void 0),(0,n._)([(0,d.writer)("pixelSize")],g.prototype,"writePixelSize",null),(0,n._)([(0,u.property)({type:Boolean,json:{write:!0}})],g.prototype,"returnGeometry",void 0),(0,n._)([(0,u.property)({type:Boolean,json:{write:!0}})],g.prototype,"returnCatalogItems",void 0),(0,n._)([(0,u.property)({type:Boolean,json:{write:!0}})],g.prototype,"returnPixelValues",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],g.prototype,"maxItemCount",void 0),(0,n._)([(0,u.property)({type:a.default,json:{write:{target:"time"}}})],g.prototype,"timeExtent",void 0),(0,n._)([(0,d.writer)("timeExtent")],g.prototype,"writeTimeExtent",null),(0,n._)([(0,u.property)({json:{write:!0}})],g.prototype,"raster",void 0),(0,n._)([(0,u.property)({json:{write:!0}})],g.prototype,"viewId",void 0),(0,n._)([(0,u.property)({type:Boolean,json:{write:!0}})],g.prototype,"processAsMultidimensional",void 0),g=p=(0,n._)([(0,c.subclass)("esri.rest.support.ImageIdentifyParameters")],g);const v=g})),t.register("7Z6eW",(function(r,i){e(r.exports,"default",(function(){return m}));var n=t("7eJjO");t("2ILM8");var a=t("1XAcN"),s=t("iho5X");t("lNwWH"),t("2VlWd");var o,l=t("iJAIC"),u=t("fcwIv"),p=t("kced1"),c=t("d1Fqh");let d=o=class extends a.JSONSupport{writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new o({geometries:this.geometries.map((e=>e.clone())),rasterId:this.rasterId})}constructor(){super(...arguments),this.geometries=null,this.rasterId=null}};(0,n._)([(0,s.property)({type:[c.default],json:{write:!0}})],d.prototype,"geometries",void 0),(0,n._)([(0,p.writer)("geometries")],d.prototype,"writeGeometry",null),(0,n._)([(0,s.property)({type:l.Integer,json:{write:!0}})],d.prototype,"rasterId",void 0),d=o=(0,n._)([(0,u.subclass)("esri.rest.support.ImagePixelLocationParameters")],d);const m=d})),t.register("4Rnpy",(function(r,i){e(r.exports,"default",(function(){return R}));var n=t("7eJjO"),a=t("2ILM8"),s=t("9DeZf"),o=t("1XAcN"),l=t("flPLJ"),u=t("iho5X");t("iJAIC");var p,c=t("fcwIv"),d=t("kced1"),m=t("79LpT"),y=t("4wYsD"),f=t("5Lo1P"),h=t("d1Fqh"),g=t("eaHvJ");let v=p=class extends o.JSONSupport{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,m.getJsonType)(e),t[r]=e.toJSON())}set locations(e){if(null==e?void 0:e.length){const t=new(0,g.default)({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new p((0,l.clone)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}};(0,n._)([(0,u.property)({types:a.geometryTypes,json:{read:m.fromJSON}})],v.prototype,"geometry",void 0),(0,n._)([(0,d.writer)("geometry")],v.prototype,"writeGeometry",null),(0,n._)([(0,u.property)()],v.prototype,"locations",null),(0,n._)([(0,u.property)({type:String,json:{type:f.interpolationKebab.jsonValues,read:f.interpolationKebab.read,write:f.interpolationKebab.write}})],v.prototype,"interpolation",void 0),(0,n._)([(0,u.property)({type:y.default,json:{write:!0}})],v.prototype,"mosaicRule",void 0),(0,n._)([(0,u.property)({type:[String],json:{write:!0}})],v.prototype,"outFields",void 0),(0,n._)([(0,u.property)({type:h.default,json:{write:!0}})],v.prototype,"pixelSize",void 0),(0,n._)([(0,u.property)({type:String,json:{write:!0}})],v.prototype,"raster",void 0),(0,n._)([(0,u.property)({type:Boolean,json:{write:!0}})],v.prototype,"returnFirstValueOnly",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],v.prototype,"sampleDistance",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],v.prototype,"sampleCount",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],v.prototype,"sliceId",void 0),(0,n._)([(0,u.property)({type:s.default,json:{read:{source:"time"},write:{target:"time"}}})],v.prototype,"timeExtent",void 0),v=p=(0,n._)([(0,c.subclass)("esri.rest.support.ImageSampleParameters")],v);const R=v})),t.register("59jTx",(function(r,i){e(r.exports,"default",(function(){return d}));var n=t("7eJjO"),a=t("79ASa"),s=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var o=t("fcwIv"),l=t("kt6hM");const u=new(0,a.JSONMap)({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),p=new(0,a.JSONMap)({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let c=class extends l.default{set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}constructor(){super(...arguments),this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null,this.type="class-breaks-definition"}};(0,n._)([(0,s.property)({json:{write:!0}})],c.prototype,"breakCount",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],c.prototype,"classificationField",void 0),(0,n._)([(0,s.property)({type:String,json:{read:u.read,write:u.write}})],c.prototype,"classificationMethod",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],c.prototype,"normalizationField",void 0),(0,n._)([(0,s.property)({json:{read:p.read,write:p.write}})],c.prototype,"normalizationType",void 0),(0,n._)([(0,s.property)({value:null,json:{write:!0}})],c.prototype,"standardDeviationInterval",null),(0,n._)([(0,s.property)({value:null,json:{write:!0}})],c.prototype,"definedInterval",null),(0,n._)([(0,s.property)()],c.prototype,"type",void 0),c=(0,n._)([(0,o.subclass)("esri.rest.support.ClassBreaksDefinition")],c);const d=c})),t.register("kt6hM",(function(r,i){e(r.exports,"default",(function(){return m}));var n=t("7eJjO"),a=t("79ASa"),s=t("1XAcN"),o=t("iho5X");t("lNwWH"),t("2VlWd"),t("iJAIC");var l=t("fcwIv"),u=t("1DHtQ"),p=t("j9ZJv");const c=new(0,a.JSONMap)({classBreaksDef:"class-breaks-definition",uniqueValueDef:"unique-value-definition"});let d=class extends s.JSONSupport{constructor(){super(...arguments),this.baseSymbol=null,this.colorRamp=null,this.type=null}};(0,n._)([(0,o.property)({type:p.default,json:{write:!0}})],d.prototype,"baseSymbol",void 0),(0,n._)([(0,o.property)({types:u.types,json:{read:{reader:u.fromJSON},write:!0}})],d.prototype,"colorRamp",void 0),(0,n._)([(0,o.property)({json:{read:c.read,write:c.write}})],d.prototype,"type",void 0),d=(0,n._)([(0,l.subclass)("esri.rest.support.ClassificationDefinition")],d);const m=d})),t.register("hxmJW",(function(t,r){function i(e,t){return Number(e.toFixed(t))}function n(e){const{normalizationTotal:t}=e;return{classBreaks:a(e),normalizationTotal:t}}function a(e){const t=e.definition,{classificationMethod:r,breakCount:n,normalizationType:a,definedInterval:p}=t,c=[];let d=e.values;if(0===d.length)return[];d=d.sort(((e,t)=>e-t));const m=d[0],y=d[d.length-1];if("equal-interval"===r)if(d.length>=n){const e=(y-m)/n;let t=m;for(let r=1;r<n;r++){const n=i(m+r*e,6);c.push({minValue:t,maxValue:n,label:s(t,n,a)}),t=n}c.push({minValue:t,maxValue:y,label:s(t,y,a)})}else d.forEach((e=>{c.push({minValue:e,maxValue:e,label:s(e,e,a)})}));else if("natural-breaks"===r){const t=o(d),r=e.valueFrequency||t.valueFrequency,p=function(e,t,r){const i=e.length,n=[];r>i&&(r=i);for(let e=0;e<r;e++)n.push(Math.round(e*i/r-1));n.push(i-1);let a=l(n,e,t,r);return function(e,t,r,i,n,a){let s=0,o=0,l=0,p=0,c=!0;for(let d=0;d<2&&c;d++){0===d&&(c=!1);for(let d=0;d<a-1;d++)for(;r[d+1]+1!==r[d+2];){r[d+1]=r[d+1]+1;const a=u(d,r,i,n);l=a.sbMean,s=a.sbSdcm;const m=u(d+1,r,i,n);if(p=m.sbMean,o=m.sbSdcm,!(s+o<t[d]+t[d+1])){r[d+1]=r[d+1]-1;break}t[d]=s,t[d+1]=o,e[d]=l,e[d+1]=p,c=!0}for(let d=a-1;d>0;d--)for(;r[d]!==r[d-1]+1;){r[d]=r[d]-1;const a=u(d-1,r,i,n);l=a.sbMean,s=a.sbSdcm;const m=u(d,r,i,n);if(p=m.sbMean,o=m.sbSdcm,!(s+o<t[d-1]+t[d])){r[d]=r[d]+1;break}t[d-1]=s,t[d]=o,e[d-1]=l,e[d]=p,c=!0}}return c}(a.mean,a.sdcm,n,e,t,r)&&(a=l(n,e,t,r)),n}(t.uniqueValues,r,n);let f=m;for(let e=1;e<n;e++)if(t.uniqueValues.length>e){const r=i(t.uniqueValues[p[e]],6);c.push({minValue:f,maxValue:r,label:s(f,r,a)}),f=r}c.push({minValue:f,maxValue:y,label:s(f,y,a)})}else if("quantile"===r)if(d.length>=n&&m!==y){let e=m,t=Math.ceil(d.length/n),r=0;for(let i=1;i<n;i++){let o=t+r-1;o>d.length&&(o=d.length-1),o<0&&(o=0),c.push({minValue:e,maxValue:d[o],label:s(e,d[o],a)}),e=d[o],r+=t,t=Math.ceil((d.length-r)/(n-i))}c.push({minValue:e,maxValue:y,label:s(e,y,a)})}else{let e=-1;for(let t=0;t<d.length;t++){const r=d[t];r!==e&&(e=r,c.push({minValue:e,maxValue:r,label:s(e,r,a)}),e=r)}}else if("standard-deviation"===r){const e=function(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t/=e.length,t}(d),t=function(e,t){let r=0;for(let i=0;i<e.length;i++){const n=e[i];r+=(n-t)*(n-t)}return r/=e.length,Math.sqrt(r)}(d,e);if(0===t)c.push({minValue:d[0],maxValue:d[0],label:s(d[0],d[0],a)});else{const r=function(e,t,r,i,n){let a=Math.max(i-e,t-i)/n/r;return a=a>=1?1:a>=.5?.5:.25,a}(m,y,n,e,t)*t;let o=0,l=m;for(let t=n;t>=1;t--){const n=i(e-(t-.5)*r,6);c.push({minValue:l,maxValue:n,label:s(l,n,a)}),l=n,o++}let u=i(e+.5*r,6);c.push({minValue:l,maxValue:u,label:s(l,u,a)}),l=u,o++;for(let t=1;t<=n;t++)u=o===2*n?y:i(e+(t+.5)*r,6),c.push({minValue:l,maxValue:u,label:s(l,u,a)}),l=u,o++}}else if("defined-interval"===r){if(!p)return c;const e=d[0],t=d[d.length-1],r=Math.ceil((t-e)/p);let n=e;for(let t=1;t<r;t++){const r=i(e+t*p,6);c.push({minValue:n,maxValue:r,label:s(n,r,a)}),n=r}c.push({minValue:n,maxValue:t,label:s(n,t,a)})}return c}function s(e,t,r){let i=null;return i=e===t?r&&"percent-of-total"===r?e+"%":e.toString():r&&"percent-of-total"===r?e+"% - "+t+"%":e+" - "+t,i}function o(e){const t=[],r=[];let i=Number.MIN_VALUE,n=1,a=-1;for(let s=0;s<e.length;s++){const o=e[s];o===i?(n++,r[a]=n):null!==o&&(t.push(o),i=o,n=1,r.push(n),a++)}return{uniqueValues:t,valueFrequency:r}}function l(e,t,r,i){let n=[],a=[],s=[],o=0;const l=[],p=[];for(let n=0;n<i;n++){const i=u(n,e,t,r);l.push(i.sbMean),p.push(i.sbSdcm),o+=p[n]}let c,d=o,m=!0;for(;m||o<d;){m=!1,n=[];for(let t=0;t<i;t++)n.push(e[t]);for(let r=0;r<i;r++)for(let n=e[r]+1;n<=e[r+1];n++)if(c=t[n],r>0&&n!==e[r+1]&&Math.abs(c-l[r])>Math.abs(c-l[r-1]))e[r]=n;else if(r<i-1&&e[r]!==n-1&&Math.abs(c-l[r])>Math.abs(c-l[r+1])){e[r+1]=n-1;break}d=o,o=0,a=[],s=[];for(let n=0;n<i;n++){a.push(l[n]),s.push(p[n]);const i=u(n,e,t,r);l[n]=i.sbMean,p[n]=i.sbSdcm,o+=p[n]}}if(o>d){for(let t=0;t<i;t++)e[t]=n[t],l[t]=a[t],p[t]=s[t];o=d}return{mean:l,sdcm:p}}function u(e,t,r,i){let n=0,a=0;for(let s=t[e]+1;s<=t[e+1];s++){const e=i[s];n+=r[s]*e,a+=e}a<=0&&console.log("Exception in Natural Breaks calculation");const s=n/a;let o=0;for(let n=t[e]+1;n<=t[e+1];n++)o+=i[n]*(r[n]-s)**2;return{sbMean:s,sbSdcm:o}}e(t.exports,"createGenerateRendererClassBreaks",(function(){return n}))}))}();
//# sourceMappingURL=ImageryLayer.6e294aad.js.map
