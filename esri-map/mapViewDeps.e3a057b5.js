function e(e,t,r,i){Object.defineProperty(e,t,{get:r,set:i,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("gZGet",(function(r,i){e(r.exports,"default",(function(){return K}));var s=t("j6uz9"),o=t("27btt"),n=t("iLz4U"),a=t("8Y9g8"),l=t("5HTPH"),d=t("1CpCt"),h=t("lHg4e"),c=t("cc23H"),u=t("hTI69");t("aX9sh"),t("gHCNy");var f=t("qA6zg"),p=t("jaaCV"),m=t("19dbe"),g=t("gPay9"),y=t("86d4E"),_=t("5zXcg"),x=t("fau59"),v=t("haPYR"),b=t("1kN4D"),D=t("eCeXt"),C=t("aPQ4T"),B=t("eyQUy"),T=t("8poAO"),w=t("6Xzce"),F=t("6sktq"),I=t("hAqwK"),S=t("1dnlL"),R=t("6zm2Z"),L=t("9VqGW"),M=t("4W3Zs"),A=t("bxcX3"),z=t("2Tj4r"),G=t("faWte"),P=t("f4cqe"),O=t("mayqQ"),E=t("d1j0h"),V=t("5smAu"),U=t("8r0sl"),k=t("3c9O1");const j=(0,l.default)("esri-2d-graphic-debug");function q(e,t,r){if(r.has(e))return r.get(e);const i={tile:t,addedOrModified:[],removed:[]};return r.set(e,i),i}let H=class extends((0,V.GraphicsView)((0,a.HandleOwnerMixin)(o.default))){destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,r){if(e){const i=(0,M.createMatcherSchema)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,L.createMatcher)(i,t,null,r)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._attributeStore=new(0,A.default)({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,U.getWebGLCapabilities)("2d"),(()=>this.notifyChange("updating"))),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=new(0,R.WGLTemplateStore)(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new(0,P.default)(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new(0,S.WGLMeshFactory)(null,this.uid,e),this._templateStore=e,this.handles.add([(0,c.watch)((()=>this.renderer),(t=>{this._createMatcher(t,e,this.container.stage.resourceManager);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",(e=>this._onTileUpdate(e))),this.container.on("attach",(()=>{j&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const t=this.container.stage.resourceManager;this._createMatcher(this.renderer,e,t),this._graphicStore.setResourceManager(t),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore.isUpdating()}hitTest(e){if(!this.view||!this.view.position)return[];const{resolution:t,rotation:r}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,r)}update(e){(0,h.throwIfAborted)(this._controller.signal);const t=e.state,{resolution:r}=t;if(this._graphicStore.updateLevel(r),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:r,newValue:i}=e;switch(r){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,i),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,m.width)(t)||0===(0,m.height)(t))return[];const r=(0,O.intersectingInternationalDateline)(t,this.view.spatialReference);return(0,d.isSome)(r)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(r[0]),...this.view.graphicsTileStore.boundsIntersections(r[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,h.throwIfAborted)(this._controller.signal);const t=e.tile,r=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,r);return(0,h.throwIfAborted)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1,sort:!1}),i}_patchTile(e,t){if(!this._tiles.has(e))return;const r=this._tiles.get(e);this.container.onTileData(r,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const r of e.added)t.added.add(r);for(const r of e.moved)t.updated.add(r);for(const r of e.removed)this._pendingUpdate.added.has(r)?t.added.delete(r):t.removed.add(r);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const r of this.graphics.items)t.added.has(r)?e.added.push(r):t.updated.has(r)&&e.updated.push(r);for(const r of t.removed)this._graphicStore.has(r)&&e.removed.push(r);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:r}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let s;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const o=[],n=new Array(e.length+t.length);for(let e=0;e<r.length;e++){const t=r[e],a=this._getIntersectingTiles(t);for(const e of a)s=e.id,q(s,e,i).removed.push(this._displayIds.get(t.uid));o.push(this._updateGraphic(t,null)),n[e]=t}const a=r.length;for(let t=0;t<e.length;t++){const r=e[t];n[a+t]=r,this._graphicsSet.add(r),o.push(this._addGraphic(r))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const r of t)s=r.id,q(s,r,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(o);for(let e=0;e<n.length;e++){l=n[e];const t=this._getIntersectingTiles(l);for(const e of t)s=e.id,q(s,e,i).addedOrModified.push(l)}this._graphicStore.updateZ();const d=[];for(const[e,t]of i)d.push(this._updateTile(t));await Promise.all(d)}catch(e){(0,h.isAbortError)(e)}for(const e of t)try{const t=await this._getSymbolForGraphic(e,null);if(t){const e=t.hash();this._hashToExpandedSymbol.delete(e)}}catch(e){(0,h.isAbortError)(e)}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,d.isNone)(e.geometry)?null:{geometryType:(0,y.getJsonType)(e.geometry),spatialReference:p.default.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,h.throwIfAborted)(this._controller.signal),(0,d.isSome)(e.symbol)?Promise.resolve(e.symbol):(0,d.isSome)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,signal:(0,d.isSome)(t)?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,r){let i=this._hashToCIM.get(t);if(i)return Promise.resolve(i);const s=(0,b.symbolToCIM)(e);if((0,d.isSome)(s)){if("CIMSymbolReference"===s.type)return i=s,this._hashToCIM.set(t,i),Promise.resolve(i);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=s.fetchCIMSymbol(r).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,h.throwIfAbortError)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,r,i){const s=this._hashToExpandedSymbol.get(r);if(s)return Promise.resolve(s);let o=this._hashToExpandedSymbolPromise.get(r);if(o)return o;const n=this.container.stage,a=this._getArcadeInfo(t),l=(0,M.createSymbolSchemaOptions)(null),d=(0,k.createSymbolSchema)(e,l);return o=(0,E.expandSymbol)(d,a,n.resourceManager,i),this._hashToExpandedSymbolPromise.set(r,o),o.then((e=>(this._hashToExpandedSymbol.set(r,e),this._hashToExpandedSymbolPromise.delete(r),e))),o}async _getSymbolResources(e,t){return(0,h.throwIfAborted)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((r=>{const i=r.hash();return this._getCIMSymbol(r,i,t).then((r=>(0,d.isNone)(r)?null:this._expandCIMSymbol(r,e,i,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const r=new Array(t.length);for(let e=0;e<t.length;e++){const i=t[e],s=[],[o]=(0,n.bidiText)(i.text);i.text=o;for(let e=0;e<o.length;e++)s.push(o.charCodeAt(e));r[e]={symbol:i,id:e,glyphIds:s}}const s=new Map;return this.container.getMaterialItems(r).then((r=>{for(let e=0;e<t.length;e++){const i=t[e];s.set(i.cim,{text:i.text,mosaicItem:r[e].mosaicItem})}return{symbol:e,textInfo:s,hash:i}}))}return{symbol:e,hash:i}}))))})).catch((e=>((0,h.throwIfAbortError)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,h.throwIfAborted)(this._controller.signal),(0,d.isNone)(e.geometry)||"mesh"===e.geometry.type)return null;let r=e.geometry;if((0,y.isPolygon)(r)){const e=r.rings;r.rings=e}else if((0,y.isPolyline)(r)){const e=r.paths;r.paths=e}else if((0,y.isExtent)(r)){const i=await this._getSymbolForGraphic(e,t);(0,h.throwIfAborted)(this._controller.signal),r=(0,O.isMarkerSymbol)(i.type)||(0,O.isTextSymbol)(i.type)?r.center:(0,O.polygonFromExtent)(r)}await(0,v.checkProjectionSupport)(r.spatialReference,this.view.spatialReference);const i=(0,_.normalizeCentralMeridianForDisplay)(r),s=(0,v.project)(i,r.spatialReference,this.view.spatialReference);return(0,g.closeRingsAndFixWinding)(s),s}_onTileUpdate(e){const t=(0,x.getInfo)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const r of e.added)this._addNewTile(r,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,h.throwIfAborted)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const r={signal:t.signal};try{await this._addOrUpdateGraphic(e,r),(0,h.throwIfAborted)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,h.isAbortError)(t))throw t}}_updateGraphic(e,t){(0,h.throwIfAborted)(this._controller.signal);const r=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([r,i]).then((([t,r])=>{(0,h.throwIfAborted)(this._controller.signal),this._graphicStore.addOrModify(e,r,t)}))}_addOrUpdateGraphic(e,t){(0,h.throwIfAborted)(this._controller.signal);const r=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([r,i]).then((([t,r])=>{(0,h.throwIfAborted)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,r,t)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,m.create)(),e),r=new(0,T.GraphicTile)(e,t[0],t[3]);return this._tiles.set(e,r),this.container.addChild(r),r}async _addNewTile(e,t){const r=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(0===i.length)return;if(t){const r=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&((0,y.isPoint)(e.geometry)||(0,y.isMultipoint)(e.geometry))&&this._wrapPoints(e,r)}const s=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,i),remove:[],end:!0,sort:!1};r.patch(t),this._tileUpdateSet.delete(s),this.notifyChange("updating")}catch(e){if(this._tileUpdateSet.delete(s),this.notifyChange("updating"),!(0,h.isAbortError)(e))throw e}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const r=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(r,0,0,i|(t?C.FILTER_FLAG_0:0))}_getGraphicsData(e,t,r){const i=this.view,s=(0,x.getInfo)(i.spatialReference),o=this._graphicStore.getGraphicsData(e,t,r);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of o)t.geometry&&((0,y.isPoint)(t.geometry)||(0,y.isMultipoint)(t.geometry))&&this._wrapPoints(t,e)}return o}_wrapPoints(e,t){const r=e.geometry;(0,y.isMultipoint)(r)?this._wrapMultipoint(r,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const r=e.points,i=[];let s=0,o=0;for(const[e,n]of r){if(i.push([e+s,n]),s=0,t===O.TILE_SIZE){const r=5*O.PIXEL_BUFFER;e+o<r?(i.push([t,0]),s=-t):e+o>O.TILE_SIZE-r&&(i.push([-t,0]),s=t)}else e+o<-O.PIXEL_BUFFER?(i.push([t,0]),s=-t):e+o>O.TILE_SIZE+O.PIXEL_BUFFER&&(i.push([-t,0]),s=t);o+=e}e.points=i}_wrapPoint(e,t){const r=e.geometry;if(t===O.TILE_SIZE){const i=5*O.PIXEL_BUFFER;r.x<i?e.geometry={points:[[r.x,r.y],[t,0]]}:r.x>O.TILE_SIZE-i&&(e.geometry={points:[[r.x,r.y],[-t,0]]})}else r.x<-O.PIXEL_BUFFER?e.geometry={points:[[r.x,r.y],[t,0]]}:r.x>O.TILE_SIZE+O.PIXEL_BUFFER&&(e.geometry={points:[[r.x,r.y],[-t,0]]})}_processGraphics(e,t,r){if(!t||!t.length||!this._meshFactory)return null;const i=G.GraphicsReader.from(t,this.uid),s=this._meshFactory;return this._matcher.then((t=>s.analyzeGraphics(i,this.container.stage.resourceManager,t,null,null,r).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i))))))}_processAnalyzedGraphics(e,t){const r=this._meshFactory,i=t.getSize(),s=t.getCursor(),o={features:i,records:i,metrics:0},n=new(0,I.MeshData)(e.key.id,o,B.WGLSymbologyType.DEFAULT,!1,!1),a=[];for(;s.next();){const t=s.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const i=new(0,F.default)(t.displayId);i.insertAfter=t.insertAfter,a.push(i),r.writeGraphic(n,s,e.level,this.container.stage.resourceManager)}const l=e.tileInfoView.tileInfo.isWrappable,d=n.serialize(l);if(1!==d.length)return new(0,w.TileData);const h=d[0].message;return w.TileData.fromVertexData(h,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,y.isPolyline)(t)?D.errorPolylineSymbol2D:(0,y.isPolygon)(t)||(0,y.isExtent)(t)?D.errorPolygonSymbol2D:D.errorPointSymbol2D}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}constructor(e){super(e),this._storage=new(0,z.ComputedAttributeStorage),this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}};(0,s._)([(0,u.property)({constructOnly:!0})],H.prototype,"requestUpdateCallback",void 0),(0,s._)([(0,u.property)()],H.prototype,"container",void 0),(0,s._)([(0,u.property)({constructOnly:!0})],H.prototype,"graphics",void 0),(0,s._)([(0,u.property)()],H.prototype,"updating",null),(0,s._)([(0,u.property)()],H.prototype,"view",void 0),(0,s._)([(0,u.property)()],H.prototype,"updateRequested",void 0),H=(0,s._)([(0,f.subclass)("esri.views.2d.layers.support.GraphicsView2D")],H);const K=H})),t.register("8poAO",(function(r,i){e(r.exports,"GraphicTile",(function(){return l}));var s=t("9BVF9"),o=t("bfOJh"),n=t("85L9a"),a=t("8n4SS");class l extends a.WGLTile{destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,r=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new(0,s.default),this._dispRecStore=o.default.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||r.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new(0,n.default)(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=o.default.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const r=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const e of r)null!=e.insertAfter&&i.push(e.id);for(const e of i){const t=this._data.tileDisplayData.displayObjectRegistry.get(e);if(t){this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);this._data.tileDisplayData.displayObjectRegistry.delete(e);const r=this._data.tileDisplayData.displayObjects.indexOf(t);this._data.tileDisplayData.displayObjects.splice(r,1)}}for(const i of r){let r,s=this._data.tileDisplayData.displayObjectRegistry.get(i.id);if(s){const e=s.displayRecords;s.set(i),s.displayRecords=e;const t=s.displayRecords.length;for(let e=0;e<t;++e){const t=s.displayRecords[e],r=i.displayRecords[e];(e>=i.displayRecords.length||t.geometryType!==r.geometryType||t.symbolLevel!==r.symbolLevel||t.zOrder!==r.zOrder||t.materialKey!==r.materialKey)&&(this._dispRecStore.delete(s.displayRecords[e]),e<i.displayRecords.length&&(s.displayRecords[e]=void 0))}s.displayRecords.length=i.displayRecords.length}else{let e;s=i.copy(),s.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(i.id,s);const t=this._data.tileDisplayData.displayObjects;if(null!=s.insertAfter)if(r={},s.insertAfter>=0){const r=this._data.tileDisplayData.displayObjectRegistry.get(s.insertAfter);r?(e=t.indexOf(r)+1,e<t.length?t.splice(e,0,s):(t.push(s),e=t.length)):(t.push(s),e=t.length)}else t.unshift(s),e=0;else t.push(s),e=t.length;if(r){const s=i.displayRecords.length>0?1:0;let o=0;for(let i=e-1;i>=0&&o<s;--i)for(let e=t[i].displayRecords.length-1;e>=0&&o<s;--e){const s=t[i].displayRecords[e],n=this._data.tileDisplayData.displayList.getDPInfoType();r[n]||(r[n]=s,++o)}}}const o=i.displayRecords.length;for(let n=0;n<o;++n){const o=i.displayRecords[n];let a=s.displayRecords[n];a?(a.meshData=o.meshData,a.materialKey=o.materialKey):(a=o.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,s.displayRecords[n]=a);const l=o.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),h=e.addOrUpdate.tileBufferData.geometries[l],c=h.vertexBuffer,u=h.indexBuffer;let f;r&&(f=r[d]?this._data.tileDisplayData.displayList.splitAfter(r[d]):-1),t=this._dispRecStore.setMeshData(a,o,c,u,f)&&t,r&&null!=a.indexFrom&&null!=a.indexFrom&&(r[d]=a)}}return t}constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new(0,s.default)}}})),t.register("9BVF9",(function(t,r){e(t.exports,"default",(function(){return s}));const i=-1;class s{hasDirty(){return this._dirties.some((e=>e.indexCount!==i||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=i,e.indexCount=i,e.vertexFrom=i,e.vertexCount=i,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:r,indexFrom:s,vertexCount:o,vertexFrom:n,allDirty:a}=this._dirties[t],l={};let d,h=!1;(a||n!==i&&o>0)&&(l.geometry={count:o,from:n,allDirty:a},h=!0),(a||s!==i&&r>0)&&(d={count:r,from:s,allDirty:a},h=!0),h&&e({indices:d,vertices:l},t)}}markDirtyIndices(e,t,r){const s=this._dirties[e],o=t,n=r;if(!s.allDirty)if(s.indexCount!==i){const e=Math.min(s.indexFrom,o),t=Math.max(s.indexFrom+s.indexCount,o+n)-e;s.indexFrom=e,s.indexCount=t}else s.indexFrom=o,s.indexCount=n}markDirtyVertices(e,t,r,s){const o=this._dirties[e],n=r,a=s;if(!o.allDirty)if(o.vertexCount!==i){const e=Math.min(o.vertexFrom,n),t=Math.max(o.vertexFrom+o.vertexCount,n+a)-e;o.vertexFrom=e,o.vertexCount=t}else o.vertexFrom=n,o.vertexCount=a}constructor(){this._dirties=[{vertexFrom:i,vertexCount:i,indexFrom:i,indexCount:i,allDirty:!1},{vertexFrom:i,vertexCount:i,indexFrom:i,indexCount:i,allDirty:!1},{vertexFrom:i,vertexCount:i,indexFrom:i,indexCount:i,allDirty:!1},{vertexFrom:i,vertexCount:i,indexFrom:i,indexCount:i,allDirty:!1},{vertexFrom:i,vertexCount:i,indexFrom:i,indexCount:i,allDirty:!1}]}}})),t.register("bfOJh",(function(r,i){e(r.exports,"default",(function(){return a})),t("5HTPH");var s=t("gaZis"),o=t("cPgEa");const n=["FILL","LINE","MARKER","TEXT","LABEL"];class a{static fromTileData(e,t){const r=function(e){const t=e.getStrides(),r={};for(let e=0;e<t.length;e++)r[n[e]]=t[e];return r}(e),i=[0,0,0,0,0],l=[0,0,0,0,0],d=e.tileDisplayData.displayObjects;for(const e of d)for(const t of e.displayRecords)i[t.geometryType]=Math.max(i[t.geometryType],t.vertexFrom+t.vertexCount),l[t.geometryType]=Math.max(l[t.geometryType],t.indexFrom+t.indexCount);const h=new a(r,e.tileDisplayData.displayList,t,null);for(let t=0;t<e.tileBufferData.geometries.length;++t){const r=i[t],a=l[t],d=e.tileBufferData.geometries[t],c=n[t],u=h._storageFor(c),f=e.tileBufferData.geometries[t].indexBuffer;let p;u.indexBuffer=f,u.idxFreeList=new(0,s.FreeList)(f.length),u.idxFreeList.allocate(a);for(const r in d.vertexBuffer){const i=e.tileBufferData.geometries[t].vertexBuffer[r];u.vertexBuffers[r].data=i.data,u.vertexBuffers[r].stride=i.stride;const s=(0,o.strideToPackingFactor)(i.stride),n=i.data.length*s/i.stride;p||(p=n)}u.vtxFreeList=new(0,s.FreeList)(p),u.vtxFreeList.allocate(r)}return h}delete(e){const t=n[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,r,i,s){const a=n[e.geometryType];let l,d;e.meshData=null,void 0===e.vertexFrom?(d=t.vertexCount,l=this._allocateVertices(a,d)):t.vertexCount>e.vertexCount?(this._freeVertices(a,e.vertexFrom,e.vertexCount),d=t.vertexCount,l=this._allocateVertices(a,d)):t.vertexCount===e.vertexCount?(l=e.vertexFrom,d=e.vertexCount):(this._freeVertices(a,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),l=e.vertexFrom,d=t.vertexCount);let h,c,u,f=!0;if(void 0===e.indexFrom?(h=s,u=t.indexCount,c=this._allocateIndices(a,u)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom,e.indexCount),u=t.indexCount,c=this._allocateIndices(a,u)):t.indexCount===e.indexCount?(f=!1,c=e.indexFrom,u=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(a,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),c=e.indexFrom,u=t.indexCount),-1!==l&&-1!==c){const s=this._storageFor(a);if((0,o.copyMeshData)(l,c,s.vertexBuffers,s.indexBuffer,t,r,i),e.vertexFrom=l,e.indexFrom=c,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return f&&this._displayList.addToList(e,h),!0}return-1!==l&&this._freeVertices(a,l,d),-1!==c&&this._freeIndices(a,c,u),e.setMeshDataFromBuffers(t,r,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const r=t.vertexBuffer,i=t.indexBuffer,s=n[e.geometryType],a=this._allocateVertices(s,e.vertexCount);if(-1===a)return this._freeVertices(s,a,e.vertexCount),!1;const l=this._allocateIndices(s,e.indexCount);if(-1===l)return this._freeVertices(s,a,e.vertexCount),this._freeIndices(s,l,e.indexCount),!1;const d=this._storageFor(s);if((0,o.copyMeshData)(a,l,d.vertexBuffers,d.indexBuffer,e,r,i),e.vertexFrom=a,e.indexFrom=l,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,a,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const r=this._storageFor(e),i=r.vtxFreeList.allocate(t);return-1===i||r.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,r){this._storageFor(e).vtxFreeList.free(t,r)}_freeIndices(e,t,r){this._storageFor(e).idxFreeList.free(t,r)}_allocateIndices(e,t){const r=this._storageFor(e),i=r.idxFreeList.allocate(t);return-1===i||r.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}constructor(e,t,r,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=r;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:i?new(0,s.FreeList)(i):null,idxFreeList:i?new(0,s.FreeList)(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const r in e[t])this._freeListsAndStorage[t].vertexBuffers[r]={data:i?(0,o.allocateTypedArrayBuffer)(i,e[t][r]):null,stride:e[t][r]}}}}})),t.register("gaZis",(function(t,r){e(t.exports,"FreeList",(function(){return s}));class i{get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,r=null;for(;null!==t;)t.count>=e&&(!r||t.count-e<r.count-e)&&(r=t),t=t.next;return r}findAdjacentRanges(e,t){let r=!0,i=!1,s=null,o=this._parent._freeHead;for(;r&&!i;){const n=null!==s?s.from+s.count:0,a=null!==o?o.from:this._parent._size;e>=n&&e+t<=a?(r=!1,i=!0):null!==o?(s=o,o=o.next):r=!1}return[s,o]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}}class s{allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const r=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,r,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;s._removeRange(t),this._freeHead=e}return r}free(e,t){const[r,i]=this._bookKeeper.findAdjacentRanges(e,t),o={from:e,count:t,prev:r,next:i};if(null!==r&&(r.next=o),null!==i&&(i.prev=o),this._bookKeeper.rangeCreated(o),this._allocated-=t,null!==i&&o.from+o.count===i.from){const e=o.from,t=o.count;s._fuse(o,i),s._removeRange(i),this._bookKeeper.rangeResized(o,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==r&&r.from+r.count===o.from){const e=r.from,t=r.count;s._fuse(r,o),s._removeRange(o),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(o,void 0,0)}this._freeHead=null!==o.prev?this._freeHead:o}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new i(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}}})),t.register("85L9a",(function(r,i){e(r.exports,"default",(function(){return l}));var s=t("cPgEa"),o=t("g0mVO"),n=t("l3QXd"),a=t("4radX");class l{dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,r,i){if(!t.data.vao){const s={};for(const e in t.buffers)s[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new(0,a.VertexArrayObject)(e,i,r,s,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,r)=>{this._upload(t,r,e)}))}_upload(e,t,r){if(e.indices&&(e.indices.allDirty?this._uploadIndices(r,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(r,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const s=i[e];s.allDirty?this._uploadVertices(r,t,e):null!=s.from&&null!=s.count&&this._uploadVertices(r,t,e,s.from,s.count)}}}_uploadVertices(e,t,r,i,s){const o=this.geometryMap[t];if(!o)return;const n=e.geometries[t].vertexBuffer[r];if(!n)return;const a=n.stride,l=n.data.buffer;o.buffers[r]&&l.byteLength>0&&(null!=i&&null!=s?o.buffers[r].data.vertexBuffer.setSubData(l,i*a,i*a,(i+s)*a):o.buffers[r].data.vertexBuffer.setData(l))}_uploadIndices(e,t,r,i){const s=this.geometryMap[t];if(!s)return;const o=e.geometries[t].indexBuffer.buffer;s.data.indexBuffer&&o.byteLength>0&&(null!=r&&null!=i?s.data.indexBuffer.setSubData(o,4*r,4*r,4*(r+i)):s.data.indexBuffer.setData(o))}constructor(e){this.geometryMap=(0,s.createGeometryData)((()=>({indexBuffer:o.BufferObject.createIndex(e,n.Usage.STATIC_DRAW),vao:null})),((t,r)=>({vertexBuffer:o.BufferObject.createVertex(e,s.C_VBO_INFO[r])})))}}})),t.register("6Xzce",(function(r,i){e(r.exports,"TileData",(function(){return _}));var s=t("1CpCt"),o=t("eyQUy"),n=t("747oS"),a=t("eNKpv"),l=t("jXcks"),d=t("cPgEa"),h=t("kzzZ1"),c=t("9PGNx"),u=t("euBpn"),f=t("cObbk"),p=t("dcBo6");const m=new(0,n.default),g=new(0,n.default);function y(e,t){const r={};for(const i in e){const s={data:(0,d.allocateTypedArrayBuffer)(t,e[i]),stride:e[i]};r[i]=s}return r}class _{reshuffle(){m.reset();const e=function(e){const t=[[],[],[],[],[]],r=e;for(const e of r)for(const r of e.displayRecords)t[r.geometryType].push(r);return t}(this.tileDisplayData.displayObjects);for(const t of e)for(const e of t)e&&m.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,r=new(0,a.default);for(let e=0;e<t;++e){r.geometries[e].indexBuffer=new Uint32Array(Math.round(1.5*m.indicesFor(e)));const t=[];for(const r in this.tileBufferData.geometries[e].vertexBuffer)t.push(this.tileBufferData.geometries[e].vertexBuffer[r].stride);const i=_._computeVertexAlignment(t),s=Math.round(1.5*m.verticesFor(e)),o=_._align(s,i);for(const t in this.tileBufferData.geometries[e].vertexBuffer){const i=this.tileBufferData.geometries[e].vertexBuffer[t].stride;r.geometries[e].vertexBuffer[t]={stride:i,data:(0,d.allocateTypedArrayBuffer)(o,i)}}}g.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const t=e[i];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(g.verticesFor(i),r.geometries[i].vertexBuffer,g.indicesFor(i),r.geometries[i].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[i].vertexBuffer,s=this.tileBufferData.geometries[i].indexBuffer,o=r.geometries[i].vertexBuffer,n=r.geometries[i].indexBuffer,a=g.verticesFor(i),l=g.indicesFor(i);(0,d.copyMeshData)(a,l,o,n,e,t,s),e.vertexFrom=a,e.indexFrom=l}g.needMore(i,e.vertexCount,e.indexCount)}}for(const e of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(e.displayRecords);this.tileBufferData=r}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const r=this.tileBufferData.geometries[t];e[t]={};for(const i in r.vertexBuffer)e[t][i]=r.vertexBuffer[i].stride}return e}clone(){const e=new _;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let r=0;for(let i=0;i<t;i++)r=Math.max(r,e[i].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new(0,p.default)(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}}static fromVertexData(e,t){const r={},i=new Map;for(const e of t)i.set(e.id,e);return(0,d.forEachGeometryType)((t=>{const n=e.data[t];if((0,s.isSome)(n)){const e=c.DisplayRecordReader.from(n.records).getCursor();for(;e.next();){const r=e.id,s=e.materialKey,o=e.indexFrom,n=e.indexCount,a=e.vertexFrom,l=e.vertexCount,d=i.get(r),c=new(0,h.default)(r,t,s);c.indexFrom=o,c.indexCount=n,c.vertexFrom=a,c.vertexCount=l,d.displayRecords.push(c)}r[t]=u.VertexBuffers.fromVertexData(n,t)}else r[t]=new(0,f.VertexVectors)(t,0,o.WGLSymbologyType.DEFAULT).intoBuffers()})),_.fromMeshData({displayObjects:t,vertexBuffersMap:r})}static fromMeshData(e){const t=new _,r=new(0,l.default),i=new(0,a.default);r.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const r=e.vertexBuffersMap[t];i.geometries[t].indexBuffer=r.indexBuffer,i.geometries[t].vertexBuffer=r.namedBuffers}return t.tileDisplayData=r,t.tileBufferData=i,t}static bind(e,t){const r=new _;return r.tileDisplayData=e,r.tileBufferData=t,r}static create(e,t){const r=new _;r.tileDisplayData=new(0,l.default),r.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],s=[0,0,0,0,0],o=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)o[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,s[e.geometryType]+=e.meshData.indexData.length;const n=new(0,a.default),d=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let e=0;e<5;e++){const t=new Uint32Array(s[e]),r=y(d[e],i[e]);h.default.writeAllMeshDataToBuffers(o[e],r,t),n.geometries[e]={indexBuffer:t,vertexBuffer:r}}return r.tileBufferData=n,r}static _align(e,t){const r=e%t;return 0===r?e:e+(t-r)}static _computeVertexAlignment(e){let t=!1,r=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(r=!0);return r?4:t?2:1}constructor(){this.tileDisplayData=null,this.tileBufferData=null}}})),t.register("747oS",(function(t,r){e(t.exports,"default",(function(){return i}));class i{get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,r){if(!t&&!r)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=r}constructor(){this._byGeometryType=null}}})),t.register("eNKpv",(function(r,i){e(r.exports,"default",(function(){return o}));var s=t("cPgEa");class o{clone(){const e=new o;for(let t=0;t<this.geometries.length;t++){const r=this.geometries[t],i=e.geometries[t];i.indexBuffer=r.indexBuffer.slice(),i.vertexBuffer={};for(const e in r.vertexBuffer){const{data:t,stride:s}=r.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:s}}}return e}static deserialize(e){const t=new o;for(let r=0;r<5;++r){t.geometries[r].indexBuffer=new Uint32Array(e.geometries[r].indexBuffer),t.geometries[r].vertexBuffer={};for(const i in e.geometries[r].vertexBuffer)t.geometries[r].vertexBuffer[i]={data:(0,s.allocateTypedArrayBufferwithData)(e.geometries[r].vertexBuffer[i].data,e.geometries[r].vertexBuffer[i].stride),stride:e.geometries[r].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const r in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[r]={data:this.geometries[t].vertexBuffer[r].data.buffer,stride:this.geometries[t].vertexBuffer[r].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const r in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[r].data.buffer)}return e}constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}}})),t.register("jXcks",(function(r,i){e(r.exports,"default",(function(){return a}));var s=t("asObQ"),o=t("6sktq"),n=t("7HvQo");class a{get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new(0,s.default);for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new a;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return(0,n.serializeList)(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),r=new Array(t),i=new Map;for(let t=0;t<r.length;++t){const s=o.default.deserialize(e);r[t]=s,i.set(s.id,s)}this.displayObjects=r,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new a;return t._deserializeObjects(e),t}}})),t.register("asObQ",(function(r,i){e(r.exports,"default",(function(){return n}));var s=t("eDdav");function o(e,t,r,...i){t<e.length?e.splice(t,r,...i):e.push(...i)}class n{replay(e,t,r){for(const i of this.symbolLevels)for(const o of i.zLevels){const i=o.geometryDPInfo.unified;if(i)for(const o of i){const{geometryType:i,materialKey:n,indexFrom:a,indexCount:l}=o,d=s.MaterialKeyBase.load(n).symbologyType,h=e.painter.getBrush(i,d),c={geometryType:i,materialKey:n,indexFrom:a,indexCount:l,target:t.getGeometry(i)};h.prepareState(e,t),h.drawGeometry(e,t,c,r)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const r of e)this._addToList(r,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const r of e)t=this._removeFromList(r);return t}clone(){const e=new n;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),r=t.length,i=e.indexFrom+e.indexCount;for(let s=0;s<r;++s){const r=t[s];if(r.geometryType===e.geometryType&&i>r.indexFrom&&i<=r.indexFrom+r.indexCount){if(i<r.indexFrom+r.indexCount){const e=new a;e.geometryType=r.geometryType,e.materialKey=r.materialKey,e.indexFrom=i,e.indexCount=r.indexFrom+r.indexCount-i,t.splice(s+1,0,e),r.indexCount=i-r.indexFrom}return s}}}_addToList(e,t){const r=e.symbolLevel,i=e.zOrder,s=this._getDisplayList(r,i),n=null!=t?t:s.length-1,l=n>=0&&n<s.length?s[n]:null;if(null!==l&&l.materialKey===e.materialKey&&l.indexFrom+l.indexCount===e.indexFrom&&l.geometryType===e.geometryType)l.indexCount+=e.indexCount;else{const t=new a;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,o(s,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,r=e.zOrder,i=this._getDisplayList(t,r),s=i.length;let n;for(let t=0;t<s;++t){const r=i[t];if(e.indexFrom+e.indexCount>r.indexFrom&&e.indexFrom<r.indexFrom+r.indexCount&&r.geometryType===e.geometryType){n=t;break}}if(void 0!==n){const t=i[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&o(i,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(o(i,n,1),n-1):n;{const r=t.indexFrom,s=e.indexFrom-t.indexFrom,l=e.indexCount,d=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=s;const h=new a;return h.geometryType=t.geometryType,h.materialKey=t.materialKey,h.indexFrom=r+s+l,h.indexCount=d,o(i,n+1,0,h),n}}return null}_getDisplayList(e,t){let r;const i=this.symbolLevels.length;for(let t=0;t<i;t++)if(this.symbolLevels[t].symbolLevel===e){r=this.symbolLevels[t];break}let s;r||(r=new h,r.symbolLevel=e,this.symbolLevels.push(r));const o=r.zLevels.length;for(let e=0;e<o;e++)if(r.zLevels[e].zLevel===t){s=r.zLevels[e];break}return s||(s=new d,s.geometryDPInfo=new l,s.zLevel=t,r.zLevels.push(s)),s.geometryDPInfo.unified||(s.geometryDPInfo.unified=[]),s.geometryDPInfo.unified}getDPInfoType(){return"unified"}constructor(){this.symbolLevels=[]}}class a{clone(){const e=new a;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}}class l{clone(){const e=new l;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}}class d{clone(){const e=new d;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}constructor(){this.geometryDPInfo=new l}}class h{clone(){const e=new h;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}constructor(){this.zLevels=[]}}})),t.register("6sktq",(function(r,i){e(r.exports,"default",(function(){return n}));var s=t("kzzZ1"),o=t("7HvQo");class n{copy(){const e=new n(this.id);return e.set(this),e}clone(){const e=new n(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),(0,o.serializeList)(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),r=new n(t),i={id:t};return r.displayRecords=(0,o.deserializeList)(e,s.default,i),r}constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}}})),t.register("kzzZ1",(function(r,i){e(r.exports,"default",(function(){return n}));var s=t("ceiYW"),o=t("cPgEa");class n{get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new n(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,r){const i=new(0,s.default);for(const r in t){const s=t[r].stride,n=t[r].data,a=[],l=(0,o.strideToPackingFactor)(s);for(let t=0;t<s*e.vertexCount/l;++t)a[t]=n[t+s*e.vertexFrom/l];i.vertexData.set(r,a)}i.indexData.length=0;for(let t=0;t<e.indexCount;++t)i.indexData[t]=r[t+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new(0,s.default);for(const t in e){const r=e[t].stride,i=e[t].data,s=[],n=(0,o.strideToPackingFactor)(r);for(let e=0;e<r*this.vertexCount/n;++e)s[e]=i[e+r*this.vertexFrom/n];this.meshData.vertexData.set(t,s)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,r,i){for(const r in t){const i=t[r].stride,s=this.meshData.vertexData.get(r),n=t[r].data,a=(0,o.strideToPackingFactor)(i);for(let t=0;t<i*this.meshData.vertexCount/a;++t)n[t+i*e/a]=s[t]}for(let t=0;t<this.meshData.indexData.length;++t)i[t+r]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=r,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,r){let i=0,s=0;for(const o of e)o.writeMeshDataToBuffers(i,t,s,r),i+=o.vertexCount,s+=o.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const r=e.readInt32(),i=e.readInt32(),s=new n(t.id,r,i);return s.vertexFrom=e.readInt32(),s.vertexCount=e.readInt32(),s.indexFrom=e.readInt32(),s.indexCount=e.readInt32(),s.minZoom=e.readInt32(),s.maxZoom=e.readInt32(),s}constructor(e,t,r,i=0,s=0){this.id=e,this.geometryType=t,this.materialKey=r,this.minZoom=i,this.maxZoom=s,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}}})),t.register("ceiYW",(function(t,r){e(t.exports,"default",(function(){return i}));class i{clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,r){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=r}constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}}})),t.register("7HvQo",(function(t,r){function i(e,t){if(null!==t){e.push(t.length);for(const r of t)r.serialize(e);return e}e.push(0)}function s(e,t,r){const i=e.readInt32(),s=new Array(i);for(let i=0;i<s.length;i++)s[i]=t.deserialize(e,r);return s}e(t.exports,"serializeList",(function(){return i})),e(t.exports,"deserializeList",(function(){return s}))})),t.register("euBpn",(function(r,i){e(r.exports,"VertexBuffers",(function(){return n}));var s=t("cPgEa");class o{static decode(e){const t=(0,s.allocateTypedArrayBufferwithData)(e.data,e.stride),r=e.stride;return new o(t,r)}static fromVertexVector(e){const t=(0,s.allocateTypedArrayBufferwithData)(e.data.buffer(),e.stride),r=e.stride;return new o(t,r)}constructor(e,t){this.data=e,this.stride=t}}class n{static decode(e){const t=e.geometryType,r=e.indexBuffer,i={};for(const t in e.namedBuffers)i[t]=o.decode(e.namedBuffers[t]);return new n(t,r,i)}static fromVertexData(e,t){const r=e.indices,i=(0,s.allocateTypedArrayBufferwithData)(e.vertices,e.stride),a=e.stride,l={geometry:new o(i,a)};return new n(t,r,l)}static fromVertexVectors(e){const t=e.geometryType,r=e.indexVector.buffer(),i={};for(const t in e.namedVectors)i[t]=o.fromVertexVector(e.namedVectors[t]);return new n(t,r,i)}constructor(e,t,r){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=r}}})),t.register("cObbk",(function(r,i){e(r.exports,"VertexVectors",(function(){return l}));var s=t("cPgEa"),o=t("euBpn"),n=t("dcBo6");class a{get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const r=this.data.buffer();e.vertexCount=this.vertexCount,e.data=r,e.stride=this.stride,t.push(r)}constructor(e,t){this.data=e,this.stride=t}}class l{get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const r=this.indexVector.buffer(),i={};t.push(r);for(const e in this.namedVectors){const r=this.namedVectors[e];i[e]={},r.transfer(i[e],t)}e.geometryType=this.geometryType,e.indexBuffer=r,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=o.VertexBuffers.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}constructor(e,t,r){this.geometryType=e,this.indexVector=new(0,n.default)(Uint32Array,6*t),this.namedVectors={};const i=(0,s.getStrides)(e,r);for(const e in i){const r=i[e];let s;switch(r%4){case 0:case 2:s=new(0,n.default)(Uint32Array,r*t);break;case 1:case 3:s=new(0,n.default)(Uint8Array,r*t)}this.namedVectors[e]=new a(s,r)}}}})),t.register("faWte",(function(r,i){e(r.exports,"GraphicsReader",(function(){return l}));var s=t("86d4E"),o=t("8RZNq"),n=t("dbCZi"),a=t("dmhPb");class l extends a.FeatureSetReaderJSON{static from(e,t){const r=n.FeatureSetReader.createInstance(),i=[],a=e.filter((e=>!!e.geometry));for(const e of a){const r=(0,s.getJsonType)(e.geometry);(0,o.convertFromGraphics)(i,[e],r,!1,!1,t)}return new l(r,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new l(this.instance,this._features);return this.copyInto(e),e}constructor(e,t){super(e,t,null)}}})),t.register("f4cqe",(function(r,i){e(r.exports,"default",(function(){return v}));var s=t("1CpCt"),o=t("jCR4P"),n=t("lD2ob"),a=t("19dbe"),l=t("772GK"),d=t("hq5aB"),h=t("fau59"),c=t("khzw4"),u=t("1kN4D"),f=t("1SWxH"),p=t("mayqQ");const m={minX:0,minY:0,maxX:0,maxY:0},g=(0,a.create)(),y=1e-5;function _(e,t,r,i,s){return m.minX=t,m.minY=r,m.maxX=i,m.maxY=s,e.search(m)}function x(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class v{setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new(0,c.HittestDrawHelper)(e)}hitTest(e,t,r,i,s){e=(0,d.normalizeMapX)(e,this._tileInfoView.spatialReference);const o=.5*i*window.devicePixelRatio*r;g[0]=e-o,g[1]=t-o,g[2]=e+o,g[3]=t+o;const n=.5*i*(r+p.PIXEL_BUFFER),l=_(this._index,e-n,t-n,e+n,t+n);if(!l||0===l.length)return[];const h=[],c=(0,a.create)(),u=(0,a.create)();for(const e of l){const{geometry:t,symbolResource:r}=e;this._getSymbolBounds(c,r,t,u,s),u[3]=u[2]=u[1]=u[0]=0,(0,a.intersects)(c,g)&&e.graphic.visible&&h.push(e)}if(0===h.length)return[];const f=this._hittestDrawHelper,m=[];for(const e of h){const{geometry:t,symbolResource:r}=e,{hash:o,textInfo:n}=r,a=this._hashToCIM.get(o);a&&f.hitTest(g,a.symbol,t,n,s,i)&&m.push(e)}return m.sort(b),m.map((e=>e.graphic))}getGraphicsData(e,t,r){const i=this._searchForItems(t);if(0===i.length||0===r.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let e=1;e<i.length;e++)i[e].insertAfter=i[e-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),r.sort(((e,t)=>e.uid-t.uid));let s,o=0,n=0;const a=t.resolution,l=[],d={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const h of r){for(n=-2;o<i.length;)if(s=i[o],o++,h.uid===s.graphic.uid){n=s.insertAfter;break}if(!s.geometry||-2===n)continue;const r=s.getGeometryQuantized(d,t.bounds,this._tileInfoView.spatialReference,a),c={...s.graphic.attributes};c[this._uidFieldName]=h.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),l.push({centroid:f.default.getCentroidQuantized(s,d),geometry:r,attributes:c,symbol:s.symbol,groupId:s.groupId,insertAfter:n,zorder:s.zorder})}return l.sort(((e,t)=>e.zorder-t.zorder)),l}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:r,resolution:i}=t,s=this._searchForItems(t),o=[];return 0===s.length||this._createTileGraphics(o,e,s,{originPosition:"upperLeft",scale:[i,i],translate:[r[0],r[3]]},t),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,r){if(!e||(0,s.isNone)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],o=this._getSymbolBounds(null,t,r,i,0),n=f.default.acquire(e,t,r,(0,s.isSome)(o)?o:null,i);return this._itemByGraphic.set(e,n),r&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,r;for(let i=0;i<e.length;i++)r=e[i],t=this._itemByGraphic.get(r),t&&(t.zorder=i)}update(e,t,r){const i=this._itemByGraphic.get(e);i.groupId=null;const o=(0,a.clone)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,r,i.size,0);return(0,s.isSome)(n)&&i.set(e,t,r,n,i.size),r&&this._index.insert(i),{oldBounds:o,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,r=[];for(const[e,i]of t){const e=this._getSymbolBounds(i.bounds,i.symbolResource,i.geometry,i.size,0);i.geometry&&(0,s.isSome)(e)&&(i.bounds=e,r.push(i))}this._index.load(r)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,r,i,s){const o=this._uidFieldName,n=this._tileInfoView.spatialReference,{bounds:a,resolution:l}=s;let d,h,c,u;r.sort(((e,t)=>e.zorder-t.zorder));for(let s=0;s<r.length;s++){c=r[s],d=c.graphic,h=c.getGeometryQuantized(i,a,n,l),u=0===s?-1:r[s-1].graphic.uid;const p={...c.graphic.attributes};p[o]=d.uid,null==c.groupId&&(c.groupId=t.createTemplateGroup(c.symbol,null)),e.push({centroid:f.default.getCentroidQuantized(c,i),geometry:h,attributes:p,symbol:c.symbol,groupId:c.groupId,insertAfter:u,zorder:c.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,r=e.bounds;if(t.isWrappable){const[i,s]=(0,h.getInfo)(t).valid,o=Math.abs(r[2]-s)<y,n=Math.abs(r[0]-i)<y;if((!o||!n)&&(o||n)){const t=e.resolution;let n;n=(0,a.create)(o?[i,r[1],i+t*p.PIXEL_BUFFER,r[3]]:[s-t*p.PIXEL_BUFFER,r[1],s,r[3]]);const l=_(this._index,r[0],r[1],r[2],r[3]),d=_(this._index,n[0],n[1],n[2],n[3]);return[...new Set([...l,...d])]}}return _(this._index,r[0],r[1],r[2],r[3])}_getSymbolBounds(e,t,r,i,s){if(!t||!t.symbol||!r)return null;if(e||(e=(0,a.create)()),(0,l.getBoundsXY)(e,r),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:e,textInfo:r}=t,n=this._hashToCIM.get(e);if(!n)return null;i||(i=[0,0,0,0]);const a=this._inflatedSizeHelper.getSymbolInflateSize(i,n.symbol,this._cimResourceManager,s,r);i[0]=(0,o.pt2px)(a[0]),i[1]=(0,o.pt2px)(a[1]),i[2]=(0,o.pt2px)(a[2]),i[3]=(0,o.pt2px)(a[3])}const n=this._resolution,d=u.CIMSimbolInflatedSizeHelper.safeSize(i);return e[0]-=d*n,e[1]-=d*n,e[2]+=d*n,e[3]+=d*n,e}constructor(e,t,r,i,s,o,a){this._graphics=i,this._onAdd=s,this._onRemove=o,this._hashToCIM=a,this._index=(0,n.r)(9,x),this._itemByGraphic=new Map,this._inflatedSizeHelper=new(0,u.CIMSimbolInflatedSizeHelper),this._tileInfoView=e,this._uidFieldName=r;const l=e.getClosestInfoForScale(t);l&&(this._resolution=this._tileInfoView.getTileResolution(l.level))}}const b=(e,t)=>{const r=(0,p.graphicGeometryToNumber)(e.graphic),i=(0,p.graphicGeometryToNumber)(t.graphic);return r===i?t.zorder-e.zorder:r-i}})),t.register("1SWxH",(function(r,i){e(r.exports,"default",(function(){return g}));var s=t("1CpCt"),o=t("19dbe"),n=t("2oFSF"),a=t("86d4E"),l=t("1kNSi"),d=t("fau59"),h=t("8RZNq"),c=t("i24Gp");const u=new(0,c.default),f=new(0,c.default),p="esriGeometryPolyline";function m(e){e.coords.length=0,e.lengths.length=0}class g{static acquire(e=null,t,r,i,s){let o;return 0===g._pool.length?o=new g:(o=g._pool.pop(),this._set.delete(o)),o.acquire(e,t,r,i,s),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,a.isPolygon)(e.geometry)){const r=e.symbol;if((0,s.isNone)(r))return null;if(r?.layers.length>0&&r.layers.some((e=>"text"===e.type||"marker"===e.type))){const r=(0,n.polygonCentroid)(e.geometry);return null!==r?(0,l.quantizePoint)(t,{},{x:r[0],y:r[1]},!1,!1):null}}return null}acquire(e=null,t,r,i,s){e&&this.set(e,t,r,i,s)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,r,i,s){this.graphic=e,this.geometry=r,this.symbolResource=t,this.bounds=i,s&&(this.size=s)}getGeometryQuantized(e,t,r,i){const s=this.geometry;if((0,a.isPolygon)(s)){const t=s.rings;if(1===t.length&&2===t[0].length)return(0,l.quantizeGeometry)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,a.isPolyline)(s))return m(u),m(f),(0,h.convertFromPolyline)(u,s),(0,h.generalizeOptimizedGeometry)(f,u,s.hasZ,s.hasM,p,e.scale[0]),(0,h.quantizeOptimizedGeometry)(u,f,s.hasZ,s.hasM,p,e),(0,h.convertToPolyline)(u,s.hasZ,s.hasM);if((0,a.isMultipoint)(s)){const n=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),a=(0,d.getInfo)(r);let h=s.points;if(a){const[e,r]=a.valid,i=r-e;h=h.filter((s=>{if(s[0]+n>r||s[0]-n<e){const e=[...s];return s[0]+n>r?e[0]-=i:e[0]+=i,(0,o.containsPointWithMargin)(t,s,n)||(0,o.containsPointWithMargin)(t,e,n)}return(0,o.containsPointWithMargin)(t,s,n)}))}return 0===h.length?{points:h}:(0,l.quantizeGeometry)(e,{points:h})}}return(0,l.quantizeGeometry)(e,this.geometry)}constructor(){this.bounds=(0,o.create)(),this.graphic=null}}g._pool=[],g._set=new Set})),t.register("5smAu",(function(r,i){e(r.exports,"GraphicsView",(function(){return l}));var s=t("j6uz9"),o=t("2tTSh"),n=t("hTI69");t("aX9sh"),t("5HTPH"),t("gHCNy");var a=t("qA6zg");const l=e=>{let t=class extends((0,o.IdentifiableMixin)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,s._)([(0,n.property)()],t.prototype,"graphics",void 0),(0,s._)([(0,n.property)()],t.prototype,"renderer",void 0),(0,s._)([(0,n.property)()],t.prototype,"updating",void 0),(0,s._)([(0,n.property)()],t.prototype,"view",void 0),t=(0,s._)([(0,a.subclass)("esri.views.layers.GraphicsView")],t),t}})),t.register("eumJQ",(function(r,i){e(r.exports,"default",(function(){return a}));var s=t("faj3Z"),o=t("drAR1"),n=t("l3QXd");class a extends s.FeatureContainer{destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(e){this._boundsRenderer=new(0,o.default)(e),this.requestRender()}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const r of this.children)r.isReady&&r.hasData&&(r.commit(e),e.context.setStencilFunction(n.CompareFunction.EQUAL,r.stencilRef,255),r._displayList.replay(e,r,t))}constructor(e){super(e),this.hasHighlight=()=>!0}}})),t.register("drAR1",(function(r,i){e(r.exports,"default",(function(){return m}));var s=t("52822"),o=t("jsolS"),n=t("gLni9"),a=t("bQCak"),l=t("hq5aB"),d=t("5aS5k"),h=t("cPgEa"),c=t("g0mVO"),u=t("l3QXd"),f=t("4radX");const p=Math.PI/180;class m extends d.DisplayObject{destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(e){const{context:t}=e,r=this._getBounds();if(r.length<1)return;this._createShaderProgram(t),this._updateMatricesAndLocalOrigin(e),this._updateBufferData(t,r),t.setBlendingEnabled(!0),t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setBlendFunction(u.BlendFactor.ONE,u.BlendFactor.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const i=this._program;t.bindVAO(this._vao),t.useProgram(i),i.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),t.gl.lineWidth(1),t.drawElements(u.PrimitiveType.LINES,8*r.length,u.DataType.UNSIGNED_INT,0),t.bindVAO()}_createTransforms(){return{dvs:(0,o.c)()}}_createShaderProgram(e){if(this._program)return;this._program=e.programCache.acquire("precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",g().attributes)}_updateMatricesAndLocalOrigin(e){const{state:t}=e,{displayMat3:r,size:i,resolution:o,pixelRatio:d,rotation:h,viewpoint:c}=t,u=p*h,{x:f,y:m}=c.targetGeometry,g=(0,l.normalizeMapX)(f,t.spatialReference);this._localOrigin.x=g,this._localOrigin.y=m;const y=d*i[0],_=d*i[1],x=o*y,v=o*_,b=(0,s.b)(this._dvsMat3);(0,s.m)(b,b,r),(0,s.c)(b,b,(0,n.f)(y/2,_/2)),(0,s.d)(b,b,(0,a.f)(i[0]/x,-_/v,1)),(0,s.r)(b,b,-u)}_updateBufferData(e,t){const{x:r,y:i}=this._localOrigin,s=8*t.length,o=new Float32Array(s),n=new Uint32Array(8*t.length);let a=0,l=0;for(const e of t)e&&(o[2*a+0]=e[0]-r,o[2*a+1]=e[1]-i,o[2*a+2]=e[0]-r,o[2*a+3]=e[3]-i,o[2*a+4]=e[2]-r,o[2*a+5]=e[3]-i,o[2*a+6]=e[2]-r,o[2*a+7]=e[1]-i,n[l+0]=a+0,n[l+1]=a+3,n[l+2]=a+3,n[l+3]=a+2,n[l+4]=a+2,n[l+5]=a+1,n[l+6]=a+1,n[l+7]=a+0,a+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(o.buffer):this._vertexBuffer=c.BufferObject.createVertex(e,u.Usage.DYNAMIC_DRAW,o.buffer),this._indexBuffer?this._indexBuffer.setData(n):this._indexBuffer=c.BufferObject.createIndex(e,u.Usage.DYNAMIC_DRAW,n),!this._vao){const t=g();this._vao=new(0,f.VertexArrayObject)(e,t.attributes,t.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}constructor(e){super(),this._dvsMat3=(0,o.c)(),this._localOrigin={x:0,y:0},this._getBounds=e}}const g=()=>(0,h.createProgramDescriptor)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:u.DataType.FLOAT}]})}));
//# sourceMappingURL=mapViewDeps.e3a057b5.js.map
