function e(e,t,r,i){Object.defineProperty(e,t,{get:r,set:i,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("crn3X",(function(r,i){var o;o=r.exports,Object.defineProperty(o,"__esModule",{value:!0,configurable:!0}),e(r.exports,"default",(function(){return w}));var n=t("j6uz9");t("ixrNB");var a=t("bPmsI"),s=t("1CpCt"),l=t("7dRCe"),u=t("hTI69");t("aX9sh"),t("5HTPH"),t("gHCNy");var d=t("bzBbJ"),p=t("qA6zg"),c=t("iaM5n"),y=t("j3i19"),h=t("7hPz0"),f=t("gC5jC"),g=t("hej7M"),m=t("jaaCV");let v=class extends c.default{normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)}set url(e){if(!e)return void this._set("url",e);const t=(0,l.urlToObject)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async createGraphicsSource(e){const t=new(0,y.default)({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url},customParameters:this.customParameters});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.delimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(f.default.from(e)||this.createQuery()))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(f.default.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(f.default.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(f.default.from(e)||this.createQuery())))}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}clone(){throw new(0,a.default)("CSVLayer",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return(0,s.isSome)(t)&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}constructor(...e){super(...e),this.capabilities=(0,h.createCapabilities)(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=m.default.WGS84,this.source=null,this.type="csv"}};(0,n._)([(0,u.property)({readOnly:!0,json:{read:!1,write:!1}})],v.prototype,"capabilities",void 0),(0,n._)([(0,u.property)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],v.prototype,"delimiter",void 0),(0,n._)([(0,u.property)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],v.prototype,"editingEnabled",void 0),(0,n._)([(0,u.property)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],v.prototype,"fields",void 0),(0,n._)([(0,u.property)({type:Boolean,readOnly:!0})],v.prototype,"isTable",null),(0,n._)([(0,d.reader)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],v.prototype,"readWebMapLabelsVisible",null),(0,n._)([(0,u.property)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"latitudeField",void 0),(0,n._)([(0,u.property)({type:["show","hide"]})],v.prototype,"listMode",void 0),(0,n._)([(0,u.property)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],v.prototype,"locationType",void 0),(0,n._)([(0,u.property)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],v.prototype,"longitudeField",void 0),(0,n._)([(0,u.property)({type:["CSV"]})],v.prototype,"operationalLayerType",void 0),(0,n._)([(0,u.property)()],v.prototype,"outFields",void 0),(0,n._)([(0,u.property)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],v.prototype,"path",void 0),(0,n._)([(0,u.property)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],v.prototype,"portalItem",void 0),(0,n._)([(0,u.property)({json:{read:!1},cast:null,type:y.default,readOnly:!0})],v.prototype,"source",void 0),(0,n._)([(0,u.property)({json:{read:!1},value:"csv",readOnly:!0})],v.prototype,"type",void 0),(0,n._)([(0,u.property)({json:{read:g.r,write:{isRequired:!0,ignoreOrigin:!0,writer:g.w}}})],v.prototype,"url",null),v=(0,n._)([(0,p.subclass)("esri.layers.CSVLayer")],v);const w=v})),t.register("j3i19",(function(r,i){e(r.exports,"default",(function(){return f}));var o=t("j6uz9");t("ixrNB");var n=t("5HTPH"),a=t("lEAUW"),s=t("1CpCt"),l=t("lHg4e"),u=t("lHDjA"),d=t("hTI69");t("aX9sh"),t("gHCNy");var p=t("qA6zg"),c=t("gEU1A"),y=t("2WnyR");let h=class extends a.default{load(e){const t=(0,s.isSome)(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return c.default.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:y.default.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _startWorker(e){this._connection=await(0,u.open)("CSVSourceWorker",{strategy:(0,n.default)("feature-layers-workers")?"dedicated":"local",signal:e});const{url:t,delimiter:r,fields:i,latitudeField:o,longitudeField:a,spatialReference:s,timeInfo:l}=this.loadOptions,d=await this._connection.invoke("load",{url:t,customParameters:this.customParameters,parsingOptions:{delimiter:r,fields:null==i?void 0:i.map((e=>e.toJSON())),latitudeField:o,longitudeField:a,spatialReference:null==s?void 0:s.toJSON(),timeInfo:null==l?void 0:l.toJSON()}},{signal:e});this.locationInfo=d.locationInfo,this.sourceJSON=d.layerDefinition,this.delimiter=d.delimiter}constructor(e){super(e),this.type="csv",this.refresh=(0,l.debounce)((async e=>{await this.load();const{extent:t,timeExtent:r}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}};(0,o._)([(0,d.property)()],h.prototype,"type",void 0),(0,o._)([(0,d.property)()],h.prototype,"loadOptions",void 0),(0,o._)([(0,d.property)()],h.prototype,"customParameters",void 0),(0,o._)([(0,d.property)()],h.prototype,"locationInfo",void 0),(0,o._)([(0,d.property)()],h.prototype,"sourceJSON",void 0),(0,o._)([(0,d.property)()],h.prototype,"delimiter",void 0),h=(0,o._)([(0,p.subclass)("esri.layers.graphics.sources.CSVSource")],h);const f=h}));
//# sourceMappingURL=CSVLayer.f7aced8c.js.map
