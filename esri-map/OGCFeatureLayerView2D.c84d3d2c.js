var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("lstEf",(function(t,i){var r,s,a,n,l;r=t.exports,Object.defineProperty(r,"__esModule",{value:!0,configurable:!0}),s=t.exports,a="default",n=function(){return Q},Object.defineProperty(s,a,{get:n,set:l,enumerable:!0,configurable:!0});var o=e("j6uz9"),h=e("g5QqQ");e("ixrNB");var u=e("EvxpF"),d=e("26zvD"),y=e("bPmsI"),p=e("5HTPH"),c=e("itGIg"),f=e("6TszD"),g=e("1CpCt"),_=e("lHg4e"),m=e("cc23H"),v=e("hTI69");e("gHCNy");var b=e("qA6zg"),S=e("ktCFl"),R=e("gkHrn"),x=e("gEU1A"),w=e("gC5jC"),C=e("aPQ4T"),U=e("35vaU"),E=e("4W3Zs"),F=e("643pB"),I=e("32ZAU"),O=e("2aVaM"),T=e("b9yzk"),q=e("8it4a"),V=e("j9MnR"),N=e("dKRyb"),z=e("YRjSC"),H=e("aDxLR"),P=e("8r0sl"),k=e("2WnyR");function L(e){return e&&"openPorts"in e}const A=f.default.getLogger("esri.views.2d.layers.FeatureLayerView2D");let J=class extends((0,N.FeatureLayerView)((0,H.RefreshableLayerView)((0,U.LayerView2DMixin)(z.default)))){destroy(){var e;(0,g.applySome)(this._updateClusterSizeTask,(e=>e.remove())),null==(e=this._proxy)||e.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",(e=>{this._set("_aggregateValueRanges",e.valueRanges)})),(0,m.watch)((()=>this.featureEffect),(e=>{this.featureEffectView.featureEffect=e}),{initial:!0,sync:!0})])}async _initProxy(){if("isTable"in this.layer&&this.layer.isTable)throw new(0,y.default)("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});this._proxy&&this._proxy.destroy();const e=this._createClientOptions();return this._set("_proxy",new(0,T.default)({client:e})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get orderByFields(){return"stream"!==this._serviceOptions.type&&this._serviceOptions.orderByFields}get labelsVisible(){const e="subtype-group"===this.layer.type?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some((e=>e.labelingInfo&&e.labelsVisible))}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s="subtype-group"!==this.layer.type&&this.layer.labelsVisible&&this.layer.labelingInfo,a="renderer"in t&&t.renderer,n="feature"===t.type?t.gdbVersion:void 0,l="feature"===t.type&&t.historicMoment?t.historicMoment.getTime():void 0,{timeExtent:o}=this,h="customParameters"in t?JSON.stringify(t.customParameters):void 0,u="apiKey"in t?t.apiKey:void 0,d="stream"===t.type?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,y=JSON.stringify(this.clips),p=t.featureReduction&&t.featureReduction.toJSON(),c="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),f="sublayers"in this.layer&&this.layer.sublayers.items.reduce(((e,t)=>e+`${t.visible?1:0}.${JSON.stringify(t.renderer)}.${t.labelsVisible}\n.${JSON.stringify(t.labelingInfo)}`),"");return JSON.stringify({orderBy:c,sublayerHash:f,filterHash:(0,g.isSome)(this.filter)&&this.filter.toJSON(),effectHash:(0,g.isSome)(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:d,gdbVersion:n,definitionExpression:r,historicMoment:l,availableFields:e,renderer:a,labelingInfo:s,timeExtent:o,floors:i,clipsHash:y,featureReduction:p,customParameters:h,apiKey:u})}highlight(e){var t;let i;return e instanceof u.default?i=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?i=[e]:Array.isArray(e)&&e.length>0?i="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>null==e?void 0:e.getObjectId())):d.default.isCollection(e)&&e.length>0&&(i=e.map((e=>null==e?void 0:e.getObjectId())).toArray()),i=null==(t=i)?void 0:t.filter((e=>null!=e)),i&&i.length?(this._addHighlight(i),{remove:()=>this._removeHighlight(i)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,t){if(!this.tileRenderer)return null;const i=await this.tileRenderer.hitTest(t);if(0===i.length)return null;const{features:r,aggregates:s}=await this._proxy.getFeatures(i);return[...s.map((e=>this._createHittestResult(h.default.fromJSON(e)))),...r.map((e=>this._createHittestResult(u.default.fromJSON(e))))]}async queryAggregates(){return(await this._proxy.getAggregates()).map((e=>h.default.fromJSON(e)))}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=x.default.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then((e=>{const t=x.default.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then((e=>({count:e.count,extent:k.default.fromJSON(e.extent)})))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new(0,V.TileManager)({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add((0,m.watch)((()=>this.renderingConfigHash),(()=>this._update()),m.initial),"attach"),"stream"!==this.layer.type&&this.handles.add(this.layer.on("edits",(e=>this._edit(e))),"attach")}detach(){var e;this._commandsQueue.clear(),null==(e=this._proxy)||e.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){var e;const t="renderer"in this.layer&&null!=this.layer.renderer,i=this._commandsQueue.updating,r=null!=this._updatingRequiredFieldsPromise,s=!this._proxy||!this._proxy.isReady,a=this._pipelineIsUpdating,n=null==this.tileRenderer||(null==(e=this.tileRenderer)?void 0:e.updating),l=t&&(i||r||s||a||n);return(0,p.default)("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${l}\n  -> hasRenderer ${t}\n  -> hasPendingCommand ${i}\n  -> updatingRequiredFields ${r}\n  -> updatingProxy ${s}\n  -> updatingPipeline ${a}\n  -> updatingTileRenderer ${n}\n`),l}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){var t;const i="path"in e,r="editingInfo"in this.layer&&(null==(t=this.layer.editingInfo)?void 0:t.lastEditDate),s=!!this.layer.refreshInterval,a=!r&&s;if(i&&("feature"===this.layer.type||"subtype-group"===this.layer.type)&&"point"===this.layer.geometryType&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!a&&(0,p.default)("featurelayer-snapshot-enabled"))try{const e=await this.layer.queryFeatureCount();if(e<=(0,p.default)("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:e};const t=(0,p.default)("featurelayer-snapshot-point-max-threshold"),i=(0,p.default)("featurelayer-snapshot-point-coverage"),r=this.view.extent,s=(0,g.unwrap)(this.layer.fullExtent),a=null==s?void 0:s.clone().intersection(r),n=(0,g.isSome)(a)?a.width*a.height:0,l=(null==s?void 0:s.width)*(null==s?void 0:s.height),o=0===l?0:n/l;if(e<=t&&o>=i)return{mode:"snapshot",featureCount:e}}catch(e){A.warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:e})}return{mode:"on-demand"}}async _createServiceOptions(){var e;const t=this.layer;if("stream"===t.type)return null;const{capabilities:i,objectIdField:r}=t,s=t.fields.map((e=>e.toJSON())),a=(0,g.isSome)(t.fullExtent)&&t.fullExtent.toJSON(),n=(0,q.toJSONGeometryType)(t.geometryType),l=t.timeInfo&&t.timeInfo.toJSON()||null,o=t.spatialReference?t.spatialReference.toJSON():null,h="feature"===t.type?t.globalIdField:null;let u;"ogc-feature"===t.type?u=t.source.getFeatureDefinition():L(t.source)?u=await t.source.openPorts():t.parsedUrl&&(u=(0,c.clone)(t.parsedUrl),"dynamicDataSource"in t&&t.dynamicDataSource&&(u.query={layer:JSON.stringify({source:t.dynamicDataSource})}));const d="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,y=null!=(e="subtypeField"in this.layer&&this.layer.subtypeField)?e:null,{mode:p,featureCount:f}=await this._detectQueryMode(u);let _=this.layer.objectIdField;if("feature"===this.layer.type&&(0,g.isSome)(this.layer.orderBy)&&this.layer.orderBy.length){const e=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;e&&(_=e)}return{type:p,timeReferenceUnknownClient:d,subtypeField:y,featureCount:f,globalIdField:h,maxRecordCount:i.query.maxRecordCount,tileMaxRecordCount:i.query.tileMaxRecordCount,capabilities:i,fields:s,fullExtent:a,geometryType:n,objectIdField:r,source:u,timeInfo:l,spatialReference:o,orderByFields:_}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=w.default.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){if(!this.suspended)return this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0;this._clearTiles()}async doRefresh(e){if(this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),r=t&&this.availableFields.includes(t);return i&&!r?(A.error(new(0,y.default)("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:i}=this._getEffectiveRenderer();this._set("_effectiveRenderer",i);const r=this._createSchemaConfig(),s=this._createConfiguration(r,t,e.filter),a=this._lastDefinitionExpression!==s.definitionExpression;this._lastDefinitionExpression=s.definitionExpression;const n=this._createTileRendererHash(i);if("snapshot"===this._serviceOptions.type&&(s.schema.source.featureCount=this._serviceOptions.featureCount),n!==this._tileRendererHash){await this._initTileRenderer(i);const e=this.layer,t="stream"===e.type?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(i),"stream"!==e.type&&L(e.source)&&(t.source=await e.source.openPorts());const r={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,s,t,r),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(i)}else{"snapshot"===this._serviceOptions.type&&a&&(s.schema.source.featureCount=await this.layer.queryFeatureCount());const e=await this._proxy.update(s);(e.mesh||e.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(e)}catch(e){(0,_.isAbortError)(e)||A.error(e)}(e.mesh||e.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(i),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=n,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch(e){}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(e){(0,_.isAbortError)(e)}}async _doRefresh(e){var t;this._lockGPUUploads();try{await this._proxy.refresh(e)}catch(e){(0,_.isAbortError)(e)}this._unlockGPUUploads(),null!=(t=this.layer)&&t.featureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return this.watch("_aggregateValueRanges",(async i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()}))}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=(0,I.findSizeVV)(e.visualVariables);if((0,g.isSome)(r)&&"cluster_count"===r.field){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=(0,I.createClusterCountSizeVariable)(t,i);const a=e.clone();a.dynamicClusterSize=!0,this._set("_effectiveRenderer",a)}}}_getEffectiveRenderer(){const e="renderer"in this.layer&&this.layer.renderer,t=this.layer.featureReduction;if((0,g.isSome)(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),t&&"cluster"===t.type&&(0,I.isClusterCompatibleRenderer)(e)){const i=t,r=[],s=(0,I.createClusterRenderer)(r,e,i,this._aggregateValueRanges);return(0,g.applySome)(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(s,i),{renderer:s,aggregateFields:r,featureReduction:t}}return{renderer:e,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",(()=>{this.requestUpdate()})),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e){const t=await(0,F.createOrReuseTileRenderer)(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=t,this._set("tileRenderer",t),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(e),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return""+("heatmap"===e.type?"heatmap":"symbol")}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=(0,g.isSome)(e)?e.timeExtent:null,i=(0,g.isSome)(this.timeExtent)&&(0,g.isSome)(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const t=(0,g.isSome)(e)&&e.where;r=this._addFloorFilterClause(t)}if(!this._visibilityOverrides.size&&!i&&!s)return(0,g.isSome)(e)?e.toJSON():null;(e=(0,g.isSome)(e)&&e.clone()||new(0,R.default)).timeExtent=i,r&&(e.where=r);const a=e.toJSON();return a.hiddenIds=Array.from(this._visibilityOverrides),a}_addFloorFilterClause(e){const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){var r;let e=this.view.floors;if(!e||!e.length)return i;null!=(r=t.floorInfo.viewAllLevelIds)&&r.length&&(e=t.floorInfo.viewAllLevelIds);const s=e.filter((e=>""!==e)).map((e=>"'"+e+"'"));s.push("''");const a=t.floorInfo.floorField;let n="("+a+" IN ({ids}) OR "+a+" IS NULL)";if(n=n.replace("{ids}",s.join(", ")),(0,g.isSome)(i)&&i.includes(a)){let e=new RegExp("AND \\("+a+".*NULL\\)","g");i=i.replace(e,""),e=new RegExp("\\("+a+".*NULL\\)","g"),i=i.replace(e,""),i=i.replace(/\s+/g," ").trim()}i=""!==i?"("+i+") AND "+n:n}return""!==i?i:null}_createConfiguration(e,t,i){const r="feature"===this.layer.type&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s="feature"===this.layer.type?this.layer.gdbVersion:void 0,a=new Array(C.MAX_FILTERS),n=this._injectOverrides(t);a[0]=n,a[1]=(0,g.isSome)(i)?i.toJSON():null;const l=(0,E.createSchema)(e);if((0,g.isNone)(l))return null;const o=(0,P.getWebGL1Capabilities)();return{definitionExpression:this.layer.definitionExpression,availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:a,schema:l,supportsTextureFloat:o.supportsTextureFloat,maxTextureSize:o.maxTextureSize}}_hasRequiredSupport(e){var t;return!("renderer"in e&&"dot-density"===(null==(t=e.renderer)?void 0:t.type)&&!(0,P.getWebGL1Capabilities)().supportsTextureFloat&&(A.error(new(0,y.default)("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),1))}_onceTilesUpdated(){return this.requestUpdate(),(0,m.whenOnce)((()=>!this._pipelineIsUpdating))}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e="feature"===this.layer.type?this.layer.historicMoment:null,t="feature"===this.layer.type?this.layer.gdbVersion:null;return{renderer:"renderer"in this.layer&&this.layer.renderer,spatialReference:this.layer.spatialReference,timeExtent:this.layer.timeExtent,definitionExpression:this.layer.definitionExpression,featureReduction:this.layer.featureReduction,fields:this.layer.fields,geometryType:this.layer.geometryType,historicMoment:e,labelsVisible:"labelsVisible"in this.layer&&this.layer.labelsVisible,labelingInfo:"labelingInfo"in this.layer&&this.layer.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:t,pixelBuffer:0,orderBy:"orderBy"in this.layer&&this.layer.orderBy?this.layer.orderBy:null,customParameters:{..."customParameters"in this.layer?this.layer.customParameters:void 0,token:"apiKey"in this.layer?this.layer.apiKey:void 0}}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch((e=>{(0,_.isAbortError)(e)||A.error(e)}))}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight().catch((e=>{(0,_.isAbortError)(e)||A.error(e)}))}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createHittestResult(e){return this._setLayersForFeature(e),(0,g.isSome)(e.geometry)&&(e.geometry.spatialReference=this.view.spatialReference),e}constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new(0,O.default)({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=(0,_.debounce)((async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys())))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new(0,S.default),this._lastDefinitionExpression=null}};(0,o._)([(0,v.property)()],J.prototype,"_serviceOptions",void 0),(0,o._)([(0,v.property)()],J.prototype,"_proxy",void 0),(0,o._)([(0,v.property)()],J.prototype,"_pipelineIsUpdating",void 0),(0,o._)([(0,v.property)()],J.prototype,"_effectiveRenderer",void 0),(0,o._)([(0,v.property)()],J.prototype,"_aggregateValueRanges",void 0),(0,o._)([(0,v.property)()],J.prototype,"_commandsQueue",void 0),(0,o._)([(0,v.property)()],J.prototype,"featureEffectView",void 0),(0,o._)([(0,v.property)()],J.prototype,"labelsVisible",null),(0,o._)([(0,v.property)({readOnly:!0})],J.prototype,"queryMode",null),(0,o._)([(0,v.property)()],J.prototype,"renderingConfigHash",null),(0,o._)([(0,v.property)()],J.prototype,"tileRenderer",void 0),(0,o._)([(0,v.property)()],J.prototype,"updating",void 0),J=(0,o._)([(0,b.subclass)("esri.views.2d.layers.FeatureLayerView2D")],J);const Q=J}));
//# sourceMappingURL=OGCFeatureLayerView2D.c84d3d2c.js.map
