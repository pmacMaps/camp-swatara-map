function e(e,t,r,o){Object.defineProperty(e,t,{get:r,set:o,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("3Qtm3",(function(r,o){var n;n=r.exports,Object.defineProperty(n,"__esModule",{value:!0,configurable:!0}),e(r.exports,"default",(function(){return b})),t("ixrNB");var s=t("8Qqyu"),i=t("1wOrp"),a=t("gAtfu"),l=t("2wUG0"),u=t("lWZIb"),c=t("2WfpR"),f=t("e6UOF"),d=t("dqihR"),m=t("kNc4A"),p=t("es4Xy"),S=t("fDLIP"),y=t("2WnyR"),x=t("dZxPT");class b{convertVectorFieldData(e){const t=i.default.fromJSON(e.pixelBlock),r=(0,d.convertVectorFieldData)(t,e.type);return Promise.resolve(null!=r?r.toJSON():null)}computeStatisticsHistograms(e){const t=i.default.fromJSON(e.pixelBlock),r=(0,f.computeStatisticsHistograms)(t);return Promise.resolve(r)}async decode(e){const t=await(0,a.decode)(e.data,e.options);return t&&t.toJSON()}symbolize(e){e.pixelBlock=i.default.fromJSON(e.pixelBlock),e.extent=e.extent?y.default.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(e){this.symbolizer=p.default.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,u.create)(e.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:y.default.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?i.default.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?x.default.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=t?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(i.default.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(null!=t&&t.toJSON())}estimateStatisticsHistograms(e){const t=(0,f.estimateStatisticsHistograms)(i.default.fromJSON(e.srcPixelBlock));return Promise.resolve(t)}split(e){const t=(0,l.split)(i.default.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return t&&t.forEach(((e,r)=>{t.set(r,e?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map((e=>e?new(0,i.default)(e):null)),r=(0,l.mosaic)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let o,n=r;return e.coefs&&(n=(0,l.approximateTransform)(r,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(o=(0,l.getLocalArithmeticNorthRotations)(e.destDimension,e.gcsGrid),n=(0,d.convertToLocalDirections)(n,e.isUV?"vector-uv":"vector-magdir",o)),{pixelBlock:n?.toJSON(),localNorthDirections:o}}async createFlowMesh(e,t){const r={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:o,indexData:n}=await(0,S.createFlowMesh)(e.meshType,e.simulationSettings,r,t.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:n.buffer},transferList:[o.buffer,n.buffer]}}async getProjectionOffsetGrid(e){const t=y.default.fromJSON(e.projectedExtent),r=y.default.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new(0,s.default)({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,c.requirePE)(t.spatialReference,r.spatialReference,o))&&await(0,c.load)();const n=e.rasterTransform?(0,m.readTransform)(e.rasterTransform):null;return(0,c.getProjectionOffsetGrid)({...e,projectedExtent:t,srcBufferExtent:r,datumTransformation:o,rasterTransform:n})}}})),t.register("jNwbb",(function(t,r){function o(e,t){const{attributeTable:r,bandCount:o}=e;return!(null!=r||(n=e,!["u8","s8"].includes(n.pixelType)||null==n.statistics?.[0]?.min||null==n.statistics[0]?.max||1!==n.bandCount))||!(null==r||o>1)&&(!t||null!=r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())));var n}function n(e){const{bandCount:t,dataType:r,pixelType:o}=e;return"elevation"===r||"generic"===r&&1===t&&("s16"===o||"s32"===o||"f32"===o||"f64"===o)}function s(e,t=!1){const{bandCount:r,colormap:o,pixelType:n}=e;return 1===r&&(!!o?.length||!t&&"u8"===n)}function i(e,t=!1){const{attributeTable:r,bandCount:o}=e;return 1===o&&(!t||null!=r||null!=e.histograms)}function a(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}function l(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}e(t.exports,"isUVRendererSupported",(function(){return o})),e(t.exports,"isShadedReliefRendererSupported",(function(){return n})),e(t.exports,"isColormapRendererSupported",(function(){return s})),e(t.exports,"isClassBreaksSupported",(function(){return i})),e(t.exports,"isVectorFieldRendererSupported",(function(){return a})),e(t.exports,"isFlowRendererSupported",(function(){return l}))}));
//# sourceMappingURL=RasterWorker.ab39b27c.js.map
