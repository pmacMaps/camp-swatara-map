function e(e,t,r,o){Object.defineProperty(e,t,{get:r,set:o,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("crn3X",(function(r,o){var i;i=r.exports,Object.defineProperty(i,"__esModule",{value:!0,configurable:!0}),e(r.exports,"default",(function(){return b}));var s=t("j6uz9");t("ixrNB");var n=t("bPmsI"),a=t("lHg4e"),u=t("7dRCe"),l=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var p=t("bzBbJ"),c=t("qA6zg"),d=t("iaM5n"),y=t("j3i19"),h=t("7hPz0"),f=t("gC5jC"),g=t("hej7M"),m=t("jaaCV");function v(e,t){throw new(0,n.default)(t,`CSVLayer (title: ${e.title}, id: ${e.id}) cannot be saved to a portal item`)}let S=class extends d.default{normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null,r=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},e).catch(a.throwIfAbortError).then((async()=>this.initLayerProperties(await this.createGraphicsSource(t))));return this.addResolvingPromise(r),Promise.resolve(this)}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)}set url(e){if(!e)return void this._set("url",e);const t=(0,u.urlToObject)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async createGraphicsSource(e){const t=new(0,y.CSVSource)({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.delimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(f.default.from(e)||this.createQuery()))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(f.default.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(f.default.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(f.default.from(e)||this.createQuery())))}read(e,t){super.read(e,t),t&&"service"===t.origin&&this.revert(["latitudeField","longitudeField"],"service")}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}clone(){throw new(0,n.default)("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(e){return v(this,"csv-layer:save")}async saveAs(e,t){return v(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}constructor(...e){super(...e),this.geometryType="point",this.capabilities=(0,h.createCapabilities)(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=m.default.WGS84,this.source=null,this.type="csv"}};(0,s._)([(0,l.property)({readOnly:!0,json:{read:!1,write:!1}})],S.prototype,"capabilities",void 0),(0,s._)([(0,l.property)({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],S.prototype,"delimiter",void 0),(0,s._)([(0,l.property)({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],S.prototype,"editingEnabled",void 0),(0,s._)([(0,l.property)({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],S.prototype,"fields",void 0),(0,s._)([(0,l.property)({type:Boolean,readOnly:!0})],S.prototype,"isTable",null),(0,s._)([(0,p.reader)("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],S.prototype,"readWebMapLabelsVisible",null),(0,s._)([(0,l.property)({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],S.prototype,"latitudeField",void 0),(0,s._)([(0,l.property)({type:["show","hide"]})],S.prototype,"listMode",void 0),(0,s._)([(0,l.property)({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],S.prototype,"locationType",void 0),(0,s._)([(0,l.property)({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],S.prototype,"longitudeField",void 0),(0,s._)([(0,l.property)({type:["CSV"]})],S.prototype,"operationalLayerType",void 0),(0,s._)([(0,l.property)()],S.prototype,"outFields",void 0),(0,s._)([(0,l.property)({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],S.prototype,"path",void 0),(0,s._)([(0,l.property)({json:{read:!1},cast:null,type:y.CSVSource,readOnly:!0})],S.prototype,"source",void 0),(0,s._)([(0,l.property)({json:{read:!1},value:"csv",readOnly:!0})],S.prototype,"type",void 0),(0,s._)([(0,l.property)({json:{read:g.r,write:{isRequired:!0,ignoreOrigin:!0,writer:g.w}}})],S.prototype,"url",null),S=(0,s._)([(0,c.subclass)("esri.layers.CSVLayer")],S);const b=S})),t.register("j3i19",(function(r,o){e(r.exports,"CSVSource",(function(){return y}));var i=t("j6uz9");t("ixrNB");var s=t("5HTPH"),n=t("lEAUW"),a=t("lHg4e"),u=t("lHDjA"),l=t("hTI69");t("gHCNy"),t("aX9sh");var p=t("qA6zg"),c=t("gEU1A"),d=t("2WnyR");let y=class extends n.default{load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return c.default.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:d.default.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _startWorker(e){this._connection=await(0,u.open)("CSVSourceWorker",{strategy:(0,s.default)("feature-layers-workers")?"dedicated":"local",signal:e});const{url:t,delimiter:r,fields:o,latitudeField:i,longitudeField:n,spatialReference:a,timeInfo:l}=this.loadOptions,p=await this._connection.invoke("load",{url:t,customParameters:this.customParameters,parsingOptions:{delimiter:r,fields:o?.map((e=>e.toJSON())),latitudeField:i,longitudeField:n,spatialReference:a?.toJSON(),timeInfo:l?.toJSON()}},{signal:e});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}constructor(e){super(e),this.type="csv",this.refresh=(0,a.debounce)((async e=>{await this.load();const{extent:t,timeExtent:r}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}};(0,i._)([(0,l.property)()],y.prototype,"type",void 0),(0,i._)([(0,l.property)()],y.prototype,"loadOptions",void 0),(0,i._)([(0,l.property)()],y.prototype,"customParameters",void 0),(0,i._)([(0,l.property)()],y.prototype,"locationInfo",void 0),(0,i._)([(0,l.property)()],y.prototype,"sourceJSON",void 0),(0,i._)([(0,l.property)()],y.prototype,"delimiter",void 0),y=(0,i._)([(0,p.subclass)("esri.layers.graphics.sources.CSVSource")],y)})),t.register("7hPz0",(function(r,o){e(r.exports,"createDrawingInfo",(function(){return u})),e(r.exports,"createDefaultAttributesFunction",(function(){return c})),e(r.exports,"createDefaultTemplate",(function(){return d})),e(r.exports,"createCapabilities",(function(){return y}));var i=t("5HTPH"),s=t("itGIg"),n=t("11H8e"),a=t("hb76Y");function u(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?a.defaultPointSymbolJSON:"esriGeometryPolyline"===e?a.defaultPolylineSymbolJSON:a.defaultPolygonSymbolJSON}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let p=1;function c(e,t){if((0,i.default)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let r=`this.${t} = null;`;for(const t in e)r+=`this${l.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const o=new Function(`\n      return class AttributesClass$${p++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new o}catch(r){return()=>({[t]:null,...e})}}function d(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,s.clone)(e)}}]}function y(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:n.queryCapabilities,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}})),t.register("11H8e",(function(t,r){e(t.exports,"queryCapabilities",(function(){return o}));const o={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}));
//# sourceMappingURL=CSVLayer.def5a660.js.map
