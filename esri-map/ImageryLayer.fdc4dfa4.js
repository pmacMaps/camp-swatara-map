function e(e,t,r,i){Object.defineProperty(e,t,{get:r,set:i,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("fgnlN",(function(r,i){var n;n=r.exports,Object.defineProperty(n,"__esModule",{value:!0,configurable:!0}),e(r.exports,"default",(function(){return F}));var a=t("j6uz9"),s=t("5kFOn"),o=t("2IJVS"),l=t("lHg4e"),u=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var p=t("qA6zg"),c=t("g9601"),m=t("iGP99"),d=t("gNK5X"),y=t("lPKJW"),f=t("90xN9"),h=t("8u5kg"),g=t("ctxhN"),b=t("54ioU"),v=t("eOpMC"),R=t("5lb2Y"),w=t("6rQbA"),S=t("lixLM"),x=t("5UwzK"),_=t("gKyS5");let I=class extends((0,f.BlendLayer)((0,w.TemporalLayer)((0,R.ScaleRangeLayer)((0,g.OperationalLayer)((0,b.PortalLayer)((0,d.ArcGISImageService)((0,v.RefreshableLayer)((0,h.CustomParametersMixin)((0,y.ArcGISService)((0,o.MultiOriginJSONMixin)(m.default))))))))))){normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.throwIfAbortError).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){const i="vector-field"===this.renderer?.type;t[r]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let n=!1,a=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const s=new Set;n&&s.add("raster.itempixelvalue");for(const e of t){const t=e.name.toLowerCase();s.has(t)||t.includes("raster.servicepixelvalue.")||i.add(e.name)}return a&&i.add("raster.magnitude").add("raster.direction"),(0,_.createPopupTemplate)({fields:t,title:r},{...e,visibleFieldNames:i})}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return(0,x.serviceSupportsSpatialReference)(this,e)}constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}};(0,a._)([(0,u.property)(S.legendEnabled)],I.prototype,"legendEnabled",void 0),(0,a._)([(0,u.property)({type:["show","hide"]})],I.prototype,"listMode",void 0),(0,a._)([(0,u.property)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],I.prototype,"isReference",void 0),(0,a._)([(0,u.property)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],I.prototype,"operationalLayerType",void 0),(0,a._)([(0,c.writer)("web-map","operationalLayerType")],I.prototype,"writeOperationalLayerType",null),(0,a._)([(0,u.property)(S.popupEnabled)],I.prototype,"popupEnabled",void 0),(0,a._)([(0,u.property)({type:s.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],I.prototype,"popupTemplate",void 0),(0,a._)([(0,u.property)({readOnly:!0})],I.prototype,"defaultPopupTemplate",null),(0,a._)([(0,u.property)({readOnly:!0,json:{read:!1}})],I.prototype,"type",void 0),I=(0,a._)([(0,p.subclass)("esri.layers.ImageryLayer")],I);const F=I})),t.register("gNK5X",(function(r,i){e(r.exports,"ArcGISImageService",(function(){return oe}));var n=t("j6uz9");t("ixrNB");var a=t("EvxpF"),s=t("CQPvH"),o=t("bYA0c"),l=t("ks23W"),u=t("bPmsI"),p=t("itGIg"),c=t("6TszD"),m=t("cc23H"),d=t("7dRCe"),y=t("hTI69"),f=t("gHCNy"),h=t("bzBbJ"),g=t("qA6zg"),b=t("g9601"),v=t("lixLM"),R=t("1eHoq"),w=t("a2vOX"),S=t("4VorL"),x=t("38xmB"),_=t("jisPC"),I=t("9EfCG"),F=t("4wMGQ"),T=t("h1Qd4"),N=t("1wOrp"),D=t("8hgwR"),O=t("043dQ"),C=t("cBr0g"),P=t("bVXVO"),M=t("lEHJu"),V=t("gAtfu"),A=t("dqihR"),j=t("j07pE"),J=t("es4Xy"),z=t("j1HM6");t("5HTPH"),t("bGOam");var E=t("gUA0G");t("9XPDd"),t("1mmm2"),t("zPXCh"),t("fau59"),t("8RZNq");var H=t("2WnyR");t("eqMhf"),t("5vMQI"),t("dZxPT");var q=t("etknW");t("7blCc"),t("hq5aB"),t("4hv5F");var U=t("gEU1A"),G=t("gC5jC");t("81dmF"),t("1JFSz");var L=t("f2o0Y"),B=t("gX72D");t("ec36V"),t("gqX03");var k=t("ctHSu"),Q=t("2lzbK"),X=t("4Ibru"),W=t("lf2bI"),K=t("77oqn"),Z=t("hgSkY"),Y=t("9abHb"),$=t("6ZLA3"),ee=t("3GZv2"),te=t("iGc0i"),re=t("a8bQi"),ie=t("fDLIP"),ne=t("jaaCV");const ae=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),se=(0,y.ensureRange)(f.ensureNumber,{min:0,max:255});const oe=e=>{let t=class extends e{initialize(){this._set("exportImageServiceParameters",new(0,w.ExportImageServiceParameters)({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?F.default.fromJSON(t):null}get fieldsIndex(){return this.fields?new(0,x.default)(this.fields):null}set format(e){e&&ae.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=F.default.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?F.default.fromJSON(r):this._isMosaicRuleSupported(t)?F.default.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new(0,F.default)({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=se(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return(0,d.urlToObject)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer,n=(0,s.read)(i,r);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!i.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),(0,I.isSupportedRendererType)(n)||c.default.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new(0,S.default)({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new(0,S.default)({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new(0,S.default)({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,p.clone)(this.fields):[];n.push(r),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new(0,S.default)({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(n.push(new(0,S.default)({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new(0,S.default)({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:a}=this.rasterInfo??{};if(null!=a){const t=a.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=(0,p.clone)(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}get renderingRule(){return(0,l.deprecatedProperty)(c.default.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){(0,l.deprecatedProperty)(c.default.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t&&t.rasterFunction&&(t=O.default.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?O.default.fromJSON({rasterFunctionDefinition:t.renderingRule}):O.default.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?ne.default.fromJSON(r):null}readPixelType(e){return D.pixelTypeKebabDict.fromJSON(e)||e}writePixelType(e,t,r){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[r]=D.pixelTypeKebabDict.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;const{renderer:i,symbolizer:n,pixelFilter:a,bandIds:s}=this;if(!this._isPicture()&&i&&n&&!a){const a=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(i.toJSON()),o=this._rasterJobHandler.instance;if(o){a&&(n.bind(),await o.updateSymbolizer(n,t),this._cachedRendererJson=i.toJSON());const l=await o.symbolize({bandIds:s,...e},t);r={extent:e.extent,pixelBlock:l}}else r={extent:e.extent,pixelBlock:n.symbolize({bandIds:s,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new(0,u.default)("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,f.ensureClass)(X.default,e).clone(),(0,z.computeAngles)(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new(0,u.default)("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,f.ensureClass)(ee.default,e).clone(),(0,z.computePixelSpaceLocations)(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new(0,u.default)("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,f.ensureClass)(Y.default,e).clone(),this._applyMosaicAndRenderingRules(e),(0,z.computeHistograms)(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new(0,u.default)("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,f.ensureClass)(Y.default,e).clone(),this._applyMosaicAndRenderingRules(e),(0,z.computeStatisticsHistograms)(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const r=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?r.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?r.mensuration.supportsHeightFromBaseAndTopShadow:r.mensuration.supportsHeightFromTopAndTopShadow))throw new(0,u.default)("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,f.ensureClass)(Z.default,e).clone(),this._applyMosaicAndRenderingRules(e),(0,z.measureHeight)(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsAreaAndPerimeter||e.is3D&&!r.mensuration.supports3D)throw new(0,u.default)("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,f.ensureClass)(W.default,e).clone(),this._applyMosaicAndRenderingRules(e),(0,z.measureAreaAndPerimeter)(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsDistanceAndAngle||e.is3D&&!r.mensuration.supports3D)throw new(0,u.default)("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,f.ensureClass)(K.default,e).clone(),this._applyMosaicAndRenderingRules(e),(0,z.measureDistanceAndAngle)(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsPointOrCentroid||e.is3D&&!r.mensuration.supports3D)throw new(0,u.default)("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,f.ensureClass)(te.default,e).clone(),this._applyMosaicAndRenderingRules(e),(0,z.measurePointOrCentroid)(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}async fetchImage(e,t,i,n={}){if(null==e||null==t||null==i)throw new(0,u.default)("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:n.signal});e&&(this.rasterInfo=e)}const a=this.getExportImageServiceParameters(e,t,i,n.timeExtent);if(null==a){if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=i,n.returnImageBitmap?{imageBitmap:await(0,_.createBitmap)(e,`${r(this.parsedUrl)}/exportImage`,n.signal)}:{imageOrCanvasElement:e}}const{bandIds:a,rasterInfo:s}=this,o=(a?.length||s.bandCount)??0,l=t*i,u=s.pixelType,p=[];for(let e=0;e<o;e++)p.push(N.default.createEmptyBand(u,l));return{pixelData:{pixelBlock:new(0,N.default)({width:t,height:i,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const s=!!n.requestAsImageElement&&!this.pixelFilter,o=s&&!!n.returnImageBitmap,l={imageServiceParameters:a,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:s,returnImageBitmap:o,signal:n.signal};return this._requestArrayBuffer(l)}fetchKeyProperties(e){return(0,o.default)(r(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new(0,u.default)("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,o.default)(r(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>U.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return(0,Q.getCatalogItemRasterInfo)(r(this.parsedUrl),e,i)}async getCatalogItemICSInfo(e,t){const{data:i}=await(0,o.default)(r(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),n=i&&i.ics;if(!n)return;let a=null;try{a=(await(0,o.default)(r(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:n,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?(0,o.default)(r(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},l=a.spatialReference,u={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:l.wkid||JSON.stringify(l),outSR:"0:"+e},p=(0,o.default)(r(this.parsedUrl)+"/project",{query:this._getQueryParams(u),...t}).then((e=>e.data)).catch((()=>({}))),c=(a.xmin+a.xmax)/2,m=(a.ymax-a.ymin)/6,d=a.ymin+m,y=[];for(let e=0;e<5;e++)y.push({x:c,y:d+m*e});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:y}),inSR:l.wkid||JSON.stringify(l),outSR:"0:"+e},h=(0,o.default)(r(this.parsedUrl)+"/project",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([s,p,h]);let b=g[0].ipxf;if(null==b){const e=n.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=H.default.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);v&&(v.spatialReference=new(0,ne.default)({wkid:0,imageCoordinateSystem:n}));const R=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],w=R.length;if(w<3)return{ics:n,icsToPixelTransform:b,icsExtent:v,northDirection:null};let S=0,x=0,_=0,I=0;for(let e=0;e<w;e++)S+=R[e].x,x+=R[e].y,_+=R[e].x*R[e].x,I+=R[e].x*R[e].y;const F=(w*I-S*x)/(w*_-S*S);let T=0;const N=R[4].x>R[0].x,D=R[4].y>R[0].y;return F===1/0?T=D?90:270:0===F?T=N?0:180:F>0?T=N?180*Math.atan(F)/Math.PI:180*Math.atan(F)/Math.PI+180:F<0&&(T=D?180+180*Math.atan(F)/Math.PI:360+180*Math.atan(F)/Math.PI),{ics:n,icsToPixelTransform:b,icsExtent:v,northDirection:T}}async generateRasterInfo(e,t){if(e=(0,f.ensureClass)(O.default,e),this.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const i=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi)?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return t?t.join("/"):null}(e);if(!i)throw new(0,u.default)("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const n={...t,query:this._getQueryParams()},a=(0,k.generateRasterInfo)(r(this.parsedUrl),e,n);this._functionRasterInfos[i]=a;try{return await a}catch(e){throw this._functionRasterInfos[i]=null,e}}getExportImageServiceParameters(e,t,i,n){e=e.clone().shiftCentralMeridian();const a=(0,z.getImageSpatialReferenceQueryParameter)(e.spatialReference,r(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const s=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=s;let{renderingRule:u}=s;const p=this.rasterFunction?.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if(o?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;s.bandIds=void 0}else s.bandIds=o?.join(",");l instanceof Array&&l.length>0&&(s.noData=l.join(","));const m=this._processMultidimensionalIntersection(null,n,this.exportImageServiceParameters.mosaicRule);if(m.isOutSide)return null;s.mosaicRule=null!=m.mosaicRule?JSON.stringify(m.mosaicRule):null,n=m.timeExtent,s.renderingRule=this._getRenderingRuleString(O.default.fromJSON(u));const d={};if(null!=n){const{start:e,end:t}=n.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+i,...s,...d}}async getSamples(e,t){if(!(await this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new(0,u.default)("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,f.ensureClass)(re.default,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),(0,z.getSamples)(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new(0,u.default)("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,f.ensureClass)($.default,e).clone();const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new(0,u.default)("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:i,rasterFunction:n}=this;return n&&null==e.rasterFunction&&(e.rasterFunction=n),i&&null==e.raster&&(e.raster=i),(0,z.identify)(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new(0,G.default);return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,E.executeQueryJSON)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,B.executeForIds)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,L.executeForCount)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new(0,u.default)("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let s=!1,o=null,l=null;const p="raster.servicepixelvalue",c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(s=e.outFields.some((e=>!e.toLowerCase().includes(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(p)&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));o=t.map((e=>new(0,O.default)({functionName:e[0]}))),l=t.map((e=>e[1]));const{rasterFunction:r}=this;0===o.length?r?.functionName?(o.push(r),l.push(r.functionName)):o=null:r?.functionName&&!o.some((e=>e.functionName===r.functionName))&&(o.push(r),l.push(r.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let y=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:r}=(0,M.intersectMultimensionalSubset)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new(0,u.default)("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");r&&null!=r.timeExtent&&(y=r.timeExtent)}const f=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y),h=this._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:f,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:o,pixelSize:r,returnCatalogItems:s,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete h.f;const g=new(0,$.default)(h);try{await this._generateRasterInfo(this.rasterFunction);const r=await(0,z.identify)(this.url,g,{signal:t?.signal,query:{...this.customParameters}}),n=e.outFields,o=null!=r.value&&r.value.toLowerCase().includes("nodata");if(!s||m||!r?.catalogItems?.features.length||!a&&o)return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:l,showNoDataRecords:a,templateFields:n});const u=this.objectIdField||"ObjectId",p=r.catalogItems?.features??[],c=p.map((e=>e.attributes?.[u])),d=new(0,G.default)({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[u]}),y=await this.queryRasters(d);return y?.features?.length&&y.features.forEach((t=>{p.forEach((r=>{r.attributes[u]===t.attributes[u]&&(r.geometry=new(0,q.default)(t.geometry),null!=e.outSpatialReference&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:l,showNoDataRecords:a,templateFields:n})}catch{throw new(0,u.default)("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const i=(0,o.default)(r(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),n=(0,o.default)(r(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),a=await Promise.all([i,n]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):(0,ie.createFlowMesh)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,M.getSubsetVariablesFromMdInfo)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,i=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,k.fetchServiceRasterInfo)(r(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),e))),n=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,a=this._getRasterFunctionInfos();return Promise.all([i,n,a]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),c.default.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([(0,m.watch)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo,{multidimensionalInfo:i}=this.serviceRasterInfo;if(null==e||null==i||null==t||null==r?.startField)return e;const{startField:n}=r,a=i.variables.some((e=>e.dimensions.some((e=>e.name===n))))?n:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==a)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const s=e.multidimensionalDefinition.filter((e=>e.dimensionName===a)),o=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==o||null==l||o===l,p=u?[o||l]:[[o,l]],c=this.version>=10.8;if(s.length)s.forEach((e=>{e.dimensionName===a&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=a,e.isSlice=u,e.values=p})):e.multidimensionalDefinition.push(new(0,R.default)({variableName:"",dimensionName:a,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new(0,u.default)("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,f.ensureClass)(G.default,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new(0,P.default);this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:r}=this;return"unique-value"===e.type&&this._hasRasterFunction(r)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,j.getSupportedRendererTypes)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:i,ssl:n}=await(0,o.default)(r(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=i,this.sourceJSON=t,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new(0,u.default)("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),n=r?.ResampleType||r?.resampleType;return i&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:r}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&r.bandCount>=3){const e=(0,j.getDefaultBandCombination)(r);!e||3===r.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,j.createDefaultRenderer)(r,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,j.normalizeRendererJSON)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=r):this.symbolizer=new(0,J.default)({rendererJSON:t,rasterInfo:r}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){e&&null!=e.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,V.decode)(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return(await(0,o.default)(r(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:i,returnImageBitmap:n,signal:a}=e;if(i&&this._canRequestImageElement(t.format)){const i=`${r(this.parsedUrl)}/exportImage`,{data:s}=await(0,o.default)(i,{responseType:n?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:a});return s instanceof Blob?{imageBitmap:await(0,_.createBitmap)(s,i,a),params:t}:{imageOrCanvasElement:s,params:t}}const s=this._initJobHandler(),l=(0,o.default)(r(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:a}),p=(await Promise.all([l,s]))[0].data,c=t.format||"jpgpng";let m=c;if("bsq"!==m&&"bip"!==m&&(m=(0,V.getFormat)(p)),!m)throw new(0,u.default)("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));const d={signal:a},y="gif"===c||"bmp"===c||c.includes("png")&&("png"===m||"jpg"===m)?(0,V.decode)(p,{useCanvas:!0,...t},d):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},d);return{pixelData:{pixelBlock:await y,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,M.getDefaultMultidimensionalDefinition)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new(0,F.default);const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),t=t.filter((({variableName:e,dimensionName:t})=>e&&"*"!==e||t)),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replaceAll(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",m="string"==typeof r&&r.toLowerCase().includes("nodata"),d=[];if(r&&!u&&!m){const e={};e[c]=0,p=[r],u=[new(0,a.default)(this.fullExtent,null,e)]}if(!u)return[];let y,f,h;this._updateResponseFieldNames(u,o),m&&!n&&(u=[]);for(let e=0;e<u.length;e++){if(y=u[e],null!=r){if(f=p[e],h=this.rasterFunction&&l&&l.length>0&&i&&i.length>0&&i.includes(this.rasterFunction.functionName)?l[i.indexOf(this.rasterFunction.functionName)]:r,"nodata"===f.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",a="Raster.ServicePixelValue";y.attributes[t]=f,y.attributes[a]=h,this._updateFeatureWithMagDirValues(y,f);const s=this.fields&&this.fields.length>0;let o=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?s?f:r:h;this.rasterFunction||(o=s?f:r),this._updateFeatureWithRasterAttributeTableValues(y,o)}if(y.sourceLayer=y.layer=this,s&&this._updateFeatureWithDomainValues(y),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];y.attributes[t]=l[e]}d.push(u[e])}return d}_processMultidimensionalIntersection(e,t,r){const{multidimensionalSubset:i}=this;if(!i)return{isOutSide:!1,timeExtent:t,mosaicRule:r=this._combineMosaicRuleWithTimeExtent(r,t)};if(i){const{isOutside:r,intersection:n}=(0,M.intersectMultimensionalSubset)(i,{geometry:e,timeExtent:t});if(r)return{isOutSide:!0,timeExtent:null,mosaicRule:null};n&&null!=n.timeExtent&&(t=n.timeExtent)}if(null!=(r=this._combineMosaicRuleWithTimeExtent(r,t))&&r.multidimensionalDefinition){const{isOutside:e}=(0,M.intersectMultimensionalSubset)(i,{multidimensionalDefinition:r.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:r}}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==r)return;const{features:i,fields:n}=r,a=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),s=a&&a[0];if(!s)return;const o=i.filter((e=>e.attributes[s]===(null!=t?parseInt(t,10):null)));o&&o[0]&&n.forEach((t=>{const r=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=o[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),a=new(0,N.default)({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new(0,H.default)(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:(0,A.uvComponentToVector)([a.pixels[0][0],a.pixels[1][0]]);e.attributes["Raster.Magnitude"]=s[0],e.attributes["Raster.Direction"]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;null!=r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t){const t=r.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e&&null!=e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:r,rasterFunction:i}=this;i&&e instanceof Y.default&&null==e.rasterFunction&&(e.rasterFunction=i),r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,a=t.includes("image"),s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&o,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),c=u&&p.includes("basic");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:a,supportsExportImage:a,supportsIdentify:a,supportsMeasure:u,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&a,supportsProject:r>=10.3&&a,supportsComputeStatisticsHistograms:r>=10.4&&a,supportsQueryBoundary:r>=10.6&&a,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!!i?.supportsStatistics,supportsOrderBy:!!i?.supportsOrderBy,supportsDistinct:!!i?.supportsDistinct,supportsPagination:!!i?.supportsPagination,supportsStandardizedQueriesOnly:!!i?.useStandardizedQueries,supportsPercentileStatistics:!!i?.supportsPercentileStatistics,supportsCentroid:!!i?.supportsReturningGeometryCentroid,supportsDistance:!!i?.supportsQueryWithDistance,supportsExtent:!!i?.supportsReturningQueryExtent,supportsGeometryProperties:!!i?.supportsReturningGeometryProperties,supportsHavingClause:!!i?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!i?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:c,supportsAreaAndPerimeter:c,supportsPointOrCentroid:c,supportsHeightFromBaseAndTop:u&&p.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&p.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&p.includes("top-top shadow height"),supports3D:u&&p.includes("3d")}}}constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}};function r(e){return e?.path??""}return(0,n._)([(0,y.property)()],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,y.property)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,y.property)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,n._)([(0,h.reader)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,n._)([(0,y.property)()],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,n._)([(0,y.property)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,y.property)({type:[f.Integer],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,h.reader)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,y.property)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,h.reader)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,y.property)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,b.writer)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,y.property)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,b.writer)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,y.property)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,y.property)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,n._)([(0,h.reader)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,n._)([(0,y.property)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,y.property)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,y.property)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,y.property)({readOnly:!0,type:[S.default]})],t.prototype,"fields",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n._)([(0,y.property)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,h.reader)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,y.property)({type:H.default})],t.prototype,"fullExtent",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,y.property)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,y.property)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,y.property)({type:String,json:{type:D.interpolationKebab.jsonValues,read:D.interpolationKebab.read,write:D.interpolationKebab.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,y.property)()],t.prototype,"minScale",void 0),(0,n._)([(0,h.reader)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,y.property)()],t.prototype,"maxScale",void 0),(0,n._)([(0,h.reader)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,y.property)({type:F.default})],t.prototype,"mosaicRule",null),(0,n._)([(0,h.reader)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,b.writer)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,y.property)()],t.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,y.property)({type:T.default,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,n._)([(0,y.property)({json:{type:f.Integer}})],t.prototype,"noData",void 0),(0,n._)([(0,b.writer)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,y.property)({type:String,json:{type:D.noDataInterpretationKebab.jsonValues,read:D.noDataInterpretationKebab.read,write:D.noDataInterpretationKebab.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,y.property)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,h.reader)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,y.property)({})],t.prototype,"geometryType",void 0),(0,n._)([(0,y.property)({})],t.prototype,"typeIdField",void 0),(0,n._)([(0,y.property)({})],t.prototype,"types",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n._)([(0,y.property)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,y.property)()],t.prototype,"raster",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,n._)([(0,h.reader)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,n._)([(0,y.property)()],t.prototype,"viewId",void 0),(0,n._)([(0,y.property)({types:s.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:s.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,n._)([(0,h.reader)("renderer")],t.prototype,"readRenderer",null),(0,n._)([(0,b.writer)("renderer")],t.prototype,"writeRenderer",null),(0,n._)([(0,y.property)()],t.prototype,"symbolizer",void 0),(0,n._)([(0,y.property)(v.opacity)],t.prototype,"opacity",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n._)([(0,y.property)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,y.property)({type:O.default})],t.prototype,"renderingRule",null),(0,n._)([(0,y.property)({type:O.default,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,n._)([(0,h.reader)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,n._)([(0,y.property)()],t.prototype,"serviceDataType",void 0),(0,n._)([(0,y.property)({readOnly:!0,type:ne.default})],t.prototype,"spatialReference",void 0),(0,n._)([(0,h.reader)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,y.property)({json:{type:D.pixelTypeKebabDict.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,h.reader)("pixelType")],t.prototype,"readPixelType",null),(0,n._)([(0,b.writer)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,y.property)({constructOnly:!0,type:C.default})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,y.property)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,y.property)(v.url)],t.prototype,"url",void 0),(0,n._)([(0,y.property)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,h.reader)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,g.subclass)("esri.layers.mixins.ArcGISImageService")],t),t}})),t.register("1eHoq",(function(r,i){e(r.exports,"default",(function(){return m}));var n,a=t("j6uz9"),s=t("hO0an"),o=t("itGIg"),l=t("hTI69"),u=t("gHCNy"),p=t("qA6zg");let c=n=class extends s.JSONSupport{clone(){return new n({variableName:this.variableName,dimensionName:this.dimensionName,values:(0,o.clone)(this.values),isSlice:this.isSlice})}constructor(e){super(e),this.variableName=null,this.dimensionName=null,this.values=[],this.isSlice=!1}};(0,a._)([(0,l.property)({type:String,json:{write:!0}})],c.prototype,"variableName",void 0),(0,a._)([(0,l.property)({type:String,json:{write:!0}})],c.prototype,"dimensionName",void 0),(0,a._)([(0,l.property)({type:u.types.array(u.types.oneOf([u.types.native(Number),u.types.array(u.types.native(Number))])),json:{write:!0}})],c.prototype,"values",void 0),(0,a._)([(0,l.property)({type:Boolean,json:{write:!0}})],c.prototype,"isSlice",void 0),c=n=(0,a._)([(0,p.subclass)("esri.layers.support.DimensionalDefinition")],c);const m=c})),t.register("a2vOX",(function(r,i){e(r.exports,"ExportImageServiceParameters",(function(){return d}));var n=t("j6uz9"),a=t("hO0an"),s=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("g9601"),u=t("9EfCG"),p=t("4wMGQ"),c=t("8hgwR"),m=t("043dQ");let d=class extends a.JSONSupport{get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new(0,p.default)({where:r})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const r=e.pixelFilter,i=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const n=e.multidimensionalSubset?.areaOfInterest;return n&&(t=this._addClipFunction(t,n)),i&&!r&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:r,renderer:i}=t;return e=e||t.rasterFunction,i&&(0,u.isSupportedRendererType)(i)?(0,u.combineRenderingRules)((0,u.convertRendererToRenderingRule)(i,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map((({name:e})=>e)),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let i=new(0,m.default)({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:r}});return i=e?.rasterFunctionDefinition?new(0,m.default)({rasterFunctionDefinition:(0,u.convertRenderingRuleToRFT)(i)}):i,(0,u.combineRenderingRules)(i,e)}_addClipFunction(e,t){const r=new(0,m.default)({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return(0,u.combineRenderingRules)(r,e)}constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}};(0,n._)([(0,s.property)()],d.prototype,"layer",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"adjustAspectRatio",null),(0,n._)([(0,l.writer)("adjustAspectRatio")],d.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"bandIds",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"compression",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"compressionQuality",null),(0,n._)([(0,l.writer)("compressionQuality")],d.prototype,"writeCompressionQuality",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"compressionTolerance",null),(0,n._)([(0,l.writer)("compressionTolerance")],d.prototype,"writeCompressionTolerance",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"format",null),(0,n._)([(0,s.property)({type:String,json:{read:{reader:c.interpolationKebab.read},write:{writer:c.interpolationKebab.write}}})],d.prototype,"interpolation",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"noData",null),(0,n._)([(0,s.property)({type:String,json:{read:{reader:c.noDataInterpretationKebab.read},write:{writer:c.noDataInterpretationKebab.write}}})],d.prototype,"noDataInterpretation",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"pixelType",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"lercVersion",void 0),(0,n._)([(0,l.writer)("lercVersion")],d.prototype,"writeLercVersion",null),(0,n._)([(0,s.property)({type:Number})],d.prototype,"version",null),(0,n._)([(0,s.property)({json:{write:!0}})],d.prototype,"mosaicRule",null),(0,n._)([(0,s.property)({json:{write:!0,name:"renderingRule"}})],d.prototype,"rasterFunction",null),d=(0,n._)([(0,o.subclass)("esri.layers.mixins.ExportImageServiceParameters")],d)})),t.register("9EfCG",(function(r,i){e(r.exports,"isSupportedRendererType",(function(){return y})),e(r.exports,"combineRenderingRules",(function(){return f})),e(r.exports,"convertRenderingRuleToRFT",(function(){return g})),e(r.exports,"convertRendererToRenderingRule",(function(){return b}));var n=t("itGIg"),a=t("043dQ"),s=t("1mscU"),o=t("8Orx1"),l=t("4Yphv"),u=t("j2q5y"),p=t("3WHFV");const c=new Set(["u1","u2","u4","u8","s8","u16","s16"]),m={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},d=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function y(e){return d.has(e.type)}function f(e,t){if(!e||!t)return(0,n.clone)(e||t);const r=(0,n.clone)(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),h(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(v(r.functionArguments).Raster=t);return r}function h(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&h(e[r].arguments,t))}function g(e){const t=(0,n.clone)(s.schema[e.functionName+"Function"]),r=e.functionArguments;for(const e in r)"raster"===e.toLowerCase()?(t.arguments[e]=g(r[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=_(r[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=r[e];return t}function b(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=t.convertToRFT,i=new(0,a.default);i.functionName="Stretch";const n=R[u.stretchTypeJSONDict.toJSON(e.stretchType)],s="u8",o={StretchType:n,Statistics:x(e.statistics??[]),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(o.Min=e.outputMin),null!=e.outputMax&&(o.Max=e.outputMax),n===R.standardDeviation?(o.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=s):n===R.percentClip?(o.MinPercent=e.minPercent,o.MaxPercent=e.maxPercent,i.outputPixelType=s):n===R.minMax?i.outputPixelType=s:n===R.sigmoid&&(o.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=o,i.variableName="Raster",e.colorRamp){const n=e.colorRamp,s=new(0,a.default);if(r)s.functionArguments={ColorRamp:(0,l.getRFxArgColorRampValue)(n)};else{const r=(0,l.getColorRampName)(n,!0);if(r)s.functionArguments={colorRamp:r};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,l.convertColorRampToColormap)(n)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=i,r?new(0,a.default)({rasterFunctionDefinition:g(s)}):s}return r?new(0,a.default)({rasterFunctionDefinition:g(i)}):i}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],s=[],o=1e-6,{pixelType:l,rasterAttributeTable:u}=t,p=null==u?null:u.features,c=S(u);if(c&&p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol?.color;let n;i?.a&&null!=t.minValue&&null!=t.maxValue&&p.forEach((a=>{null!=t.minValue&&null!=t.maxValue&&(n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([a.attributes[c],i.r,i.g,i.b]))}))}));const r=l?w(s,l):s,i=new(0,a.default);return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=r,i.variableName="Raster",t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:g(i)}):i}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;a?.a?(0===t?r.push(e.minValue,e.maxValue+o):r.push(e.minValue+o,e.maxValue+o),i.push(t),s.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)}));const m=l?w(s,l):s,d=new(0,a.default);d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},d.variableName="Raster";const y=new(0,a.default);return y.functionName="Colormap",y.functionArguments={Colormap:m,Raster:d},t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:g(y)}):y}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:n}=t,s=null==n?null:n.features,o=S(n),l=e.defaultSymbol?.color?.toRgb(),u=e.uniqueValueInfos;if(u)if(s){if(o){const t=new Map;u.forEach((e=>{const r=e.value,i=e.symbol?.color;null!=r&&i&&i.a&&t.set(String(r),i.toRgb())}));const i=e.field;s.forEach((({attributes:e})=>{const n=String(e[i]),a=e[o],s=t.get(n);s?r.push([a,...s]):l&&r.push([a,...l])}))}}else for(let e=0;e<u.length;e++){const t=u[e],i=t.symbol?.color,n=+t.value;if(i?.a){if(isNaN(n))return null;r.push([n,i.r,i.g,i.b])}}const p=i&&r.length>0?w(r,i):r,c=new(0,a.default);return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=p,c.variableName="Raster",t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:g(c)}):c}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:i}=t,n=i?w(r,i):r,s=new(0,a.default);return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new(0,a.default)({rasterFunctionDefinition:g(s)}):s}(e,t);case"vector-field":return function(e,t){const r=new(0,a.default);r.functionName="VectorFieldRenderer";const{dataType:i,bandNames:n}=t,s="vector-uv"===i;let o,l;if(n&&2===n.length){const e=n.map((e=>e.toLowerCase()));o=e.indexOf("magnitude"),l=e.indexOf("direction")}-1!==o&&null!==o||(o=0,l=1);const u="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,d=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new(0,p.default),y={magnitudeBandID:o,directionBandID:l,isUVComponents:s,referenceSystem:u,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:m[e.style.toLowerCase().replace("-","_")],minimumMagnitude:d.minDataValue,maximumMagnitude:d.maxDataValue,minimumSymbolSize:d.minSize,maximumSymbolSize:d.maxSize};r.functionArguments=y;const f=g(r);return t.convertToRFT?a.default.fromJSON({rasterFunctionDefinition:f}):r}(e,t);case"raster-shaded-relief":return function(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new(0,a.default);const i=new(0,a.default);i.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,o={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude),3===s&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor),i.functionArguments=o,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?o.ColorRamp=(0,l.getRFxArgColorRampValue)(e.colorRamp):o.Colormap=(0,l.convertColorRampToColormap)(e.colorRamp)),r?new(0,a.default)({rasterFunctionDefinition:g(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function v(e){const t=e?.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?v(t.functionArguments):e}const R={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function w(e,t){const r=c.has(t)?(0,o.getPixelValueRange)(t):null;return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function S(e){if(null==e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function x(e){const t=[];return e?.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}function _(e){const t=[],r=[];return e.forEach((e=>{t.push(e[0]),r.push((0,l.convertRGBATo32Bit)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:r}}})),t.register("1mscU",(function(t,r){e(t.exports,"schema",(function(){return i}));const i={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}}})),t.register("lEHJu",(function(r,i){e(r.exports,"createSlices",(function(){return o})),e(r.exports,"getSliceIds",(function(){return l})),e(r.exports,"hasExcludedVariableOrDimension",(function(){return d})),e(r.exports,"intersectMultimensionalSubset",(function(){return y})),e(r.exports,"getDefaultVariablInfo",(function(){return f})),e(r.exports,"getDefaultMultidimensionalDefinition",(function(){return h})),e(r.exports,"isMultiSliceOrRangeDefinition",(function(){return g})),e(r.exports,"getSubsetVariablesFromMdInfo",(function(){return b})),e(r.exports,"getSliceIndex",(function(){return w}));var n=t("aX9sh"),a=t("1eHoq");function s(e,t,r){const i=t.shift();if(0===r.length){const e=[];r.push({sliceId:-1,multidimensionalDefinition:e})}const n=r.length;for(let t=0;t<n;t++){const t=r.shift().multidimensionalDefinition;i.values?.forEach((n=>{r.push({sliceId:-1,multidimensionalDefinition:[...t,{variableName:e,dimensionName:i.name,values:[n]}]})}))}t.length&&s(e,t,r)}function o(e,t){const r=[];let i=0;return(t?e.variables.filter((e=>e.name.toLowerCase()===t.toLowerCase())):[...e.variables].sort(((e,t)=>e.name>t.name?1:-1))).forEach((e=>{const t=[],n=[...e.dimensions].sort(((e,t)=>e.name>t.name?-1:1));s(e.name,n,t),t.forEach((e=>{r.push({...e,sliceId:i++})}))})),r}function l(e,t,r){let i=e;if(t&&(t=[...t].sort(((e,t)=>e.dimensionName<t.dimensionName?-1:1))).forEach((({dimensionName:e,values:t,isSlice:r})=>{t.length&&(i=i.filter((i=>{const n=i.multidimensionalDefinition.find((t=>t.dimensionName===e));if(null==n)return!1;const a=n.values[0];return"number"==typeof a?"number"==typeof t[0]?t.includes(a):t.some((e=>e[0]<=a&&e[1]>=a)):"number"==typeof t[0]?t.some((e=>a[0]<=e&&a[1]>=e)):r?t.some((e=>e[0]===a[0]&&e[0]===a[1])):t.some((e=>e[0]>=a[0]&&e[0]<=a[1]||e[1]>=a[0]&&e[1]<=a[1]||e[0]<a[0]&&e[1]>a[1]))})))})),i.length&&r&&null!=r.start&&null!=r.end){const e=r.start.getTime(),t=r.end.getTime(),n=i[0].multidimensionalDefinition.findIndex((e=>"StdTime"===e.dimensionName));n>-1&&(i=i.filter((r=>{const i=r.multidimensionalDefinition[n].values[0];return e<=i&&t>=i})))}return i.map((e=>e.sliceId))}function u(e,t){return Array.isArray(e)?t[0]===t[1]?e[0]===t[0]||e[1]===t[0]:e[0]>=t[0]&&e[0]<=t[1]&&e[1]>=t[0]&&e[1]<=t[1]:e>=t[0]&&e<=t[1]}function p(e,t){return e[0]<=t[0]&&e[1]>=t[0]||e[0]<=t[1]&&e[1]>=t[1]||e[0]>=t[0]&&e[1]<=t[1]}function c(e){return 1===e.length?[e[0],e[0]]:[e[0],e[e.length-1]]}function m(e,t,r){if(!t?.subsetDefinitions?.length)return e;let i;if(r){const{variables:n}=t;if(n.length&&!n.includes(r))return null;const a=t.subsetDefinitions.find((t=>t.dimensionName===e.name&&t.variableName===r));if(!a?.values?.length)return e;i=c(a.values)}else{i=t.dimensions.find((({name:t})=>t===e.name))?.extent}const n=i;if(!n||!n?.length)return e;const a=e.values.filter((e=>u(e,n)));return{...e,extent:[...n],values:a}}function d(e,t,r){if(!t?.subsetDefinitions?.length)return!1;const{variables:i}=t;if(i.length&&e.some((({variableName:e})=>e&&!i.includes(e))))return!0;for(let i=0;i<e.length;i++){const n=e[i],a=t.subsetDefinitions.find((e=>(""===n.variableName||e.variableName===n.variableName)&&e.dimensionName===n.dimensionName));if(a?.values.length){const e=c(a.values);if(n.isSlice||2!==n.values.length||Array.isArray(n.values[0])||n.values[0]===n.values[1]||!r){if(n.values.some((t=>!u(t,e))))return!0}else if(!p(n.values,e))return!0}}return!1}function y(e,t){if(null==e)return{isOutside:!1};const{geometry:r,timeExtent:i,multidimensionalDefinition:n}=t;let s=null;if(null!=i&&(s=function(e,t){const r=e.dimensions.find((({name:e})=>"StdTime"===e));if(null==r||null==t.start&&null==t.end)return t;t=t.clone();const{start:i,end:n}=t.toJSON(),s=i===n?[i]:null!=i&&null!=n?[i,n]:[i??n];return 2===s.length&&r?.extent.length&&(s[0]=Math.max(s[0],r.extent[0]),s[1]=Math.min(s[1],r.extent[1]??r.extent[0]),s[1]<s[0])||d([new(0,a.default)({variableName:"",dimensionName:"StdTime",isSlice:1===s.length,values:s})],e,!0)?null:(t.start=new Date(s[0]),t.end=new Date(s[1]??s[0]),t)}(e,i),null==s))return{isOutside:!0};const{areaOfInterest:o}=e;if(o&&r){const e="point"===r.type?r:"extent"===r.type?r.center:"polygon"===r.type?r.centroid:null;if(e&&!o.contains(e))return{isOutside:!0}}return null!=n&&n.length&&d(n,e,!0)?{isOutside:!0}:{isOutside:!1,intersection:{geometry:r,timeExtent:s,multidimensionalDefinition:n}}}function f(e,t={}){const{multidimensionalInfo:r,keyProperties:i}=e;if(null==r)return null;const{variableName:n,multidimensionalSubset:a,multidimensionalDefinition:s}=t,o=null!=s?s[0]?.variableName:null,l=n||o||i?.DefaultVariable;let{variables:u}=r;return a?.variables?.length&&(u=u.filter((({name:e})=>a.variables.includes(e)))),l?u.find((({name:e})=>e===l))??u[0]:u[0]}function h(e,t={}){const r=f(e,t);if(!r)return null;const i=[],{dimensions:n,name:s}=r;if(0===n.length)return[new(0,a.default)({variableName:s,dimensionName:"",values:[],isSlice:!0})];for(let e=0;e<n.length;e++){const r=m(n[e],t.multidimensionalSubset,s);if(!r)return null;const{values:o,extent:l}=r;let u=o?.[0]??l[0];"stdz"===r.name.toLowerCase()&&!r.hasRanges&&Math.abs(l[1])<=Math.abs(l[0])&&(u=o?.length?o[o.length-1]:l[1]),i.push(new(0,a.default)({variableName:s,dimensionName:r.name,values:[u],isSlice:!t.useRangeForRangedDimensionInfo||!!r.hasRanges}))}return i}function g(e){return!(null==e||!e.length)&&e.some((e=>{if(null==e.values)return!0;const t=e.values.length;return 0===t||t>1||!e.isSlice&&Array.isArray(e.values[0])}))}function b(e,t){if(null==t||null==e)return null;let r=t.variables.map((e=>({...e})));return e?.variables?.length&&(r=r.filter((({name:t})=>e.variables.includes(t))),r.forEach((t=>{t.dimensions=t.dimensions.map((r=>m(r,e,t.name))).filter(n.isSome)}))),r}function v(e,t){const{values:r}=t;if(r?.length){const t=Array.isArray(r[0]),i=Array.isArray(e);return t!==i?-1:t&&i?r.findIndex((t=>t[0]===e[0]&&t[1]===e[1])):r.indexOf(e)}const{extent:i}=t;if(Array.isArray(e)||e<i[0]||e>i[1])return-1;const n=t.interval||1;if("ISO8601"!==t.unit)return Math.round((e-i[0])/n);const a=i[0];let s=-1;switch(t.intervalUnit?.toLowerCase()||"seconds"){case"seconds":s=Math.round((e-a)/1e3/n);break;case"minutes":s=Math.round((e-a)/6e4/n);break;case"hours":s=Math.round((e-a)/36e5/n);break;case"days":s=Math.round((e-a)/864e5/n);break;case"months":{const t=new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear(),r=new Date(a).getUTCMonth(),i=new Date(e).getUTCMonth();s=0===t?i-r:i+11-r+12*(t-1)}break;case"years":s=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/n);break;case"decades":s=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/n)}return s}function R(e){let t=e.values?.length;if(t)return t;const{extent:r,unit:i}=e,n=e.interval||1,a=r?r[1]-r[0]:0;if("ISO8601"!==i)return Math.round(a/n);switch(e.intervalUnit?.toLowerCase()??"seconds"){case"seconds":t=Math.round(a/1e3/n);break;case"minutes":t=Math.round(a/6e4/n);break;case"hours":t=Math.round(a/36e5/n);break;case"days":t=Math.round(a/864e5/n);break;case"months":{const e=new Date(r[1]).getUTCFullYear()-new Date(r[0]).getUTCFullYear(),i=new Date(r[0]).getUTCMonth(),n=new Date(r[1]).getUTCMonth();t=0===e?n-i+1:n+11-i+12*(e-1)+1}break;case"years":t=Math.round((new Date(r[1]).getUTCFullYear()-new Date(r[0]).getUTCFullYear())/n);break;case"decades":t=Math.round((new Date(r[1]).getUTCFullYear()-new Date(r[0]).getUTCFullYear())/10/n);break;default:t=0}return t}function w(e,t){let r=0;const i=e[0].variableName,n=[...t.variables].sort(((e,t)=>e.name>t.name?1:-1));for(let t=0;t<n.length;t++){const a=n[t],s=[...a.dimensions].sort(((e,t)=>e.name>t.name?-1:1));if(a.name!==i){r+=s.map((e=>R(e))).reduce(((e,t)=>e*t));continue}const o=s.map((e=>R(e))),l=s.length;for(let t=0;t<l;t++){const i=e.find((e=>e.dimensionName===s[t].name));if(null==i)return null;const n=v(i.values[0],s[t]);if(-1===n)return null;o.shift(),r+=t===l-1?n:n*o.reduce(((e,t)=>e*t))}break}return r}})),t.register("j1HM6",(function(r,i){e(r.exports,"computeAngles",(function(){return b})),e(r.exports,"getImageSpatialReferenceQueryParameter",(function(){return C})),e(r.exports,"computePixelSpaceLocations",(function(){return v})),e(r.exports,"computeStatisticsHistograms",(function(){return R})),e(r.exports,"computeHistograms",(function(){return w})),e(r.exports,"getSamples",(function(){return S})),e(r.exports,"identify",(function(){return x})),e(r.exports,"measureHeight",(function(){return _})),e(r.exports,"measureAreaAndPerimeter",(function(){return I})),e(r.exports,"measurePointOrCentroid",(function(){return F})),e(r.exports,"measureDistanceAndAngle",(function(){return T})),t("ixrNB");var n=t("bYA0c"),a=t("hq5aB"),s=t("dgLSf"),o=t("4e3un"),l=t("8Iflr"),u=t("liCUS"),p=t("apnIy"),c=t("7r30z"),m=t("c9Znt"),d=t("7ZoUb"),y=t("1dg0h"),f=t("jaaCV");function h(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null==t.end||r.includes(t.end)||r.push(t.end),e.time=r.join(",")}}async function g(e,t,r){const i=(0,s.parseUrl)(e),n=t.geometry?[t.geometry]:[],o=await(0,a.normalizeCentralMeridian)(n),l=t.toJSON();h(l);const u=o&&o[0];null!=u&&(l.geometry=u.toJSON());const p=(0,s.encode)({...i.query,f:"json",...l});return(0,s.asValidOptions)(p,r)}async function b(e,t,r){const i=t.toJSON();null!=i.angleName&&(i.angleName=i.angleName.join(",")),null!=t.point&&t.point.spatialReference?.imageCoordinateSystem&&(i.point.spatialReference=O(t.point.spatialReference)),null!=t.spatialReference&&t.spatialReference.imageCoordinateSystem&&(i.spatialReference=C(t.spatialReference));const a=(0,s.parseUrl)(e),l=(0,s.encode)({...a.query,f:"json",...i}),u=(0,s.asValidOptions)(l,r),{data:p}=await(0,n.default)(`${a.path}/computeAngles`,u);return p.spatialReference=p.spatialReference?null!=p.spatialReference.geodataXform?new(0,f.default)({wkid:0,imageCoordinateSystem:p.spatialReference}):f.default.fromJSON(p.spatialReference):null,"NaN"===p.north&&(p.north=null),"NaN"===p.up&&(p.up=null),new(0,o.default)(p)}async function v(e,t,r){const i=t.toJSON(),{geometries:a}=t;if(a)for(let e=0;e<a.length;e++)a[e].spatialReference?.imageCoordinateSystem&&(i.geometries.geometries[e].spatialReference=O(a[e].spatialReference));const o=(0,s.parseUrl)(e),l=(0,s.encode)({...o.query,f:"json",...i}),u=(0,s.asValidOptions)(l,r),{data:p}=await(0,n.default)(`${o.path}/computePixelLocation`,u);return m.default.fromJSON(p)}async function R(e,t,r){const i=await g(e,t,r),a=(0,s.parseUrl)(e),{data:o}=await(0,n.default)(`${a.path}/computeStatisticsHistograms`,i),{statistics:l}=o;return l?.length&&l.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:l,histograms:o.histograms}}async function w(e,t,r){const i=await g(e,t,r),a=(0,s.parseUrl)(e),{data:o}=await(0,n.default)(`${a.path}/computeHistograms`,i);return{histograms:o.histograms}}async function S(e,t,r){const i=t.toJSON();h(i),i.outFields?.length&&(i.outFields=i.outFields.join(","));const o=(await(0,a.normalizeCentralMeridian)(t.geometry))?.[0];null!=o&&(i.geometry=o.toJSON());const l=(0,s.parseUrl)(e),u=(0,s.encode)({...l.query,f:"json",...i}),p=(0,s.asValidOptions)(u,r),{data:c}=await(0,n.default)(`${l.path}/getSamples`,p),m=c?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return y.default.fromJSON({samples:m})}async function x(e,t,r){const i=(0,s.parseUrl)(e),o=t.geometry?[t.geometry]:[];return(0,a.normalizeCentralMeridian)(o).then((e=>{const a=t.toJSON(),o=e&&e[0];null!=o&&(a.geometry=JSON.stringify(o.toJSON()));const l=(0,s.encode)({...i.query,f:"json",...a}),u=(0,s.asValidOptions)(l,r);return(0,n.default)(i.path+"/identify",u)})).then((e=>c.default.fromJSON(e.data)))}async function _(e,t,r){const i=await N(e,t,[t.fromGeometry,t.toGeometry],r);return p.default.fromJSON(i)}async function I(e,t,r){const i=await N(e,t,[t.geometry],r);return l.default.fromJSON(i)}async function F(e,t,r){const i=await N(e,t,[t.geometry],r);return d.default.fromJSON(i)}async function T(e,t,r){const i=await N(e,t,[t.fromGeometry,t.toGeometry],r);return u.default.fromJSON(i)}async function N(e,t,r,i){const o=(0,s.parseUrl)(e),l=await(0,a.normalizeCentralMeridian)(r),u=t.toJSON();null!=l[0]&&(u.fromGeometry=JSON.stringify(D(l[0]))),null!=l[1]&&(u.toGeometry=JSON.stringify(D(l[1])));const p=(0,s.encode)({...o.query,f:"json",...u}),c=(0,s.asValidOptions)(p,i),{data:m}=await(0,n.default)(o.path+"/measure",c);return m}function D(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=O(e.spatialReference)),t}function O(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function C(e,t){const r=O(e),{icsid:i,icsns:n,wkid:a}=r;return null!=i?null==n||t?.toLowerCase().includes("/"+n.toLowerCase()+"/")?`0:${i}`:JSON.stringify(r):a?a.toString():JSON.stringify(r)}})),t.register("4e3un",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("j6uz9");t("ixrNB");var a=t("hO0an"),s=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("jaaCV");let u=class extends a.JSONSupport{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,n._)([(0,s.property)({type:Number,json:{write:!0}})],u.prototype,"north",void 0),(0,n._)([(0,s.property)({type:Number,json:{write:!0}})],u.prototype,"up",void 0),(0,n._)([(0,s.property)({type:l.default,json:{write:!0}})],u.prototype,"spatialReference",void 0),u=(0,n._)([(0,o.subclass)("esri.rest.support.ImageAngleResult")],u);const p=u})),t.register("8Iflr",(function(r,i){e(r.exports,"default",(function(){return u}));var n=t("j6uz9"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var s=t("qA6zg"),o=t("fz9mk");let l=class extends o.BaseImageMeasureResult{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,n._)([(0,a.property)({type:o.ImageMeasureResultAreaValue,json:{read:!0,write:!0}})],l.prototype,"area",void 0),(0,n._)([(0,a.property)({type:o.ImageMeasureResultLengthValue,json:{read:!0,write:!0}})],l.prototype,"perimeter",void 0),l=(0,n._)([(0,s.subclass)("esri.rest.support.ImageAreaResult")],l);const u=l})),t.register("fz9mk",(function(r,i){e(r.exports,"ImageMeasureResultLengthValue",(function(){return p})),e(r.exports,"ImageMeasureResultAreaValue",(function(){return c})),e(r.exports,"ImageMeasureResultAngleValue",(function(){return m})),e(r.exports,"BaseImageMeasureResult",(function(){return d}));var n=t("j6uz9"),a=t("hO0an"),s=t("zPXCh"),o=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var l=t("qA6zg");let u=class extends a.JSONSupport{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,n._)([(0,o.property)({type:Number,json:{read:!0,write:!0}})],u.prototype,"value",void 0),(0,n._)([(0,o.property)({type:String,json:{read:!0,write:!0}})],u.prototype,"displayValue",void 0),(0,n._)([(0,o.property)({type:Number,json:{read:!0,write:!0}})],u.prototype,"uncertainty",void 0),u=(0,n._)([(0,l.subclass)("esri.rest.support.ImageMeasureResultValue")],u);let p=class extends u{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,o.property)({type:String,json:{read:s.lengthUnitsJSONMap.read,write:s.lengthUnitsJSONMap.write}})],p.prototype,"unit",void 0),p=(0,n._)([(0,l.subclass)("esri.rest.support.ImageMeasureResultLengthValue")],p);let c=class extends u{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,o.property)({type:String,json:{read:s.areaUnitsJSONMap.read,write:s.areaUnitsJSONMap.write}})],c.prototype,"unit",void 0),c=(0,n._)([(0,l.subclass)("esri.rest.support.ImageMeasureResultAreaValue")],c);let m=class extends u{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,o.property)({type:String,json:{read:s.angleUnitsJSONMap.read,write:s.angleUnitsJSONMap.write}})],m.prototype,"unit",void 0),m=(0,n._)([(0,l.subclass)("esri.rest.support.ImageMeasureResultAngleValue")],m);let d=class extends a.JSONSupport{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,n._)([(0,o.property)({type:String,json:{read:!0,write:!0}})],d.prototype,"name",void 0),(0,n._)([(0,o.property)({type:String,json:{read:!0,write:!0}})],d.prototype,"sensorName",void 0),d=(0,n._)([(0,l.subclass)("esri.rest.support.BaseImageMeasureResult")],d)})),t.register("liCUS",(function(r,i){e(r.exports,"default",(function(){return u}));var n=t("j6uz9"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var s=t("qA6zg"),o=t("fz9mk");let l=class extends o.BaseImageMeasureResult{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,n._)([(0,a.property)({type:o.ImageMeasureResultLengthValue,json:{read:!0,write:!0}})],l.prototype,"distance",void 0),(0,n._)([(0,a.property)({type:o.ImageMeasureResultAngleValue,json:{read:!0,write:!0}})],l.prototype,"azimuthAngle",void 0),(0,n._)([(0,a.property)({type:o.ImageMeasureResultAngleValue,json:{read:!0,write:!0}})],l.prototype,"elevationAngle",void 0),l=(0,n._)([(0,s.subclass)("esri.rest.support.ImageDistanceResult")],l);const u=l})),t.register("apnIy",(function(r,i){e(r.exports,"default",(function(){return u}));var n=t("j6uz9"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var s=t("qA6zg"),o=t("fz9mk");let l=class extends o.BaseImageMeasureResult{constructor(){super(...arguments),this.height=null}};(0,n._)([(0,a.property)({type:o.ImageMeasureResultLengthValue,json:{read:!0,write:!0}})],l.prototype,"height",void 0),l=(0,n._)([(0,s.subclass)("esri.rest.support.ImageHeightResult")],l);const u=l})),t.register("7r30z",(function(r,i){e(r.exports,"default",(function(){return c}));var n=t("j6uz9"),a=t("hO0an"),s=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("dZxPT"),u=t("gEU1A");let p=class extends a.JSONSupport{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,s.property)({type:u.default,json:{write:!0}})],p.prototype,"catalogItems",void 0),(0,n._)([(0,s.property)({type:l.default,json:{write:!0}})],p.prototype,"location",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"name",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"objectId",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"processedValues",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"properties",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],p.prototype,"value",void 0),p=(0,n._)([(0,o.subclass)("esri.rest.support.ImageIdentifyResult")],p);const c=p})),t.register("c9Znt",(function(r,i){e(r.exports,"default",(function(){return u}));var n=t("j6uz9"),a=t("hO0an"),s=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg");let l=class extends a.JSONSupport{constructor(){super(...arguments),this.geometries=null}};(0,n._)([(0,s.property)({json:{write:!0}})],l.prototype,"geometries",void 0),l=(0,n._)([(0,o.subclass)("esri.rest.support.ImagePixelLocationResult")],l);const u=l})),t.register("7ZoUb",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("j6uz9");t("ixrNB");var a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var s=t("qA6zg"),o=t("fz9mk"),l=t("dZxPT");let u=class extends o.BaseImageMeasureResult{constructor(){super(...arguments),this.point=null}};(0,n._)([(0,a.property)({type:l.default,json:{name:"point.value",read:!0,write:!0}})],u.prototype,"point",void 0),u=(0,n._)([(0,s.subclass)("esri.rest.support.ImagePointResult")],u);const p=u})),t.register("1dg0h",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("j6uz9"),a=t("hO0an"),s=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("OQbxp");let u=class extends a.JSONSupport{constructor(){super(...arguments),this.samples=null}};(0,n._)([(0,s.property)({type:[l.default],json:{write:!0}})],u.prototype,"samples",void 0),u=(0,n._)([(0,o.subclass)("esri.rest.support.ImageSampleResult")],u);const p=u})),t.register("OQbxp",(function(r,i){e(r.exports,"default",(function(){return p}));var n=t("j6uz9"),a=t("hO0an"),s=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var o=t("qA6zg"),l=t("dZxPT");let u=class extends a.JSONSupport{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"attributes",void 0),(0,n._)([(0,s.property)({type:l.default,json:{write:!0}})],u.prototype,"location",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"locationId",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"rasterId",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"resolution",void 0),(0,n._)([(0,s.property)({json:{write:!0}})],u.prototype,"pixelValue",void 0),u=(0,n._)([(0,o.subclass)("esri.rest.support.ImageSample")],u);const p=u})),t.register("81dmF",(function(r,i){e(r.exports,"default",(function(){return d}));var n=t("j6uz9"),a=t("hO0an"),s=t("hTI69"),o=t("gHCNy");t("aX9sh"),t("5HTPH");var l,u=t("qA6zg"),p=t("es3Rl");const c={1:{id:1,rotation:0,mirrored:!1},2:{id:2,rotation:0,mirrored:!0},3:{id:3,rotation:180,mirrored:!1},4:{id:4,rotation:180,mirrored:!0},5:{id:5,rotation:-90,mirrored:!0},6:{id:6,rotation:90,mirrored:!1},7:{id:7,rotation:90,mirrored:!0},8:{id:8,rotation:-90,mirrored:!1}};let m=l=class extends a.JSONSupport{get orientationInfo(){const{exifInfo:e}=this,t=(0,p.getExifValue)({exifName:"Exif IFD0",tagName:"Orientation",exifInfo:e});return c[t]||null}clone(){return new l({contentType:this.contentType,exifInfo:this.exifInfo,id:this.id,globalId:this.globalId,keywords:this.keywords,name:this.name,parentGlobalId:this.parentGlobalId,parentObjectId:this.parentObjectId,size:this.size,url:this.url})}constructor(e){super(e),this.contentType=null,this.exifInfo=null,this.id=null,this.globalId=null,this.keywords=null,this.name=null,this.parentGlobalId=null,this.parentObjectId=null,this.size=null,this.url=null}};(0,n._)([(0,s.property)({type:String})],m.prototype,"contentType",void 0),(0,n._)([(0,s.property)()],m.prototype,"exifInfo",void 0),(0,n._)([(0,s.property)({readOnly:!0})],m.prototype,"orientationInfo",null),(0,n._)([(0,s.property)({type:o.Integer})],m.prototype,"id",void 0),(0,n._)([(0,s.property)({type:String})],m.prototype,"globalId",void 0),(0,n._)([(0,s.property)({type:String})],m.prototype,"keywords",void 0),(0,n._)([(0,s.property)({type:String})],m.prototype,"name",void 0),(0,n._)([(0,s.property)({json:{read:!1}})],m.prototype,"parentGlobalId",void 0),(0,n._)([(0,s.property)({json:{read:!1}})],m.prototype,"parentObjectId",void 0),(0,n._)([(0,s.property)({type:o.Integer})],m.prototype,"size",void 0),(0,n._)([(0,s.property)({json:{read:!1}})],m.prototype,"url",void 0),m=l=(0,n._)([(0,u.subclass)("esri.layers.support.AttachmentInfo")],m);const d=m})),t.register("es3Rl",(function(t,r){function i(e){const{exifInfo:t,exifName:r,tagName:i}=e;if(!t||!r||!i)return null;const n=t.find((e=>e.name===r));return n?function(e){const{tagName:t,tags:r}=e;if(!r||!t)return null;const i=r.find((e=>e.name===t));return i&&i.value||null}({tagName:i,tags:n.tags}):null}e(t.exports,"getExifValue",(function(){return i}))})),t.register("2lzbK",(function(r,i){e(r.exports,"getCatalogItemRasterInfo",(function(){return p}));var n=t("bYA0c"),a=t("2WnyR"),s=t("dZxPT"),o=t("cBr0g"),l=t("8tfgy"),u=t("dgLSf");async function p(e,t,r){const i=(0,u.parseUrl)(e),p=(0,u.encode)({...i?.query,f:"json"}),c=(0,u.asValidOptions)(p,r),m=`${i?.path}/${t}/info`,d=(0,n.default)(`${m}`,c),y=(0,n.default)(`${m}/keyProperties`,c),f=await Promise.allSettled([d,y]),h="fulfilled"===f[0].status?f[0].value.data:null,g="fulfilled"===f[1].status?f[1].value.data:null;let b=null;h.statistics?.length&&(b=h.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const v=a.default.fromJSON(h.extent),R=Math.ceil(v.width/h.pixelSizeX-.1),w=Math.ceil(v.height/h.pixelSizeY-.1),S=v.spatialReference,x=new(0,s.default)({x:h.pixelSizeX,y:h.pixelSizeY,spatialReference:S}),_=h.histograms?.length?h.histograms:null,I=new(0,l.default)({origin:h.origin,blockWidth:h.blockWidth,blockHeight:h.blockHeight,firstPyramidLevel:h.firstPyramidLevel,maximumPyramidLevel:h.maxPyramidLevel});return new(0,o.default)({width:R,height:w,bandCount:h.bandCount,extent:v,spatialReference:S,pixelSize:x,pixelType:h.pixelType.toLowerCase(),statistics:b,histograms:_,keyProperties:g,storageInfo:I})}})),t.register("4Ibru",(function(r,i){e(r.exports,"default",(function(){return y}));var n=t("j6uz9");t("ixrNB");var a,s=t("hO0an"),o=t("itGIg"),l=t("hTI69"),u=t("gHCNy"),p=t("qA6zg"),c=t("dZxPT"),m=t("jaaCV");let d=a=class extends s.JSONSupport{clone(){return new a((0,o.clone)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}};(0,n._)([(0,l.property)({type:[String],json:{name:"angleName",write:!0}})],d.prototype,"angleNames",void 0),(0,n._)([(0,l.property)({type:c.default,json:{write:!0}})],d.prototype,"point",void 0),(0,n._)([(0,l.property)({type:m.default,json:{write:!0}})],d.prototype,"spatialReference",void 0),(0,n._)([(0,l.property)({type:u.Integer,json:{write:!0}})],d.prototype,"rasterId",void 0),d=a=(0,n._)([(0,p.subclass)("esri.rest.support.ImageAngleParameters")],d);const y=d})),t.register("lf2bI",(function(r,i){e(r.exports,"default",(function(){return f}));var n=t("j6uz9"),a=t("ixrNB"),s=t("itGIg"),o=t("zPXCh"),l=t("hTI69");t("gHCNy");var u,p=t("qA6zg"),c=t("g9601"),m=t("86d4E"),d=t("g1Dp3");let y=u=class extends d.BaseImageMeasureParameters{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,m.getJsonType)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new u((0,s.clone)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}};(0,n._)([(0,l.property)({types:a.geometryTypes,json:{name:"fromGeometry",read:!0,write:!0}})],y.prototype,"geometry",void 0),(0,n._)([(0,c.writer)("geometry")],y.prototype,"writeGeometry",null),(0,n._)([(0,l.property)({type:d.measureOperationJSONMap.apiValues,json:{write:d.measureOperationJSONMap.write}})],y.prototype,"measureOperation",null),(0,n._)([(0,l.property)({json:{read:!0}})],y.prototype,"is3D",void 0),(0,n._)([(0,l.property)({type:String,json:{read:o.lengthUnitsJSONMap.read,write:o.lengthUnitsJSONMap.write}})],y.prototype,"linearUnit",void 0),(0,n._)([(0,l.property)({type:String,json:{read:o.areaUnitsJSONMap.read,write:o.areaUnitsJSONMap.write}})],y.prototype,"areaUnit",void 0),y=u=(0,n._)([(0,p.subclass)("esri.rest.support.ImageAreaParameters")],y);const f=y})),t.register("g1Dp3",(function(r,i){e(r.exports,"measureOperationJSONMap",(function(){return c})),e(r.exports,"BaseImageMeasureParameters",(function(){return m}));var n=t("j6uz9");t("ixrNB");var a=t("4jlRt"),s=t("hO0an"),o=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var l=t("qA6zg"),u=t("4wMGQ"),p=t("dZxPT");const c=new(0,a.JSONMap)({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let m=class extends s.JSONSupport{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};(0,n._)([(0,o.property)()],m.prototype,"type",void 0),(0,n._)([(0,o.property)({type:c.apiValues,json:{read:c.read,write:c.write}})],m.prototype,"measureOperation",void 0),(0,n._)([(0,o.property)({type:u.default,json:{write:!0}})],m.prototype,"mosaicRule",void 0),(0,n._)([(0,o.property)({type:p.default,json:{write:!0}})],m.prototype,"pixelSize",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],m.prototype,"raster",void 0),m=(0,n._)([(0,l.subclass)("esri.rest.support.BaseImageMeasureParameters")],m)})),t.register("77oqn",(function(r,i){e(r.exports,"default",(function(){return f}));var n=t("j6uz9");t("ixrNB");var a=t("itGIg"),s=t("zPXCh"),o=t("hTI69");t("gHCNy");var l,u=t("qA6zg"),p=t("g9601"),c=t("86d4E"),m=t("g1Dp3"),d=t("dZxPT");let y=l=class extends m.BaseImageMeasureParameters{writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,c.getJsonType)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new l((0,a.clone)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}};(0,n._)([(0,o.property)({type:d.default,json:{read:!0,write:!0}})],y.prototype,"fromGeometry",void 0),(0,n._)([(0,p.writer)("fromGeometry")],y.prototype,"writeFromGeometry",null),(0,n._)([(0,o.property)({type:d.default,json:{read:!0,write:!0}})],y.prototype,"toGeometry",void 0),(0,n._)([(0,o.property)({type:m.measureOperationJSONMap.apiValues,json:{write:m.measureOperationJSONMap.write}})],y.prototype,"measureOperation",null),(0,n._)([(0,o.property)({json:{read:!0}})],y.prototype,"is3D",void 0),(0,n._)([(0,o.property)({type:String,json:{read:s.lengthUnitsJSONMap.read,write:s.lengthUnitsJSONMap.write}})],y.prototype,"linearUnit",void 0),(0,n._)([(0,o.property)({type:String,json:{read:s.angleUnitsJSONMap.read,write:s.angleUnitsJSONMap.write}})],y.prototype,"angularUnit",void 0),y=l=(0,n._)([(0,u.subclass)("esri.rest.support.ImageDistanceParameters")],y);const f=y})),t.register("hgSkY",(function(r,i){e(r.exports,"default",(function(){return f}));var n=t("j6uz9");t("ixrNB");var a=t("itGIg"),s=t("zPXCh"),o=t("hTI69");t("gHCNy");var l,u=t("qA6zg"),p=t("g9601"),c=t("86d4E"),m=t("g1Dp3"),d=t("dZxPT");let y=l=class extends m.BaseImageMeasureParameters{writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,c.getJsonType)(e),t[r]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new l((0,a.clone)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}};(0,n._)([(0,o.property)({type:d.default,json:{read:!0}})],y.prototype,"fromGeometry",void 0),(0,n._)([(0,p.writer)("fromGeometry")],y.prototype,"writeFromGeometry",null),(0,n._)([(0,o.property)({type:d.default,json:{read:!0,write:!0}})],y.prototype,"toGeometry",void 0),(0,n._)([(0,o.property)({type:m.measureOperationJSONMap.apiValues,json:{write:m.measureOperationJSONMap.write}})],y.prototype,"measureOperation",null),(0,n._)([(0,o.property)({json:{read:!0}})],y.prototype,"operationType",void 0),(0,n._)([(0,o.property)({type:String,json:{read:s.lengthUnitsJSONMap.read,write:s.lengthUnitsJSONMap.write}})],y.prototype,"linearUnit",void 0),y=l=(0,n._)([(0,u.subclass)("esri.rest.support.ImageHeightParameters")],y);const f=y})),t.register("6ZLA3",(function(r,i){e(r.exports,"default",(function(){return v}));var n=t("j6uz9"),a=t("kURdk"),s=t("ks23W"),o=t("hO0an"),l=t("itGIg"),u=t("6TszD"),p=t("hTI69");t("gHCNy");var c,m=t("qA6zg"),d=t("g9601"),y=t("dZxPT"),f=t("86d4E"),h=t("4wMGQ"),g=t("043dQ");let b=c=class extends o.JSONSupport{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,f.getJsonType)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=h.default.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}get renderingRule(){return(0,s.deprecatedProperty)(u.default.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){(0,s.deprecatedProperty)(u.default.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}get renderingRules(){return(0,s.deprecatedProperty)(u.default.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(e){(0,s.deprecatedProperty)(u.default.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",e)}set rasterFunction(e){let t=e;t&&t.rasterFunction&&(t=g.default.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=null!=e.start?e.start.getTime():null,n=null!=e.end?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:`${i}`:null}}clone(){return new c((0,l.clone)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}};(0,n._)([(0,p.property)({json:{write:!0}})],b.prototype,"geometry",void 0),(0,n._)([(0,d.writer)("geometry")],b.prototype,"writeGeometry",null),(0,n._)([(0,p.property)({type:h.default,json:{write:!0}})],b.prototype,"mosaicRule",null),(0,n._)([(0,d.writer)("mosaicRule")],b.prototype,"writeMosaicRule",null),(0,n._)([(0,p.property)({type:g.default})],b.prototype,"renderingRule",null),(0,n._)([(0,p.property)({type:[g.default]})],b.prototype,"renderingRules",null),(0,n._)([(0,p.property)({type:g.default,json:{write:!0,name:"renderingRule"}})],b.prototype,"rasterFunction",null),(0,n._)([(0,d.writer)("rasterFunction")],b.prototype,"writeRasterFunction",null),(0,n._)([(0,p.property)({type:[g.default],json:{write:!0,name:"renderingRules"}})],b.prototype,"rasterFunctions",void 0),(0,n._)([(0,d.writer)("rasterFunctions")],b.prototype,"writeRasterFunctions",null),(0,n._)([(0,p.property)({type:y.default,json:{write:!0}})],b.prototype,"pixelSize",void 0),(0,n._)([(0,d.writer)("pixelSize")],b.prototype,"writePixelSize",null),(0,n._)([(0,p.property)({type:Boolean,json:{write:!0}})],b.prototype,"returnGeometry",void 0),(0,n._)([(0,p.property)({type:Boolean,json:{write:!0}})],b.prototype,"returnCatalogItems",void 0),(0,n._)([(0,p.property)({type:Boolean,json:{write:!0}})],b.prototype,"returnPixelValues",void 0),(0,n._)([(0,p.property)({type:Number,json:{write:!0}})],b.prototype,"maxItemCount",void 0),(0,n._)([(0,p.property)({type:a.default,json:{write:{target:"time"}}})],b.prototype,"timeExtent",void 0),(0,n._)([(0,d.writer)("timeExtent")],b.prototype,"writeTimeExtent",null),(0,n._)([(0,p.property)({json:{write:!0}})],b.prototype,"raster",void 0),(0,n._)([(0,p.property)({json:{write:!0}})],b.prototype,"viewId",void 0),(0,n._)([(0,p.property)({type:Boolean,json:{write:!0}})],b.prototype,"processAsMultidimensional",void 0),b=c=(0,n._)([(0,m.subclass)("esri.rest.support.ImageIdentifyParameters")],b);const v=b})),t.register("3GZv2",(function(r,i){e(r.exports,"default",(function(){return d}));var n=t("j6uz9");t("ixrNB");var a=t("hO0an"),s=t("hTI69"),o=t("gHCNy");t("aX9sh"),t("5HTPH");var l,u=t("qA6zg"),p=t("g9601"),c=t("dZxPT");let m=l=class extends a.JSONSupport{writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new l({geometries:this.geometries?.map((e=>e.clone()))??[],rasterId:this.rasterId})}constructor(){super(...arguments),this.geometries=null,this.rasterId=null}};(0,n._)([(0,s.property)({type:[c.default],json:{write:!0}})],m.prototype,"geometries",void 0),(0,n._)([(0,p.writer)("geometries")],m.prototype,"writeGeometry",null),(0,n._)([(0,s.property)({type:o.Integer,json:{write:!0}})],m.prototype,"rasterId",void 0),m=l=(0,n._)([(0,u.subclass)("esri.rest.support.ImagePixelLocationParameters")],m);const d=m})),t.register("iGc0i",(function(r,i){e(r.exports,"default",(function(){return y}));var n=t("j6uz9"),a=t("ixrNB"),s=t("itGIg"),o=t("hTI69");t("gHCNy");var l,u=t("qA6zg"),p=t("g9601"),c=t("86d4E"),m=t("g1Dp3");let d=l=class extends m.BaseImageMeasureParameters{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,c.getJsonType)(e),t[r]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new l((0,s.clone)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}};(0,n._)([(0,o.property)({types:a.geometryTypes,json:{name:"fromGeometry",read:c.fromJSON}})],d.prototype,"geometry",void 0),(0,n._)([(0,p.writer)("geometry")],d.prototype,"writeGeometry",null),(0,n._)([(0,o.property)({type:m.measureOperationJSONMap.apiValues,json:{read:m.measureOperationJSONMap.read,write:m.measureOperationJSONMap.write}})],d.prototype,"measureOperation",null),(0,n._)([(0,o.property)({json:{read:!0}})],d.prototype,"is3D",void 0),d=l=(0,n._)([(0,u.subclass)("esri.rest.support.ImagePointParameters")],d);const y=d})),t.register("a8bQi",(function(r,i){e(r.exports,"default",(function(){return v}));var n=t("j6uz9"),a=t("ixrNB"),s=t("kURdk"),o=t("hO0an"),l=t("itGIg"),u=t("hTI69");t("gHCNy");var p,c=t("qA6zg"),m=t("g9601"),d=t("86d4E"),y=t("4wMGQ"),f=t("8hgwR"),h=t("5vMQI"),g=t("dZxPT");let b=p=class extends o.JSONSupport{writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,d.getJsonType)(e),t[r]=e.toJSON())}set locations(e){if(e?.length){const t=new(0,h.default)({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new p((0,l.clone)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}};(0,n._)([(0,u.property)({types:a.geometryTypes,json:{read:d.fromJSON}})],b.prototype,"geometry",void 0),(0,n._)([(0,m.writer)("geometry")],b.prototype,"writeGeometry",null),(0,n._)([(0,u.property)()],b.prototype,"locations",null),(0,n._)([(0,u.property)({type:String,json:{type:f.interpolationKebab.jsonValues,read:f.interpolationKebab.read,write:f.interpolationKebab.write}})],b.prototype,"interpolation",void 0),(0,n._)([(0,u.property)({type:y.default,json:{write:!0}})],b.prototype,"mosaicRule",void 0),(0,n._)([(0,u.property)({type:[String],json:{write:!0}})],b.prototype,"outFields",void 0),(0,n._)([(0,u.property)({type:g.default,json:{write:!0}})],b.prototype,"pixelSize",void 0),(0,n._)([(0,u.property)({type:String,json:{write:!0}})],b.prototype,"raster",void 0),(0,n._)([(0,u.property)({type:Boolean,json:{write:!0}})],b.prototype,"returnFirstValueOnly",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],b.prototype,"sampleDistance",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],b.prototype,"sampleCount",void 0),(0,n._)([(0,u.property)({type:Number,json:{write:!0}})],b.prototype,"sliceId",void 0),(0,n._)([(0,u.property)({type:s.default,json:{read:{source:"time"},write:{target:"time"}}})],b.prototype,"timeExtent",void 0),b=p=(0,n._)([(0,c.subclass)("esri.rest.support.ImageSampleParameters")],b);const v=b})),t.register("kTdXv",(function(r,i){e(r.exports,"default",(function(){return d}));var n=t("j6uz9"),a=t("4jlRt"),s=t("hO0an"),o=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var l=t("8gk9b"),u=t("qA6zg");const p=new(0,a.JSONMap)({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),c=new(0,a.JSONMap)({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let m=class extends s.JSONSupport{set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}constructor(e){super(e),this.type="class-breaks-definition",this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null}};(0,n._)([(0,l.enumeration)({classBreaksDef:"class-breaks-definition"})],m.prototype,"type",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],m.prototype,"breakCount",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],m.prototype,"classificationField",void 0),(0,n._)([(0,o.property)({type:String,json:{read:p.read,write:p.write}})],m.prototype,"classificationMethod",void 0),(0,n._)([(0,o.property)({json:{write:!0}})],m.prototype,"normalizationField",void 0),(0,n._)([(0,o.property)({json:{read:c.read,write:c.write}})],m.prototype,"normalizationType",void 0),(0,n._)([(0,o.property)({value:null,json:{write:!0}})],m.prototype,"standardDeviationInterval",null),(0,n._)([(0,o.property)({value:null,json:{write:!0}})],m.prototype,"definedInterval",null),m=(0,n._)([(0,u.subclass)("esri.rest.support.ClassBreaksDefinition")],m);const d=m})),t.register("3iKpt",(function(r,i){e(r.exports,"createGenerateRendererClassBreaks",(function(){return s}));const n=t("6TszD").default.getLogger("esri.rest.support.generateRendererUtils");function a(e,t){return Number(e.toFixed(t))}function s(e){const{normalizationTotal:t}=e;return{classBreaks:o(e),normalizationTotal:t}}function o(e){const t=e.definition,{classificationMethod:r,normalizationType:i,definedInterval:n}=t,s=t.breakCount??1,o=[];let m=e.values;if(0===m.length)return[];m=m.sort(((e,t)=>e-t));const d=m[0],y=m[m.length-1];if("equal-interval"===r)if(m.length>=s){const e=(y-d)/s;let t=d;for(let r=1;r<s;r++){const n=a(d+r*e,6);o.push({minValue:t,maxValue:n,label:l(t,n,i)}),t=n}o.push({minValue:t,maxValue:y,label:l(t,y,i)})}else m.forEach((e=>{o.push({minValue:e,maxValue:e,label:l(e,e,i)})}));else if("natural-breaks"===r){const t=u(m),r=e.valueFrequency||t.valueFrequency,n=function(e,t,r){const i=e.length,n=[];r>i&&(r=i);for(let e=0;e<r;e++)n.push(Math.round(e*i/r-1));n.push(i-1);let a=p(n,e,t,r);return function(e,t,r,i,n,a){let s=0,o=0,l=0,u=0,p=!0;for(let m=0;m<2&&p;m++){0===m&&(p=!1);for(let m=0;m<a-1;m++)for(;r[m+1]+1!==r[m+2];){r[m+1]=r[m+1]+1;const a=c(m,r,i,n);l=a.sbMean,s=a.sbSdcm;const d=c(m+1,r,i,n);if(u=d.sbMean,o=d.sbSdcm,!(s+o<t[m]+t[m+1])){r[m+1]=r[m+1]-1;break}t[m]=s,t[m+1]=o,e[m]=l,e[m+1]=u,p=!0}for(let m=a-1;m>0;m--)for(;r[m]!==r[m-1]+1;){r[m]=r[m]-1;const a=c(m-1,r,i,n);l=a.sbMean,s=a.sbSdcm;const d=c(m,r,i,n);if(u=d.sbMean,o=d.sbSdcm,!(s+o<t[m-1]+t[m])){r[m]=r[m]+1;break}t[m-1]=s,t[m]=o,e[m-1]=l,e[m]=u,p=!0}}return p}(a.mean,a.sdcm,n,e,t,r)&&(a=p(n,e,t,r)),n}(t.uniqueValues,r,s);let f=d;for(let e=1;e<s;e++)if(t.uniqueValues.length>e){const r=a(t.uniqueValues[n[e]],6);o.push({minValue:f,maxValue:r,label:l(f,r,i)}),f=r}o.push({minValue:f,maxValue:y,label:l(f,y,i)})}else if("quantile"===r)if(m.length>=s&&d!==y){let e=d,t=Math.ceil(m.length/s),r=0;for(let n=1;n<s;n++){let a=t+r-1;a>m.length&&(a=m.length-1),a<0&&(a=0),o.push({minValue:e,maxValue:m[a],label:l(e,m[a],i)}),e=m[a],r+=t,t=Math.ceil((m.length-r)/(s-n))}o.push({minValue:e,maxValue:y,label:l(e,y,i)})}else{let e=-1;for(let t=0;t<m.length;t++){const r=m[t];r!==e&&(e=r,o.push({minValue:e,maxValue:r,label:l(e,r,i)}),e=r)}}else if("standard-deviation"===r){const e=function(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t/=e.length,t}(m),t=function(e,t){let r=0;for(let i=0;i<e.length;i++){const n=e[i];r+=(n-t)*(n-t)}return r/=e.length,Math.sqrt(r)}(m,e);if(0===t)o.push({minValue:m[0],maxValue:m[0],label:l(m[0],m[0],i)});else{const r=function(e,t,r,i,n){let a=Math.max(i-e,t-i)/n/r;return a=a>=1?1:a>=.5?.5:.25,a}(d,y,s,e,t)*t;let n=0,u=d;for(let t=s;t>=1;t--){const s=a(e-(t-.5)*r,6);o.push({minValue:u,maxValue:s,label:l(u,s,i)}),u=s,n++}let p=a(e+.5*r,6);o.push({minValue:u,maxValue:p,label:l(u,p,i)}),u=p,n++;for(let t=1;t<=s;t++)p=n===2*s?y:a(e+(t+.5)*r,6),o.push({minValue:u,maxValue:p,label:l(u,p,i)}),u=p,n++}}else if("defined-interval"===r){if(!n)return o;const e=m[0],t=m[m.length-1],r=Math.ceil((t-e)/n);let s=e;for(let t=1;t<r;t++){const r=a(e+t*n,6);o.push({minValue:s,maxValue:r,label:l(s,r,i)}),s=r}o.push({minValue:s,maxValue:t,label:l(s,t,i)})}return o}function l(e,t,r){let i=null;return i=e===t?r&&"percent-of-total"===r?e+"%":e.toString():r&&"percent-of-total"===r?e+"% - "+t+"%":e+" - "+t,i}function u(e){const t=[],r=[];let i=Number.MIN_VALUE,n=1,a=-1;for(let s=0;s<e.length;s++){const o=e[s];o===i?(n++,r[a]=n):null!==o&&(t.push(o),i=o,n=1,r.push(n),a++)}return{uniqueValues:t,valueFrequency:r}}function p(e,t,r,i){let n=[],a=[],s=[],o=0;const l=[],u=[];for(let n=0;n<i;n++){const i=c(n,e,t,r);l.push(i.sbMean),u.push(i.sbSdcm),o+=u[n]}let p,m=o,d=!0;for(;d||o<m;){d=!1,n=[];for(let t=0;t<i;t++)n.push(e[t]);for(let r=0;r<i;r++)for(let n=e[r]+1;n<=e[r+1];n++)if(p=t[n],r>0&&n!==e[r+1]&&Math.abs(p-l[r])>Math.abs(p-l[r-1]))e[r]=n;else if(r<i-1&&e[r]!==n-1&&Math.abs(p-l[r])>Math.abs(p-l[r+1])){e[r+1]=n-1;break}m=o,o=0,a=[],s=[];for(let n=0;n<i;n++){a.push(l[n]),s.push(u[n]);const i=c(n,e,t,r);l[n]=i.sbMean,u[n]=i.sbSdcm,o+=u[n]}}if(o>m){for(let t=0;t<i;t++)e[t]=n[t],l[t]=a[t],u[t]=s[t];o=m}return{mean:l,sdcm:u}}function c(e,t,r,i){let a=0,s=0;for(let n=t[e]+1;n<=t[e+1];n++){const e=i[n];a+=r[n]*e,s+=e}s<=0&&n.warn("Exception in Natural Breaks calculation");const o=a/s;let l=0;for(let n=t[e]+1;n<=t[e+1];n++)l+=i[n]*(r[n]-o)**2;return{sbMean:o,sbSdcm:l}}})),t.register("jNwbb",(function(t,r){function i(e,t){const{attributeTable:r,bandCount:i}=e;return!(null!=r||(n=e,!["u8","s8"].includes(n.pixelType)||null==n.statistics?.[0]?.min||null==n.statistics[0]?.max||1!==n.bandCount))||!(null==r||i>1)&&(!t||null!=r.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())));var n}function n(e){const{bandCount:t,dataType:r,pixelType:i}=e;return"elevation"===r||"generic"===r&&1===t&&("s16"===i||"s32"===i||"f32"===i||"f64"===i)}function a(e,t=!1){const{bandCount:r,colormap:i,pixelType:n}=e;return 1===r&&(!!i?.length||!t&&"u8"===n)}function s(e,t=!1){const{attributeTable:r,bandCount:i}=e;return 1===i&&(!t||null!=r||null!=e.histograms)}function o(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}function l(e){const{dataType:t}=e;return"vector-uv"===t||"vector-magdir"===t}e(t.exports,"isUVRendererSupported",(function(){return i})),e(t.exports,"isShadedReliefRendererSupported",(function(){return n})),e(t.exports,"isColormapRendererSupported",(function(){return a})),e(t.exports,"isClassBreaksSupported",(function(){return s})),e(t.exports,"isVectorFieldRendererSupported",(function(){return o})),e(t.exports,"isFlowRendererSupported",(function(){return l}))}));
//# sourceMappingURL=ImageryLayer.fdc4dfa4.js.map
