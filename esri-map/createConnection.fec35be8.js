function e(e,t,r,s){Object.defineProperty(e,t,{get:r,set:s,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("eS3Xr",(function(r,s){e(r.exports,"createConnection",(function(){return a}));var o=t("8yYU2"),n=t("c7Tt0"),i=t("8UH3F");function a(e,t,r,s,a,c,u,l){const d={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:a,maxReconnectionAttempts:c,maxReconnectionInterval:u,customParameters:l};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new(0,n.WebSocketConnection)(d):new(0,o.default)(d):new(0,i.ClientSideConnection)(d)}})),t.register("8yYU2",(function(r,s){e(r.exports,"default",(function(){return w}));var o=t("j6uz9");t("ixrNB");var n=t("bYA0c"),i=t("bPmsI"),a=t("6TszD"),c=t("lHg4e"),u=t("7dRCe");t("gHCNy"),t("aX9sh"),t("5HTPH");var l=t("qA6zg"),d=t("c7Tt0"),f=t("6ljp4"),h=t("gC5jC"),g=t("86d4E"),y=t("jaaCV");const p={maxQueryDepth:5,maxRecordCountFactor:3};let _=class extends d.WebSocketConnection{async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.default.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),null!=this._featureZScaler&&this._featureZScaler(t.geometry)}catch(e){return void a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Failed to parse message",e))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=(0,n.default)(e.path,{query:t,responseType:"json"}),s=(await r).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return(0,u.addQueryParameters)(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(1===e.length)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(null==r||null==e&&null==t)return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=(0,c.createResolver)();return r.onmessage=e=>{const t=JSON.parse(e.data);t.filter&&(t.error&&(a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Failed to set service filter",t.error)),this._set("errorString",`Could not set service filter - ${t.error}`),n.reject(t.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())},r.send(s),setTimeout((()=>{o||(this.destroyed||this._websocket!==r||a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Server timed out when setting filter")),n.reject())}),1e4),n.promise}_serializeFilter(e,t){const r={};if(null==e&&null==t)return r;if(null!=e&&e.geometry)try{const t=(0,g.fromJSON)(e.geometry);if("extent"!==t.type)throw new(0,i.default)(`Expected extent but found type ${t.type}`);r.geometry=JSON.stringify(t.shiftCentralMeridian())}catch(e){a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Encountered an error when setting connection geometryDefinition",e))}return null!=e&&e.where&&"1 = 1"!==e.where&&"1=1"!==e.where&&(r.where=e.where),null!=t&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return a.default.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const t in o)e.attributes[t]=o[t];return n&&(e.geometry=n),e.geometry||e.centroid||a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const e of o.features)this.onFeature(this._enrich(e))}catch(e){a.default.getLogger(this).error(new(0,i.default)("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const r=new((await Promise.resolve(t("iaM5n"))).default)({url:e}),{capabilities:s}=await r.load(),o=s.query.supportsMaxRecordCountFactor,n=s.query.supportsPagination,i=s.query.supportsCentroid,a=this._config.maxRecordCountFactor,c=r.capabilities.query.maxRecordCount,u=o?c*a:c,l=new(0,h.default);if(l.outFields=this._config.outFields??["*"],l.where=this._config.filter?.where??"1=1",l.returnGeometry=!0,l.returnExceededLimitFeatures=!0,l.outSpatialReference=y.default.fromJSON(this._config.spatialReference),i&&(l.returnCentroid=!0),o&&(l.maxRecordCountFactor=a),n)return l.num=u,r.destroy(),this._queryPages(e,l);const d=await(0,f.executeQuery)(e,l,this._config.sourceSpatialReference);return r.destroy(),d.data}async _queryPages(e,t,r=[],s=0){t.start=null!=t.num?s*t.num:null;const{data:o}=await(0,f.executeQuery)(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach((e=>r.push(e))),this._queryPages(e,t,r,s+1)):(r.forEach((e=>o.features.push(e))),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const e of r){const r=e.attributes[s];t.set(r,e)}this._relatedFeatures=t}constructor(e){super({...p,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}};_=(0,o._)([(0,l.subclass)("esri.layers.graphics.sources.connections.GeoEventConnection")],_);const w=_})),t.register("c7Tt0",(function(r,s){e(r.exports,"WebSocketConnection",(function(){return y}));var o=t("j6uz9"),n=t("bPmsI"),i=t("6TszD"),a=t("lHg4e"),c=t("7dRCe"),u=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var l,d,f=t("qA6zg"),h=t("1vzSt"),g=t("e8j80");(d=l||(l={}))[d.CONNECTING=0]="CONNECTING",d[d.OPEN=1]="OPEN",d[d.CLOSING=2]="CLOSING",d[d.CLOSED=3]="CLOSED";let y=class extends g.default{async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),null!=this._websocket&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(null==this._websocket)return"disconnected";switch(this._websocket.readyState){case l.CONNECTING:case l.OPEN:return"connected";case l.CLOSING:case l.CLOSED:return"disconnected"}}sendMessageToSocket(e){null!=this._websocket?this._websocket.send(JSON.stringify(e)):this._outstandingMessages.push(e)}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,null!=this._websocket&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const t=(0,c.addQueryParameters)(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(s){const o=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(i.default.getLogger(this).error(new(0,n.default)("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(i.default.getLogger(this).error(new(0,n.default)("websocket-connection",`Failed to connect. Attempting to reconnect in ${o}s`,s)),await(0,a.after)(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=e=>{try{const t=JSON.parse(e.data);this._onMessage(t)}catch(e){return void i.default.getLogger(this).error(new(0,n.default)("websocket-connection","Failed to parse message, invalid JSON",{error:e}))}}}_createWebSocket(e){return new Promise(((t,r)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=e=>this._onClose(e),s.onerror=e=>this._onError(e),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=e=>{s.onopen=s.onclose=null,r(e)}}))}async _handshake(e=1e4){const t=this._websocket;if(null==t)return;const r=(0,a.createResolver)(),s=t.onmessage,{filter:o,outFields:c,spatialReference:u}=this._config;return r.timeout(e),t.onmessage=e=>{let a=null;try{a=JSON.parse(e.data)}catch(e){}a&&"object"==typeof a||(i.default.getLogger(this).error(new(0,n.default)("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),r.reject(),this.destroy()),a.spatialReference?.wkid!==u?.wkid&&(i.default.getLogger(this).error(new(0,n.default)("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${u.wkid}`,e.data)),r.reject(),this.destroy()),"json"!==a.format&&(i.default.getLogger(this).error(new(0,n.default)("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),r.reject(),this.destroy()),o&&a.filter!==o&&i.default.getLogger(this).error(new(0,n.default)("websocket-connection","Tried to set filter, but server doesn't support it")),c&&a.outFields!==c&&i.default.getLogger(this).error(new(0,n.default)("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=s;for(const e of this._outstandingMessages)t.send(JSON.stringify(e));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:o,outFields:c,format:"json",spatialReference:{wkid:u.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),i.default.getLogger(this).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&i.default.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}constructor(e){super(),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=(0,h.getGeometryZScaler)(t,s,r),this._open()}};(0,o._)([(0,u.property)()],y.prototype,"connectionStatus",null),(0,o._)([(0,u.property)()],y.prototype,"errorString",void 0),y=(0,o._)([(0,f.subclass)("esri.layers.graphics.sources.connections.WebSocketConnection")],y)})),t.register("e8j80",(function(r,s){e(r.exports,"default",(function(){return l}));var o=t("j6uz9"),n=t("bPmsI"),i=t("cS4u3"),a=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var c=t("qA6zg");let u=class extends i.default.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new(0,n.default)("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};(0,o._)([(0,a.property)({readOnly:!0})],u.prototype,"connectionError",null),u=(0,o._)([(0,c.subclass)("esri.layers.support.StreamConnection")],u);const l=u})),t.register("8UH3F",(function(r,s){e(r.exports,"ClientSideConnection",(function(){return u}));var o=t("j6uz9"),n=t("hTI69");t("gHCNy"),t("aX9sh"),t("5HTPH");var i=t("qA6zg"),a=t("1vzSt"),c=t("e8j80");let u=class extends c.default{updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}constructor(e){super(),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=(0,a.getGeometryZScaler)(t,s,r)}};(0,o._)([(0,n.property)()],u.prototype,"connectionStatus",void 0),(0,o._)([(0,n.property)()],u.prototype,"errorString",void 0),u=(0,o._)([(0,i.subclass)("esri.layers.support.ClientSideConnection")],u)}));
//# sourceMappingURL=createConnection.fec35be8.js.map
