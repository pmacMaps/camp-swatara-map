!function(){function e(e,t,a,r){Object.defineProperty(e,t,{get:a,set:r,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;t.register("hL96Y",(function(a,r){e(a.exports,"uploadAssets",(function(){return f}));var s=t("9pNSx"),o=t("kyj08"),n=t("jHOLN"),i=t("10vEZ"),l=t("kYueh"),u=t("9Rl0r"),c=t("hqLgT"),d=t("19uTx"),p=t("g1GYh");async function f(e,t,a){return e.length?Promise.all(e.map((e=>async function(e,{layer:t,ongoingUploads:a},r){const s=a.get(e);if(s)return s;if(!function(e){return!!e.infoFor3D&&!!e.url}(t))throw new(0,o.default)(`${t.type}-layer:upload-failure`,"Layer does not support asset uploads.",new Error);if(function(e,t){const{parsedUrl:a}=t;return null!=a&&e.metadata.externalSources.some((e=>(0,c.externalIsOnService)(e,a)))}(e,t))return e;const n=async function(e,t,a){const{metadata:r}=e,{displaySource:s}=r,n=y(null==s?void 0:s.source,t),l=!!n,c=r.externalSources.length>0,d=l?async function(e,t,a){return{source:await m(e,t,a),original:!0}}(n,t,a):c?async function(e,t,a){const r=b(t),{externalSources:s}=e.metadata,n=function(e,t){for(const a of e){const e=y(a.source,t);if(e)return e}return null}(s,t);if(!n)throw new(0,o.default)(`${t.type}-layer:upload-failure`,"Could not find an external source that is supported by the service.",new Error);const i=await m(n,t,a);return e.addExternalSources([{source:i,original:!0}]),{source:await g(i,t,r)}}(e,t,a):async function(e,t,a){const r=async function(e,t,a){const r=b(t),s=await e.load(a),o=await s.toBinaryGLTF({ignoreLocalTransform:!0});(0,i.throwIfAborted)(a);const n=await o.buffer();return(0,i.throwIfAborted)(a),{blob:new Blob([n.data],{type:n.type}),assetName:`${(0,u.generateBracedUUID)()}.glb`,assetType:r}}(e,t,a);return{source:await h([r],t,a),extent:e.extent.clone(),original:!0}}(e,t,a),p=await d;return(0,i.throwIfAborted)(a),e.addExternalSources([p]),e}(e,t,r);a.set(e,n);try{await n}finally{a.delete(e)}return e}(e,t,a)))):[]}function y(e,t){if(!e)return null;const{infoFor3D:{supportedFormats:a,editFormats:r}}=t,s=(0,c.externalSourceToMultiPart)(e),o=new Array;let n=!1;for(let e=0;e<s.length;++e){const t=w(s[e],a);if(!t)return null;r.includes(t.assetType)&&(n=!0),o.push(t)}return n?o:null}function w(e,t){const a=(0,c.assetFormatId)(e,t);return a?{asset:e,assetType:a}:null}async function m(e,t,a){return h(e.map((e=>async function(e,t){const{asset:a,assetType:r}=e;if(a instanceof File)return{blob:a,assetName:a.name,assetType:r};const s=await a.toBlob(t);return(0,i.throwIfAborted)(t),{blob:s,assetName:a.assetName,assetType:r}}(e,a))),t,a)}async function h(e,t,a){const r=await Promise.all(e.map((async e=>{const r=async function(e,t,a){const{blob:r,assetType:s,assetName:u}=e;let c=null;try{const e=await(0,d.uploadItem)({data:r,name:u},t.url,a);(0,i.throwIfAborted)(a),c={assetType:s,assetUploadId:e.itemID}}catch(e){(0,i.throwIfAbortError)(e),n.default.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!c){const e=await(0,l.parseData)(r);if((0,i.throwIfAborted)(a),!e.isBase64)throw new(0,o.default)(`${t.type}-layer:uploadAssets-failure`,"Expected gltf data in base64 format after conversion.",new Error);c={assetType:s,assetData:e.data}}if(!c)throw new(0,o.default)(`${t.type}-layer:uploadAssets-failure`,"Unable to prepare uploadAsset request options.",new Error);return{item:c,assetName:u}}(await e,t,a);return(0,i.throwIfAborted)(a),r})));(0,i.throwIfAborted)(a);const{uploadResults:u}=await async function(e,t,a){const r=await(0,s.default)((0,l.join)(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,i.throwIfAborted)(a),r.data.uploadResults.length!==e.length)throw new(0,o.default)(`${t.type}-layer:uploadAssets-failure`,`Bad response. Uploaded ${e.length} items and received ${r.data.uploadResults.length} results.`,new Error);return r.data}(r.map((({item:e})=>e)),t,a);return(0,i.throwIfAborted)(a),e.map(((e,a)=>function(e,t,a){const{success:r}=t;if(!r){const{error:r}=t;throw new(0,o.default)(`${a.type}-layer:upload-failure`,`Failed to upload mesh file ${e.assetName}. Error code: ${r.code}. Error message: ${r.messages}`,new Error)}const{assetHash:s}=t,{assetName:n,item:{assetType:i}}=e,{infoFor3D:{supportedFormats:l}}=a,u=(0,p.getFormatIdMimeType)(i,l);if(!u)throw new(0,o.default)(`${a.type}-layer:upload-failure`,`The service allowed us to upload an asset of FormatID ${i}, but it does not list it in its supported formats.`,new Error);return new(0,c.ServiceAsset)(n,u,[new(0,c.ServiceAssetPart)(`${a.parsedUrl.path}/assets/${s}`,s)])}(r[a],u[a],t)))}async function g(e,t,a){var r;const n=e.map((({assetName:e,parts:t})=>({assetName:e,assetHash:t[0].partHash}))),u=null===(r=t.capabilities)||void 0===r?void 0:r.operations.supportsAsyncConvert3D,d={query:{f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:a,async:u},responseType:"json",timeout:0},f=(0,l.join)(t.parsedUrl.path,"convert3D"),y=(u?await async function(e,t){const a=(await(0,s.default)(e,t)).data.statusUrl;for(;;){const e=(await(0,s.default)(a,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,s.default)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new(0,o.default)("async-convert3D-failed","asynchronous convert3D call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new(0,o.default)("async-convert3D-failed","asynchronous convert3D call failed (undefined response status)")}await(0,i.after)(T)}}(f,d):await(0,s.default)(f,d)).data,{infoFor3D:{supportedFormats:w}}=t;return y.assets.map((e=>{const a=(0,p.getMimeTypeFormatId)(e.contentType,w);if(!a)throw new(0,o.default)(`${t.type}-layer:upload-failure`,`The service allowed us to upload an asset of FormatID ${a}, but it does not list it in its supported formats.`,new Error);return new(0,c.ServiceAsset)(e.assetName,e.contentType,[new(0,c.ServiceAssetPart)(e.assetURL,e.assetHash)])}))}function b(e){var t;const{infoFor3D:a}=e,r=null!==(t=(0,p.getMimeTypeFormatId)("model/gltf-binary",a.supportedFormats))&&void 0!==t?t:(0,p.getFilenameFormatId)("glb",a.supportedFormats);if(!r)throw new(0,o.default)(`${e.type}-layer:upload-failure`,"Layer does not support glb.",new Error);return r}const T=1e3})),t.register("19uTx",(function(a,r){e(a.exports,"uploadItem",(function(){return c}));var s=t("9pNSx"),o=t("10vEZ"),n=t("kYueh"),i=t("lmu5w");const l=1e6,u=2e7;async function c({data:e,name:t,description:a},r,c){let d=null;try{const p=(0,n.join)(r,"uploads"),f=(0,n.join)(p,"info"),{data:y}=await(0,s.default)(f,{query:{f:"json"},responseType:"json"});(0,o.throwIfAborted)(c);const w=(0,i.isHostedAgolService)(r),m=y.maxUploadFileSize*l,h=w?2e9:m,g=w?Math.min(u,m):u;if(e.size>h)throw new Error("Data too large");const b=(0,n.join)(p,"register"),{data:T}=await(0,s.default)(b,{query:{f:"json",itemName:t,description:a},responseType:"json",method:"post"});if((0,o.throwIfAborted)(c),!T.success)throw new Error("Registration failed");const{itemID:A}=T.item;d=(0,n.join)(p,A);const I=(0,n.join)(d,"uploadPart"),j=Math.ceil(e.size/g),v=new Array;for(let t=0;t<j;++t)v.push(e.slice(t*g,Math.min((t+1)*g,e.size)));const E=v.slice().reverse(),F=new Array,x=async()=>{for(;0!==E.length;){const e=v.length-E.length,t=E.pop(),a=new FormData;a.append("f","json"),a.append("file",t),a.append("partId",`${e}`);const{data:r}=await(0,s.default)(I,{timeout:0,body:a,responseType:"json",method:"post"});if((0,o.throwIfAborted)(c),!r.success)throw new Error("Part upload failed")}};for(let e=0;e<3&&0!==E.length;++e)F.push(x());await Promise.all(F);const D=(0,n.join)(d,"commit"),{data:S}=await(0,s.default)(D,{query:{f:"json",parts:v.map(((e,t)=>t)).join(",")},responseType:"json",method:"post"});if((0,o.throwIfAborted)(c),!S.success)throw new Error("Commit failed");return S.item}catch(e){if(null!=d){const e=(0,n.join)(d,"delete");await(0,s.default)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw e}}}))}();
//# sourceMappingURL=uploadAssets.70b60da2.js.map
