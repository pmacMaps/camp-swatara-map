function t(t,e,i,s){Object.defineProperty(t,e,{get:i,set:s,enumerable:!0,configurable:!0})}var e=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire594f;e.register("1wOrp",(function(i,s){t(i.exports,"default",(function(){return m}));var n=e("j6uz9");e("5HTPH");var l,r=e("bPmsI"),o=e("hO0an"),a=e("itGIg"),h=e("6TszD"),f=e("1CpCt"),c=e("hTI69"),p=e("5ORF5"),u=e("qA6zg");const x=h.default.getLogger("esri.layers.support.PixelBlock");let d=l=class extends o.JSONSupport{static createEmptyBand(t,e){return new(l.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new(0,r.default)("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,n=this.pixels,r=this.width*this.height,o=n.length;let a,h,f;const c=[];for(let e=0;e<o;e++){f=l.createEmptyBand(t,r),a=n[e];for(let t=0;t<r;t++)h=a[t],f[t]=h>s?s:h<i?i:h;c.push(f)}this.pixels=c,this.pixelType=t}extractBands(t){if((0,f.isNone)(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some((t=>t>=this.pixels.length)),s=e===t.length&&!t.some(((t,e)=>t!==e));return i||s?this:new l({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new l({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=l.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const s=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=s?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,a.clone)(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:s}=this;if(!t||!s||!s.length)return void x.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let n,l,r,o;n=l=r=s[0],s.length>=3?(l=s[1],r=s[2]):2===s.length&&(l=s[1]);const a=new Uint32Array(t),h=this.width*this.height;if(n.length===h)if(e&&e.length===h)if(i)for(o=0;o<h;o++)e[o]&&(a[o]=e[o]<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)e[o]&&(a[o]=-16777216|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)a[o]=-16777216|r[o]<<16|l[o]<<8|n[o];else x.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:s}=this;if(!t||!e||!e.length)return void x.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const n=this.pixelType;let l=1,r=0,o=1;if(s&&s.length>0)r=s.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),o=s.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/o;else{let t=255;"s8"===n?(r=-128,t=127):"u16"===n?t=65535:"s16"===n?(r=-32768,t=32767):"u32"===n?t=4294967295:"s32"===n?(r=-2147483648,t=2147483647):"f32"===n?(r=-34e38,t=34e38):"f64"===n&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const a=new Uint32Array(t),h=this.width*this.height;let f,c,p,u,d;if(f=c=p=e[0],f.length!==h)return x.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),i&&i.length===h)for(u=0;u<h;u++)i[u]&&(a[u]=-16777216|(p[u]-r)*l<<16|(c[u]-r)*l<<8|(f[u]-r)*l);else for(u=0;u<h;u++)a[u]=-16777216|(p[u]-r)*l<<16|(c[u]-r)*l<<8|(f[u]-r)*l;else if(i&&i.length===h)for(u=0;u<h;u++)d=(f[u]-r)*l,i[u]&&(a[u]=-16777216|d<<16|d<<8|d);else for(u=0;u<h;u++)d=(f[u]-r)*l,a[u]=-16777216|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return x.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let s,n,l,r;s=n=l=e[0],e.length>=3?(n=e[1],l=e[2]):2===e.length&&(n=e[1]);const o=this.width*this.height;if(s.length!==o)return x.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(i&&i.length===o)for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1&i[r];else for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1}_calculateBandStatistics(t,e){let i=1/0,s=-1/0;const n=t.length;let l,r=0;if(e)for(l=0;l<n;l++)e[l]&&(r=t[l],i=r<i?r:i,s=r>s?r:s);else for(l=0;l<n;l++)r=t[l],i=r<i?r:i,s=r>s?r:s;return{minValue:i,maxValue:s}}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}};(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"width",void 0),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"height",void 0),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"pixelType",void 0),(0,n._)([(0,p.cast)("pixelType")],d.prototype,"castPixelType",null),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"validPixelCount",void 0),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"mask",void 0),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"maskIsAlpha",void 0),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"pixels",void 0),(0,n._)([(0,c.property)({json:{write:!0}})],d.prototype,"statistics",void 0),d=l=(0,n._)([(0,u.subclass)("esri.layers.support.PixelBlock")],d);const m=d})),e.register("2wUG0",(function(i,s){t(i.exports,"isValidPixelBlock",(function(){return r})),t(i.exports,"extractBands",(function(){return o})),t(i.exports,"createColormapLUT",(function(){return a})),t(i.exports,"colorize",(function(){return h})),t(i.exports,"lookupPixels",(function(){return f})),t(i.exports,"remapColor",(function(){return c})),t(i.exports,"mosaicPixelData",(function(){return p})),t(i.exports,"mosaic",(function(){return x})),t(i.exports,"setValidBoundary",(function(){return d})),t(i.exports,"split",(function(){return A})),t(i.exports,"getLocalArithmeticNorthRotations",(function(){return b})),t(i.exports,"approximateTransform",(function(){return T}));var n=e("1CpCt"),l=e("1wOrp");function r(t){return(0,n.isSome)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function o(t,e){if(!e?.length||!r(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new(0,l.default)({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function a(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let s=0;i[0][0]<0&&(s=i[0][0]);const n=Math.max(256,i[i.length-1][0]-s+1),l=new Uint8Array(4*n),r=[];let o,a=0,h=0;const f=5===i[0].length;if(n>65536)return i.forEach((t=>{r[t[0]-s]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:s,alphaSpecified:f};if(t.fillUnspecified)for(o=i[h],a=o[0]-s;a<n;a++)l[4*a]=o[1],l[4*a+1]=o[2],l[4*a+2]=o[3],l[4*a+3]=f?o[4]:255,a===o[0]-s&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-s),l[h]=o[1],l[h+1]=o[2],l[h+2]=o[3],l[h+3]=f?o[4]:255;return{indexedColormap:l,offset:s,alphaSpecified:f}}function h(t,e){if(!r(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),s=i.pixels;let n=i.mask;const l=i.width*i.height;if(1!==s.length)return t;const{indexedColormap:o,indexed2DColormap:a,offset:h,alphaSpecified:f}=e,c=o.length-1;let p=0;const u=s[0],x=new Uint8Array(u.length),d=new Uint8Array(u.length),m=new Uint8Array(u.length);let g,y=0;if(o)if(n)for(p=0;p<l;p++)n[p]&&(y=4*(u[p]-h),y<h||y>c?n[p]=0:(x[p]=o[y],d[p]=o[y+1],m[p]=o[y+2],n[p]=o[y+3]));else{for(n=new Uint8Array(l),p=0;p<l;p++)y=4*(u[p]-h),y<h||y>c?n[p]=0:(x[p]=o[y],d[p]=o[y+1],m[p]=o[y+2],n[p]=o[y+3]);i.mask=n}else if(n)for(p=0;p<l;p++)n[p]&&(g=a[u[p]],x[p]=g[0],d[p]=g[1],m[p]=g[2],n[p]=g[3]);else{for(n=new Uint8Array(l),p=0;p<l;p++)g=a[u[p]],x[p]=g[0],d[p]=g[1],m[p]=g[2],n[p]=g[3];i.mask=n}return i.pixels=[x,d,m],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=f,i}function f(t,e){if(!r(t))return null;const{pixels:i,mask:s}=t,n=t.width*t.height,o=i.length;let a=e.lut;const{offset:h}=e;let f,c;a&&1===a[0].length&&(a=i.map((()=>a)));const p=[];let u,x,d;if(h)if(null==s)for(f=0;f<o;f++){for(u=i[f],x=a[f],d=new Uint8Array(n),c=0;c<n;c++)d[c]=x[u[c]-h];p.push(d)}else for(f=0;f<o;f++){for(u=i[f],x=a[f],d=new Uint8Array(n),c=0;c<n;c++)s[c]&&(d[c]=x[u[c]-h]);p.push(d)}else if(null==s)for(f=0;f<o;f++){for(u=i[f],x=a[f],d=new Uint8Array(n),c=0;c<n;c++)d[c]=x[u[c]];p.push(d)}else for(f=0;f<o;f++){for(u=i[f],x=a[f],d=new Uint8Array(n),c=0;c<n;c++)s[c]&&(d[c]=x[u[c]]);p.push(d)}const m=new(0,l.default)({width:t.width,height:t.height,pixels:p,mask:s,pixelType:"u8"});return m.updateStatistics(),m}function c(t,e){if(!r(t))return null;const i=t.clone(),{pixels:s}=i,n=i.width*i.height,l=e.length,o=Math.floor(l/2),a=e[Math.floor(o)],h=s[0];let f,c,p,u,x,d,m=!1;const g=new Uint8Array(n),y=new Uint8Array(n),w=new Uint8Array(n);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(n),k.fill(A?255:1),i.mask=k),x=0;x<n;x++)if(k[x]){for(f=h[x],m=!1,d=o,c=a,p=0,u=l-1;u-p>1;){if(f===c.value){m=!0;break}f>c.value?p=d:u=d,d=Math.floor((p+u)/2),c=e[Math.floor(d)]}m||(f===e[p].value?(c=e[p],m=!0):f===e[u].value?(c=e[u],m=!0):f<e[p].value?(m=!1,c=null):f>e[p].value&&(f<e[u].value?(c=e[p],m=!0):u===l-1?(m=!1,c=null):(c=e[u],m=!0))),m?(g[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return i.pixels=[g,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function p(t,e){if(!t||0===t.length)return null;const i=t.find((t=>t.pixelBlock));if(!i||(0,n.isNone)(i.pixelBlock))return null;const s=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,l=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(s,l),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,o.map((t=>t.extent.xmin))),h=Math.min.apply(null,o.map((t=>t.extent.ymin))),f=Math.max.apply(null,o.map((t=>t.extent.xmax))),c=Math.max.apply(null,o.map((t=>t.extent.ymax))),p={x:Math.round((e.xmin-a)/s),y:Math.round((c-e.ymax)/l)},u={width:Math.round((f-a)/s),height:Math.round((c-h)/l)},d={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(u.width/i.pixelBlock.width)*Math.round(u.height/i.pixelBlock.height)!==o.length||p.x<0||p.y<0||u.width<d.width||u.height<d.height?null:{extent:e,pixelBlock:x(o.map((t=>t.pixelBlock)),u,{clipOffset:p,clipSize:d})}}function u(t,e,i,s,n,l){const{width:r,height:o}=i.block,{x:a,y:h}=i.offset,{width:f,height:c}=i.mosaic,p=function(t,e,i,s,n,l,r,o){return{xmin:n<=i*t?0:n<i*t+t?n-i*t:t,ymin:l<=s*e?0:l<s*e+e?l-s*e:e,xmax:n+r<=i*t?0:n+r<i*t+t?n+r-i*t:t,ymax:l+o<=s*e?0:l+o<s*e+e?l+o-s*e:e}}(r,o,s,n,a,h,f,c);let u=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth,e=r*l.resolutionX,i=l.startX+s*e,n=i+e;i<t&&n>t?x=l.rightPadding:i>=t&&(u=l.leftMargin-l.rightPadding,x=0)}if(p.xmax-=x,"number"!=typeof e)for(let i=p.ymin;i<p.ymax;i++){const l=(n*o+i-h)*f+(s*r-a)+u,c=i*r;for(let i=p.xmin;i<p.xmax;i++)t[l+i]=e[c+i]}else for(let i=p.ymin;i<p.ymax;i++){const l=(n*o+i-h)*f+(s*r-a)+u;for(let i=p.xmin;i<p.xmax;i++)t[l+i]=e}}function x(t,e,i={}){const{clipOffset:s,clipSize:o,alignmentInfo:a,blockWidths:h}=i;if(h)return function(t,e,i){const s=t.find((t=>(0,n.isSome)(t)));if((0,n.isNone)(s))return null;const o=t.some((t=>!(0,n.isSome)(t)||!!t.mask)),{width:a,height:h}=e,f=o?new Uint8Array(a*h):null,{blockWidths:c}=i,p=[],u=s.getPlaneCount(),x=l.default.getPixelArrayConstructor(s.pixelType);if(o)for(let e=0,i=0;e<t.length;i+=c[e],e++){const s=t[e];if(!r(s))continue;const n=s.mask;for(let t=0;t<h;t++)for(let l=0;l<c[e];l++)f[t*a+l+i]=null==n?255:n[t*s.width+l]}for(let e=0;e<u;e++){const i=new x(a*h);for(let s=0,n=0;s<t.length;n+=c[s],s++){const l=t[s];if(!r(l))continue;const o=l.pixels[e];if(null!=o)for(let t=0;t<h;t++)for(let e=0;e<c[s];e++)i[t*a+e+n]=o[t*l.width+e]}p.push(i)}const d=new(0,l.default)({width:a,height:h,mask:f,pixels:p,pixelType:s.pixelType});return d.updateStatistics(),d}(t,e,{blockWidths:h});const f=t.find((t=>r(t)));if((0,n.isNone)(f))return null;const c=o?o.width:e.width,p=o?o.height:e.height,x=f.width,d=f.height,m=e.width/x,g=e.height/d,y={offset:s||{x:0,y:0},mosaic:o||e,block:{width:x,height:d}},w=f.pixelType,k=l.default.getPixelArrayConstructor(w),A=f.pixels.length,M=[];let b,T,v;for(let e=0;e<A;e++){T=new k(c*p);for(let i=0;i<g;i++)for(let s=0;s<m;s++){const n=t[i*m+s];r(n)&&(b=n.pixels[e],u(T,b,y,s,i,a))}M.push(T)}if(t.some((t=>(0,n.isNone)(t)||t.mask&&t.mask.length>0))){v=new Uint8Array(c*p);for(let e=0;e<g;e++)for(let i=0;i<m;i++){const s=t[e*m+i];u(v,((0,n.isSome)(s)?s.mask:null)||(s?1:0),y,i,e,a)}}const B=new(0,l.default)({width:c,height:p,pixels:M,pixelType:w,mask:v});return B.updateStatistics(),B}function d(t,e,i){if(!r(t))return null;const{width:s,height:n}=t,l=e.x,o=e.y,a=i.width+l,h=i.height+o;if(l<0||o<0||a>s||h>n)return t;if(0===l&&0===o&&a===s&&h===n)return t;t.mask||(t.mask=new Uint8Array(s*n));const f=t.mask;for(let t=0;t<n;t++){const e=t*s;for(let i=0;i<s;i++)f[e+i]=t<o||t>=h||i<l||i>=a?0:1}return t.updateStatistics(),t}function m(t){if(0===t.size)return 0;let e=0,i=-1,s=0;const n=t.keys();let l=n.next();for(;!l.done;)s=t.get(l.value),s>e&&(i=l.value,e=s),l=n.next();return i}function g(t,e,i){if(0===i)return;const s=t.get(e);1===s?t.delete(e):t.set(e,s-1)}function y(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function w(t,e,i){let{x:s,y:n}=e;const{width:o,height:a}=i;if(0===s&&0===n&&a===t.height&&o===t.width)return t;const{width:h,height:f}=t,c=Math.max(0,n),p=Math.max(0,s),u=Math.min(s+o,h),x=Math.min(n+a,f);if(u<0||x<0||!r(t))return null;s=Math.max(0,-s),n=Math.max(0,-n);const{pixels:d,mask:m}=t,g=o*a,y=d.length,w=[];for(let e=0;e<y;e++){const i=d[e],r=l.default.createEmptyBand(t.pixelType,g);for(let t=c;t<x;t++){const e=t*h;let l=(t+n-c)*o+s;for(let t=p;t<u;t++)r[l++]=i[e+t]}w.push(r)}const k=new Uint8Array(g);for(let t=c;t<x;t++){const e=t*h;let i=(t+n-c)*o+s;for(let t=p;t<u;t++)k[i++]=m?m[e+t]:1}const A=new(0,l.default)({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function k(t,e=!0){if(!r(t))return null;const{pixels:i,width:s,height:n,mask:o,pixelType:a}=t,h=[],f=Math.round(s/2),c=Math.round(n/2),p=n-1,u=s-1;for(let t=0;t<i.length;t++){const r=i[t],o=l.default.createEmptyBand(a,f*c);let x=0;for(let t=0;t<n;t+=2)for(let i=0;i<s;i+=2){const n=r[t*s+i];if(e){const e=i===u?n:r[t*s+i+1],l=t===p?n:r[t*s+i+s],a=i===u?l:t===p?e:r[t*s+i+s+1];o[x++]=(n+e+l+a)/4}else o[x++]=n}h.push(o)}let x=null;if(o){x=new Uint8Array(f*c);let t=0;for(let i=0;i<n;i+=2)for(let n=0;n<s;n+=2){const l=o[i*s+n];if(e){const e=n===u?l:o[i*s+n+1],r=i===p?l:o[i*s+n+s],a=n===u?r:i===p?e:o[i*s+n+s+1];x[t++]=l*e*r*a?1:0}else x[t++]=l}}return new(0,l.default)({width:f,height:c,pixelType:a,pixels:h,mask:x})}function A(t,e,i){if(!r(t))return null;const{width:s,height:n}=e;let{width:l,height:o}=t;const a=new Map,h={x:0,y:0},f=null==i?1:1+i;let c=t;for(let t=0;t<f;t++){const i=Math.ceil(l/s),r=Math.ceil(o/n);for(let l=0;l<r;l++){h.y=l*n;for(let n=0;n<i;n++){h.x=n*s;const i=w(c,h,e);a.set(`${t}/${l}/${n}`,i)}}t<f-1&&(c=k(c)),l=Math.round(l/2),o=Math.round(o/2)}return a}function M(t,e,i,s,n=.5){const{width:l,height:r}=t,{width:o,height:a}=e,h=s.cols,f=s.rows,c=Math.ceil(o/h-.1/h),p=Math.ceil(a/f-.1/f);let u,x,d,m,g,y,w;const k=c*h,A=k*p*f,M=new Float32Array(A),b=new Float32Array(A),T=new Uint32Array(A),v=new Uint32Array(A);let B,U,C=0;for(let t=0;t<p;t++)for(let e=0;e<c;e++){u=12*(t*c+e),x=i[u],d=i[u+1],m=i[u+2],g=i[u+3],y=i[u+4],w=i[u+5];for(let i=0;i<f;i++){C=(t*f+i)*k+e*h,U=(i+.5)/f;for(let t=0;t<i;t++)B=(t+.5)/h,M[C+t]=(x*B+d*U+m)*l-n,b[C+t]=(g*B+y*U+w)*r-n,T[C+t]=Math.round(M[C+t]),v[C+t]=Math.round(b[C+t])}u+=6,x=i[u],d=i[u+1],m=i[u+2],g=i[u+3],y=i[u+4],w=i[u+5];for(let i=0;i<f;i++){C=(t*f+i)*k+e*h,U=(i+.5)/f;for(let t=i;t<h;t++)B=(t+.5)/h,M[C+t]=(x*B+d*U+m)*l-n,b[C+t]=(g*B+y*U+w)*r-n,T[C+t]=Math.round(M[C+t]),v[C+t]=Math.round(b[C+t])}}return{offsets_x:M,offsets_y:b,offsets_xi:T,offsets_yi:v,gridWidth:k}}function b(t,e){const{coefficients:i,spacing:s}=e,{offsets_x:n,offsets_y:l,gridWidth:r}=M(t,t,i,{rows:s[0],cols:s[1]},.5),{width:o,height:a}=t,h=new Float32Array(o*a),f=180/Math.PI;for(let t=0;t<a;t++)for(let e=0;e<o;e++){const i=t*r+e,s=0===t?i:i-r,c=t===a-1?i:i+r,p=n[s]-n[c],u=l[c]-l[s];if(isNaN(p)||isNaN(u))h[t*o+e]=90;else{let i=Math.atan2(u,p)*f;i=(360+i)%360,h[t*o+e]=i}}return h}function T(t,e,i,s,n="nearest"){if(!r(t))return null;"majority"===n&&(t=function(t){if(!r(t))return null;const e=t.clone(),{width:i,height:s,pixels:n,mask:l}=t,o=n[0],a=e.pixels[0];for(let t=2;t<s-1;t++){const e=new Map;for(let s=t-2;s<t+2;s++)for(let t=0;t<4;t++){const n=s*i+t;y(e,o[n],l?l[n]:1)}a[t*i]=m(e),a[t*i+1]=a[t*i+2]=a[t*i];let s=3;for(;s<i-1;s++){let n=(t-2)*i+s+1;y(e,o[n],l?l[n]:1),n=(t-1)*i+s+1,y(e,o[n],l?l[n]:1),n=t*i+s+1,y(e,o[n],l?l[n]:1),n=(t+1)*i+s+1,y(e,o[n],l?l[n]:1),n=(t-2)*i+s-3,g(e,o[n],l?l[n]:1),n=(t-1)*i+s-3,g(e,o[n],l?l[n]:1),n=t*i+s-3,g(e,o[n],l?l[n]:1),n=(t+1)*i+s-3,g(e,o[n],l?l[n]:1),a[t*i+s]=m(e)}a[t*i+s+1]=a[t*i+s]}for(let t=0;t<i;t++)a[t]=a[i+t]=a[2*i+t],a[(s-1)*i+t]=a[(s-2)*i+t];return e.updateStatistics(),e}(t));const{pixels:o,mask:a,pixelType:h}=t,f=t.width,c=t.height,p=l.default.getPixelArrayConstructor(h),u=o.length,{width:x,height:d}=e;let w=!1;for(let t=0;t<i.length;t+=3)-1===i[t]&&-1===i[t+1]&&-1===i[t+2]&&(w=!0);const{offsets_x:k,offsets_y:A,offsets_xi:b,offsets_yi:T,gridWidth:v}=M({width:f,height:c},e,i,s,"majority"===n?0:.5);let B;const U=(t,e,i)=>{const s=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let n=0;n<d;n++){B=n*v;for(let l=0;l<x;l++){if(k[B]<0||A[B]<0)t[n*x+l]=0;else if(i)t[n*x+l]=e[b[B]+T[B]*f];else{const i=Math.floor(k[B]),r=Math.floor(A[B]),o=Math.ceil(k[B]),h=Math.ceil(A[B]),c=k[B]-i,p=A[B]-r;if(!a||a[i+r*f]&&a[i+r*f]&&a[i+h*f]&&a[o+h*f]){const a=(1-c)*e[i+r*f]+c*e[o+r*f],u=(1-c)*e[i+h*f]+c*e[o+h*f];t[n*x+l]=(1-p)*a+p*u+s}else t[n*x+l]=e[b[B]+T[B]*f]}B++}}},C=[];let P;for(let t=0;t<u;t++)P=new p(x*d),U(P,o[t],"nearest"===n||"majority"===n),C.push(P);const _=new(0,l.default)({width:x,height:d,pixelType:h,pixels:C});if(a)_.mask=new Uint8Array(x*d),U(_.mask,a,!0);else if(w){_.mask=new Uint8Array(x*d);for(let t=0;t<x*d;t++)_.mask[t]=k[t]<0||A[t]<0?0:1}return _.updateStatistics(),_}}));
//# sourceMappingURL=RasterWorker.8b68961f.js.map
